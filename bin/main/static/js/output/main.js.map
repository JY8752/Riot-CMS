{"version":3,"sources":["../../../node_modules/riot/riot.esm.js","../../../node_modules/bianco.dom-to-array/index.next.js","../../../node_modules/bianco.query/index.next.js","../../../node_modules/@riotjs/hot-reload/index.js","../../../node_modules/node-libs-browser/node_modules/punycode/punycode.js","../../../node_modules/url/util.js","../../../node_modules/querystring-es3/decode.js","../../../node_modules/querystring-es3/encode.js","../../../node_modules/querystring-es3/index.js","../../../node_modules/url/url.js","../../../node_modules/@riotjs/route/route.esm.js","../../../node_modules/semantic-ui-riot/dist/semantic-ui-riot.min.js","pages/login.riot","components/sidebar.riot","components/app-header.riot","components/app-footer.riot","pages/dashboard.riot","pages/members.riot","pages/profile.riot","pages/stats.riot","components/app-route.riot","app.riot","../../../node_modules/tslib/tslib.es6.js","../../../src/internal/util/isFunction.ts","../../src/internal/config.ts","../../../src/internal/util/hostReportError.ts","../../src/internal/Observer.ts","../../../src/internal/util/isArray.ts","../../../src/internal/util/isObject.ts","../../../src/internal/util/errorObject.ts","../../../src/internal/util/tryCatch.ts","../../../src/internal/util/UnsubscriptionError.ts","../../src/internal/Subscription.ts","../../../src/internal/symbol/rxSubscriber.ts","../../src/internal/Subscriber.ts","../../../src/internal/util/canReportError.ts","../../../src/internal/util/toSubscriber.ts","../../../src/internal/symbol/observable.ts","../../../src/internal/util/noop.ts","../../../src/internal/util/pipe.ts","../../src/internal/Observable.ts","../../../src/internal/util/ObjectUnsubscribedError.ts","../../src/internal/SubjectSubscription.ts","../../src/internal/Subject.ts","../../../src/internal/operators/refCount.ts","../../../src/internal/observable/ConnectableObservable.ts","../../../src/internal/operators/groupBy.ts","../../src/internal/BehaviorSubject.ts","../../../src/internal/scheduler/Action.ts","../../../src/internal/scheduler/AsyncAction.ts","../../../src/internal/scheduler/QueueAction.ts","../../src/internal/Scheduler.ts","../../../src/internal/scheduler/AsyncScheduler.ts","../../../src/internal/scheduler/QueueScheduler.ts","../../../src/internal/scheduler/queue.ts","../../../src/internal/observable/empty.ts","../../../src/internal/util/isScheduler.ts","../../../src/internal/util/subscribeToArray.ts","../../../src/internal/observable/fromArray.ts","../../../src/internal/observable/scalar.ts","../../../src/internal/observable/of.ts","../../../src/internal/observable/throwError.ts","../../src/internal/Notification.ts","../../../src/internal/operators/observeOn.ts","../../src/internal/ReplaySubject.ts","../../src/internal/AsyncSubject.ts","../../../src/internal/util/Immediate.ts","../../../src/internal/scheduler/AsapAction.ts","../../../src/internal/scheduler/AsapScheduler.ts","../../../src/internal/scheduler/asap.ts","../../../src/internal/scheduler/async.ts","../../../src/internal/scheduler/AnimationFrameAction.ts","../../../src/internal/scheduler/AnimationFrameScheduler.ts","../../../src/internal/scheduler/animationFrame.ts","../../../src/internal/scheduler/VirtualTimeScheduler.ts","../../../src/internal/util/identity.ts","../../../src/internal/util/isObservable.ts","../../../src/internal/util/ArgumentOutOfRangeError.ts","../../../src/internal/util/EmptyError.ts","../../../src/internal/util/TimeoutError.ts","../../../src/internal/operators/map.ts","../../../src/internal/observable/bindCallback.ts","../../../src/internal/observable/bindNodeCallback.ts","../../src/internal/OuterSubscriber.ts","../../src/internal/InnerSubscriber.ts","../../../src/internal/util/subscribeToPromise.ts","../../../src/internal/symbol/iterator.ts","../../../src/internal/util/subscribeToIterable.ts","../../../src/internal/util/subscribeToObservable.ts","../../../src/internal/util/isArrayLike.ts","../../../src/internal/util/isPromise.ts","../../../src/internal/util/subscribeTo.ts","../../../src/internal/util/subscribeToResult.ts","../../../src/internal/observable/combineLatest.ts","../../../src/internal/util/isInteropObservable.ts","../../../src/internal/util/isIterable.ts","../../../src/internal/observable/fromPromise.ts","../../../src/internal/observable/fromIterable.ts","../../../src/internal/observable/fromObservable.ts","../../../src/internal/observable/from.ts","../../../src/internal/operators/mergeMap.ts","../../../src/internal/operators/mergeAll.ts","../../../src/internal/operators/concatAll.ts","../../../src/internal/observable/concat.ts","../../../src/internal/observable/defer.ts","../../../src/internal/observable/forkJoin.ts","../../../src/internal/observable/fromEvent.ts","../../../src/internal/observable/fromEventPattern.ts","../../../src/internal/observable/generate.ts","../../../src/internal/observable/iif.ts","../../../src/internal/util/isNumeric.ts","../../../src/internal/observable/interval.ts","../../../src/internal/observable/merge.ts","../../../src/internal/observable/never.ts","../../../src/internal/observable/onErrorResumeNext.ts","../../../src/internal/observable/pairs.ts","../../../src/internal/observable/race.ts","../../../src/internal/observable/range.ts","../../../src/internal/observable/timer.ts","../../../src/internal/observable/using.ts","../../../src/internal/observable/zip.ts","../src/index.ts","../../../src/internal/operators/audit.ts","../../../src/internal/operators/auditTime.ts","../../../src/internal/operators/buffer.ts","../../../src/internal/operators/bufferCount.ts","../../../src/internal/operators/bufferTime.ts","../../../src/internal/operators/bufferToggle.ts","../../../src/internal/operators/bufferWhen.ts","../../../src/internal/operators/catchError.ts","../../../src/internal/operators/combineAll.ts","../../../src/internal/operators/combineLatest.ts","../../../src/internal/operators/concat.ts","../../../src/internal/operators/concatMap.ts","../../../src/internal/operators/concatMapTo.ts","../../../src/internal/operators/count.ts","../../../src/internal/operators/debounce.ts","../../../src/internal/operators/debounceTime.ts","../../../src/internal/operators/defaultIfEmpty.ts","../../../src/internal/util/isDate.ts","../../../src/internal/operators/delay.ts","../../../src/internal/operators/delayWhen.ts","../../../src/internal/operators/dematerialize.ts","../../../src/internal/operators/distinct.ts","../../../src/internal/operators/distinctUntilChanged.ts","../../../src/internal/operators/distinctUntilKeyChanged.ts","../../../src/internal/operators/filter.ts","../../../src/internal/operators/tap.ts","../../../src/internal/operators/throwIfEmpty.ts","../../../src/internal/operators/take.ts","../../../src/internal/operators/elementAt.ts","../../../src/internal/operators/endWith.ts","../../../src/internal/operators/every.ts","../../../src/internal/operators/exhaust.ts","../../../src/internal/operators/exhaustMap.ts","../../../src/internal/operators/expand.ts","../../../src/internal/operators/finalize.ts","../../../src/internal/operators/find.ts","../../../src/internal/operators/findIndex.ts","../../../src/internal/operators/first.ts","../../../src/internal/operators/ignoreElements.ts","../../../src/internal/operators/isEmpty.ts","../../../src/internal/operators/takeLast.ts","../../../src/internal/operators/last.ts","../../../src/internal/operators/mapTo.ts","../../../src/internal/operators/materialize.ts","../../../src/internal/operators/scan.ts","../../../src/internal/operators/reduce.ts","../../../src/internal/operators/max.ts","../../../src/internal/operators/merge.ts","../../../src/internal/operators/mergeMapTo.ts","../../../src/internal/operators/mergeScan.ts","../../../src/internal/operators/min.ts","../../../src/internal/operators/multicast.ts","../../../src/internal/operators/onErrorResumeNext.ts","../../../src/internal/operators/pairwise.ts","../../../src/internal/util/not.ts","../../../src/internal/operators/partition.ts","../../../src/internal/operators/pluck.ts","../../../src/internal/operators/publish.ts","../../../src/internal/operators/publishBehavior.ts","../../../src/internal/operators/publishLast.ts","../../../src/internal/operators/publishReplay.ts","../../../src/internal/operators/race.ts","../../../src/internal/operators/repeat.ts","../../../src/internal/operators/repeatWhen.ts","../../../src/internal/operators/retry.ts","../../../src/internal/operators/retryWhen.ts","../../../src/internal/operators/sample.ts","../../../src/internal/operators/sampleTime.ts","../../../src/internal/operators/sequenceEqual.ts","../../../src/internal/operators/share.ts","../../../src/internal/operators/shareReplay.ts","../../../src/internal/operators/single.ts","../../../src/internal/operators/skip.ts","../../../src/internal/operators/skipLast.ts","../../../src/internal/operators/skipUntil.ts","../../../src/internal/operators/skipWhile.ts","../../../src/internal/operators/startWith.ts","../../../src/internal/observable/SubscribeOnObservable.ts","../../../src/internal/operators/subscribeOn.ts","../../../src/internal/operators/switchMap.ts","../../../src/internal/operators/switchAll.ts","../../../src/internal/operators/switchMapTo.ts","../../../src/internal/operators/takeUntil.ts","../../../src/internal/operators/takeWhile.ts","../../../src/internal/operators/throttle.ts","../../../src/internal/operators/throttleTime.ts","../../../src/internal/operators/timeInterval.ts","../../../src/internal/operators/timeoutWith.ts","../../../src/internal/operators/timeout.ts","../../../src/internal/operators/timestamp.ts","../../../src/internal/operators/toArray.ts","../../../src/internal/operators/window.ts","../../../src/internal/operators/windowCount.ts","../../../src/internal/operators/windowTime.ts","../../../src/internal/operators/windowToggle.ts","../../../src/internal/operators/windowWhen.ts","../../../src/internal/operators/withLatestFrom.ts","../../../src/internal/operators/zip.ts","../../../src/internal/operators/zipAll.ts","../../src/operators/index.ts","ng://@datorama/akita/datorama-akita.ts","ng://@datorama/akita/lib/actions.ts","ng://@datorama/akita/lib/hasEntity.ts","ng://@datorama/akita/lib/addEntities.ts","ng://@datorama/akita/lib/isNil.ts","ng://@datorama/akita/lib/coerceArray.ts","ng://@datorama/akita/lib/defaultIDKey.ts","ng://@datorama/akita/lib/entityActions.ts","ng://@datorama/akita/lib/root.ts","ng://@datorama/akita/lib/env.ts","ng://@datorama/akita/lib/isObject.ts","ng://@datorama/akita/lib/isArray.ts","ng://@datorama/akita/lib/getActiveEntities.ts","ng://@datorama/akita/lib/getInitialEntitiesState.ts","ng://@datorama/akita/lib/isDefined.ts","ng://@datorama/akita/lib/isEmpty.ts","ng://@datorama/akita/lib/isFunction.ts","ng://@datorama/akita/lib/isUndefined.ts","ng://@datorama/akita/lib/activeState.ts","ng://@datorama/akita/lib/removeEntities.ts","ng://@datorama/akita/lib/toEntitiesObject.ts","ng://@datorama/akita/lib/setEntities.ts","ng://@datorama/akita/lib/config.ts","ng://@datorama/akita/lib/deepFreeze.ts","ng://@datorama/akita/lib/dispatchers.ts","ng://@datorama/akita/lib/errors.ts","ng://@datorama/akita/lib/toBoolean.ts","ng://@datorama/akita/lib/isPlainObject.ts","ng://@datorama/akita/lib/storeConfig.ts","ng://@datorama/akita/lib/stores.ts","ng://@datorama/akita/lib/transaction.ts","ng://@datorama/akita/lib/store.ts","ng://@datorama/akita/lib/updateEntities.ts","ng://@datorama/akita/lib/entityStore.ts","ng://@datorama/akita/lib/sort.ts","ng://@datorama/akita/lib/arrayFind.ts","ng://@datorama/akita/lib/entitiesToArray.ts","ng://@datorama/akita/lib/entitiesToMap.ts","ng://@datorama/akita/lib/isString.ts","ng://@datorama/akita/lib/getEntity.ts","ng://@datorama/akita/lib/mapSkipUndefined.ts","ng://@datorama/akita/lib/queryConfig.ts","ng://@datorama/akita/lib/compareKeys.ts","ng://@datorama/akita/lib/query.ts","ng://@datorama/akita/lib/sortByOptions.ts","ng://@datorama/akita/lib/queryEntity.ts","ng://@datorama/akita/lib/filterNil.ts","ng://@datorama/akita/lib/getValueByString.ts","ng://@datorama/akita/lib/setValueByString.ts","ng://@datorama/akita/lib/persistState.ts","ng://@datorama/akita/lib/snapshotManager.ts","ng://@datorama/akita/lib/plugins/plugin.ts","ng://@datorama/akita/lib/plugins/paginator/paginatorPlugin.ts","ng://@datorama/akita/lib/plugins/persistForm/persistNgFormPlugin.ts","ng://@datorama/akita/lib/capitalize.ts","ng://@datorama/akita/lib/devtools.ts","ng://@datorama/akita/lib/plugins/entityCollectionPlugin.ts","ng://@datorama/akita/lib/plugins/stateHistory/stateHistoryPlugin.ts","ng://@datorama/akita/lib/plugins/stateHistory/entityStateHistoryPlugin.ts","ng://@datorama/akita/lib/plugins/dirtyCheck/dirtyCheckPlugin.ts","ng://@datorama/akita/lib/runStoreAction.ts","ng://@datorama/akita/lib/plugins/dirtyCheck/entityDirtyCheckPlugin.ts","ng://@datorama/akita/lib/guid.ts","ng://@datorama/akita/lib/toEntitiesIds.ts","ng://@datorama/akita/lib/resetStores.ts","ng://@datorama/akita/lib/isNumber.ts","ng://@datorama/akita/lib/arrayUpdate.ts","ng://@datorama/akita/lib/arrayAdd.ts","ng://@datorama/akita/lib/arrayUpsert.ts","ng://@datorama/akita/lib/not.ts","ng://@datorama/akita/lib/arrayRemove.ts","ng://@datorama/akita/lib/arrayToggle.ts","ng://@datorama/akita/lib/fp.ts","ng://@datorama/akita/lib/cacheable.ts","ng://@datorama/akita/lib/combineQueries.ts","ng://@datorama/akita/lib/entityService.ts","ng://@datorama/akita/lib/setLoading.ts","ng://@datorama/akita/lib/trackIdChanges.ts","service.js","libs.js","main.js"],"names":["dashToCamelCase","string","replace","_","c","toUpperCase","moveChildren","source","target","firstChild","appendChild","cleanNode","node","clearChildren","childNodes","children","Array","from","forEach","removeNode","parentNode","remove","removeChild","EACH","IF","SIMPLE","TAG","SLOT","bindingTypes","ATTRIBUTE","EVENT","TEXT","VALUE","expressionTypes","createTemplateMeta","componentTemplate","fragment","dom","cloneNode","avoidDOMInjection","iOF","indexOf","append","get","parent","start","end","before","isSelect","noSelection","child","insertBefore","selected","selectedIndex","call","querySelectorAll","eqeq","a","b","identity","O","moreNodes","moreStart","moreEnd","lessNodes","lessStart","lessEnd","compare","length","m","l","isReversed","futureNodes","futureEnd","currentNodes","currentStart","currentEnd","next","list","i","nextSibling","drop","DELETION","INSERTION","SKIP","SKIP_OND","HS","futureStart","futureChanges","currentChanges","k","minLen","link","tresh","nodes","slice","index","idxInOld","findK","newi","oldi","prev","diff","ptr","OND","rows","cols","d","r","pv","cv","pd","v","outer","diffIdx","applyDiff","currentLength","live","currentIndex","push","ktr","j","lo","hi","mid","smartDiff","dropChild","domdiff","options","currentSame","futureSame","checkType","element","type","isSvg","el","owner","ownerSVGElement","isTemplate","isNil","content","isFunction","value","isBoolean","isObject","UNMOUNT_SCOPE","Symbol","EachBinding","Object","seal","mount","scope","parentScope","update","placeholder","childrenMap","collection","evaluate","items","createPatch","newChildrenMap","batches","patch","values","fn","unmount","redundant","item","info","pop","template","context","mustFilterItem","condition","Boolean","extendScope","_ref","itemName","indexName","binding","getKey","root","isTemplateTag","Map","create","key","oldItem","clone","mustMount","meta","delete","set","_ref2","document","createTextNode","assign","createDOM","IfBinding","pristine","mustUnmount","create$1","_ref3","memoize","cache","cached","val","has","evaluateAttributeExpressions","attributes","reduce","acc","attribute","name","REMOVE_ATTRIBUTE","SET_ATTIBUTE","ElementProto","Element","prototype","isNativeHtmlProperty","hasOwnProperty","setAllAttributes","entries","_ref4","attributeExpression","removeAllAttributes","newAttributes","oldAttributes","newKeys","keys","filter","includes","removeAttribute","_ref5","oldValue","getMethod","normalizeValue","RE_EVENTS_PREFIX","getCallbackAndOptions","isArray","eventExpression","_ref6","normalizedEventName","removeEventListener","addEventListener","normalizeStringValue","getTextNode","childNodeIndex","nodeType","Node","COMMENT_NODE","textNode","replaceChild","textExpression","data","valueExpression","expression","expressions","Expression","apply","create$2","flattenCollectionMethods","methods","method","map","create$3","_ref7","extendParentScope","attr","SlotBinding","getTemplateScope","templateData","slots","find","_ref8","id","create$6","html","bindings","moveSlotInnerContent","mustRemoveRoot","slot","createSlot","_ref9","getTag","component","slotsToMarkup","slotBindings","_ref10","concat","TagBinding","tag","getComponent","keepRootTag","create$4","_ref11","fixTextExpressionsOffset","textExpressionsOffset","e","create$5","templateTagOffset","selector","redundantAttribute","querySelector","bindingExpressions","createHTMLTree","createElement","innerHTML","createSVGTree","container","svgNode","ownerDocument","importNode","window","DOMParser","parseFromString","documentElement","createDOMTree","injectDOM","createTemplateDOM","TemplateChunk","freeze","Error","Math","max","bindingsData","DOMBindings","__proto__","createBinding","createExpression","COMPONENTS_IMPLEMENTATION_MAP","DOM_COMPONENT_INSTANCE_PROPERTY","PLUGINS_SET","Set","IS_DIRECTIVE","VALUE_ATTRIBUTE","MOUNT_METHOD_KEY","UPDATE_METHOD_KEY","UNMOUNT_METHOD_KEY","SHOULD_UPDATE_KEY","ON_BEFORE_MOUNT_KEY","ON_MOUNTED_KEY","ON_BEFORE_UPDATE_KEY","ON_UPDATED_KEY","ON_BEFORE_UNMOUNT_KEY","ON_UNMOUNTED_KEY","PROPS_KEY","STATE_KEY","SLOTS_KEY","ROOT_KEY","IS_PURE_SYMBOL","for","PARENT_KEY_SYMBOL","ATTRIBUTES_KEY_SYMBOL","TEMPLATE_KEY_SYMBOL","globals","checkType$1","isFunction$1","noop","autobindMethods","bind","callOrAssign","constructor","defineProperty","enumerable","writable","configurable","defineProperties","properties","defineDefaults","defaults","ATTRIBUTE$1","VALUE$1","camelToDashCase","toLowerCase","dashToCamelCase$1","panic","message","evaluateAttributeExpressions$1","domToArray","els","test","toString","$","ctx","DOMattributesToObject","normalize","parseNodes","names","n","attrs","props","prop","setAttribute","CSS_BY_NAME","STYLE_NODE_SELECTOR","getStyleNode","style","head","cssManager","add","css","inject","join","curry","_len","arguments","_key","_len2","args","_key2","getName","tagName","COMPONENT_CORE_HELPERS","$$","PURE_COMPONENT_API","COMPONENT_LIFECYCLE_METHODS","MOCKED_TEMPLATE_INTERFACE","evaluateInitialProps","initialProps","bindDOMNodeToComponentObject","createCoreAPIMethods","mapFunction","componentTemplateFactory","components","createPureComponent","pureFactoryFunction","createComponent","exports","templateFn","createSubcomponents","componentAPI","defineComponent","state","preserveRoot","enhanceComponentAPI","createAttributeBindings","runPlugins","computeState","oldState","newState","addCssHook","newProps","mountComponent","componentName","compose","fns","f","g","DOM_COMPONENT_INSTANCE_PROPERTY$1","COMPONENTS_IMPLEMENTATION_MAP$1","PLUGINS_SET$1","register","unregister","keepRootElement","install","plugin","uninstall","implementation","_temp","pure","func","version","__","obj","module","qs","sep","eq","regexp","split","maxKeys","len","x","kstr","vstr","idx","substr","decodeURIComponent","xs","stringifyPrimitive","isFinite","undefined","objectKeys","ks","encodeURIComponent","res","decode","parse","require","encode","stringify","lexer","str","tokens","char","count","pattern","TypeError","code","charCodeAt","_a","prefixes","defaultPattern","escapeString","delimiter","result","path","tryConsume","mustConsume","nextType","consumeText","prefix","suffix","modifier","open","name_1","pattern_1","compile","tokensToFunction","reFlags","flags","_b","validate","matches","token","RegExp","optional","repeat","segment","typeOfMessage","String","sensitive","regexpToRegexp","groups","match","arrayToRegexp","paths","parts","pathToRegexp","stringToRegexp","tokensToRegexp","strict","_c","_d","endsWith","route","_i","tokens_1","mod","endToken","isEndDelimited","CANCEL","ruit","tasks","Promise","resolve","reject","run","queue","task","rest","done","then","cancel","reverse","API_METHODS","UNSUBSCRIBE_SYMBOL","UNSUBSCRIBE_METHOD","CANCEL_METHOD","createStream","modifiers","stream","input","dispatch","callbacks","erre","success","error","generator","addToCollection","deleteFromCollection","on","off","connect","err","return","clear","fork","hasWindow","isString","parseURL","URL","replaceBase","base","matchOrSkip","pathRegExp","joinStreams","dispatcherStream","receiverStream","panic$1","silentErrors","filterStrings","router","mergeOptions","toRegexp","toPath","params","toURL","exec","url","createURLStreamPipe","createRoute","URLStream","getCurrentRoute","currentRoute","getInitialRouteValue","routeHoc","onBeforeMount","onBeforeRoute","onRoute","callLifecycleProperty","onUnmounted","setBase","panic$2","manageEvents","evList","cb","WINDOW_EVENTS","CLICK_EVENT","DOWNLOAD_LINK_ATTRIBUTE","HREF_LINK_ATTRIBUTE","TARGET_SELF_LINK_ATTRIBUTE","LINK_TAG_NAME","HASH","RE_ORIGIN","getWindow","getDocument","getHistorty","history","getLocation","win","hist","location","onWindowEvent","normalizePath","href","onRouterPush","loc","doc","pushState","title","getLinkElement","isLinkNode","nodeName","isCrossOriginLink","isTargetSelfLink","isEventForbidden","event","which","metaKey","ctrlKey","shiftKey","defaultPrevented","isForbiddenLink","isHashLink","isInBase","onClick","preventDefault","initDomListeners","BASE_ATTRIBUTE_NAME","ON_STARTED_ATTRIBUTE_NAME","defer","requestAnimationFrame","setTimeout","cancelDefer","cancelAnimationFrame","clearTimeout","wasInitialized","routerHoc","getAttribute","teardown","onFirstRoute","onStartedAttr","deferred","getBase","baseAttr","protocol","host","errorMessages","username","password","errors","handleInputUsername","handleInputPassword","handleSubmit","inputUsername","inputPassword","service","login","handleLogout","logout","dropdownItems","label","header","default","icon","handleChange","tableData","age","gender","progressBars","ratings","total","scores","rate","score","bar","rating","Dashboard","Members","Profile","Stats","Login","Sidebar","AppHeader","AppFooter","AppRoute","isLoggedIn","onMounted","query","select","subscribe","extendStatics","setPrototypeOf","p","__extends","__assign","t","s","__rest","getOwnPropertySymbols","propertyIsEnumerable","__decorate","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__awaiter","thisArg","_arguments","P","fulfilled","step","rejected","adopt","__generator","body","y","sent","trys","ops","verb","iterator","op","__createBinding","o","k2","__exportStar","__values","__read","ar","__spread","__spreadArrays","il","jl","__await","__asyncGenerator","asyncIterator","q","resume","fulfill","settle","shift","__asyncDelegator","__asyncValues","__makeTemplateObject","cooked","raw","__importStar","__esModule","__importDefault","__classPrivateFieldGet","receiver","privateMap","__classPrivateFieldSet","tslib_1.__values","tslib_1.__extends","tslib_1.__assign","tslib_1.__decorate","tslib_1.__spread","store","serviceInstance","Router","Route","App","getElementById"],"mappings":"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","file":"main.js","sourceRoot":"../../../../js","sourcesContent":["/* Riot v4.11.0, @license MIT */\n/**\n * Convert a string from camel case to dash-case\n * @param   {string} string - probably a component tag name\n * @returns {string} component name normalized\n */\n\n/**\n * Convert a string containing dashes to camel case\n * @param   {string} string - input string\n * @returns {string} my-string -> myString\n */\nfunction dashToCamelCase(string) {\n  return string.replace(/-(\\w)/g, (_, c) => c.toUpperCase());\n}\n/**\n * Move all the child nodes from a source tag to another\n * @param   {HTMLElement} source - source node\n * @param   {HTMLElement} target - target node\n * @returns {undefined} it's a void method ¯\\_(ツ)_/¯\n */\n// Ignore this helper because it's needed only for svg tags\n\n\nfunction moveChildren(source, target) {\n  if (source.firstChild) {\n    target.appendChild(source.firstChild);\n    moveChildren(source, target);\n  }\n}\n/**\n * Remove the child nodes from any DOM node\n * @param   {HTMLElement} node - target node\n * @returns {undefined}\n */\n\n\nfunction cleanNode(node) {\n  clearChildren(node.childNodes);\n}\n/**\n * Clear multiple children in a node\n * @param   {HTMLElement[]} children - direct children nodes\n * @returns {undefined}\n */\n\n\nfunction clearChildren(children) {\n  Array.from(children).forEach(removeNode);\n}\n/**\n * Remove a node from the DOM\n * @param   {HTMLElement} node - target node\n * @returns {undefined}\n */\n\n\nfunction removeNode(node) {\n  const {\n    parentNode\n  } = node;\n  if (node.remove) node.remove();\n  /* istanbul ignore else */\n  else if (parentNode) parentNode.removeChild(node);\n}\n\nconst EACH = 0;\nconst IF = 1;\nconst SIMPLE = 2;\nconst TAG = 3;\nconst SLOT = 4;\nvar bindingTypes = {\n  EACH,\n  IF,\n  SIMPLE,\n  TAG,\n  SLOT\n};\nconst ATTRIBUTE = 0;\nconst EVENT = 1;\nconst TEXT = 2;\nconst VALUE = 3;\nvar expressionTypes = {\n  ATTRIBUTE,\n  EVENT,\n  TEXT,\n  VALUE\n};\n/**\n * Create the template meta object in case of <template> fragments\n * @param   {TemplateChunk} componentTemplate - template chunk object\n * @returns {Object} the meta property that will be passed to the mount function of the TemplateChunk\n */\n\nfunction createTemplateMeta(componentTemplate) {\n  const fragment = componentTemplate.dom.cloneNode(true);\n  return {\n    avoidDOMInjection: true,\n    fragment,\n    children: Array.from(fragment.childNodes)\n  };\n}\n\nconst {\n  indexOf: iOF\n} = [];\n\nconst append = (get, parent, children, start, end, before) => {\n  const isSelect = 'selectedIndex' in parent;\n  let noSelection = isSelect;\n\n  while (start < end) {\n    const child = get(children[start], 1);\n    parent.insertBefore(child, before);\n\n    if (isSelect && noSelection && child.selected) {\n      noSelection = !noSelection;\n      let {\n        selectedIndex\n      } = parent;\n      parent.selectedIndex = selectedIndex < 0 ? start : iOF.call(parent.querySelectorAll('option'), child);\n    }\n\n    start++;\n  }\n};\n\nconst eqeq = (a, b) => a == b;\n\nconst identity = O => O;\n\nconst indexOf = (moreNodes, moreStart, moreEnd, lessNodes, lessStart, lessEnd, compare) => {\n  const length = lessEnd - lessStart;\n  /* istanbul ignore if */\n\n  if (length < 1) return -1;\n\n  while (moreEnd - moreStart >= length) {\n    let m = moreStart;\n    let l = lessStart;\n\n    while (m < moreEnd && l < lessEnd && compare(moreNodes[m], lessNodes[l])) {\n      m++;\n      l++;\n    }\n\n    if (l === lessEnd) return moreStart;\n    moreStart = m + 1;\n  }\n\n  return -1;\n};\n\nconst isReversed = (futureNodes, futureEnd, currentNodes, currentStart, currentEnd, compare) => {\n  while (currentStart < currentEnd && compare(currentNodes[currentStart], futureNodes[futureEnd - 1])) {\n    currentStart++;\n    futureEnd--;\n  }\n\n  return futureEnd === 0;\n};\n\nconst next = (get, list, i, length, before) => i < length ? get(list[i], 0) : 0 < i ? get(list[i - 1], -0).nextSibling : before;\n\nconst remove = (get, children, start, end) => {\n  while (start < end) drop(get(children[start++], -1));\n}; // - - - - - - - - - - - - - - - - - - -\n// diff related constants and utilities\n// - - - - - - - - - - - - - - - - - - -\n\n\nconst DELETION = -1;\nconst INSERTION = 1;\nconst SKIP = 0;\nconst SKIP_OND = 50;\n\nconst HS = (futureNodes, futureStart, futureEnd, futureChanges, currentNodes, currentStart, currentEnd, currentChanges) => {\n  let k = 0;\n  /* istanbul ignore next */\n\n  let minLen = futureChanges < currentChanges ? futureChanges : currentChanges;\n  const link = Array(minLen++);\n  const tresh = Array(minLen);\n  tresh[0] = -1;\n\n  for (let i = 1; i < minLen; i++) tresh[i] = currentEnd;\n\n  const nodes = currentNodes.slice(currentStart, currentEnd);\n\n  for (let i = futureStart; i < futureEnd; i++) {\n    const index = nodes.indexOf(futureNodes[i]);\n\n    if (-1 < index) {\n      const idxInOld = index + currentStart;\n      k = findK(tresh, minLen, idxInOld);\n      /* istanbul ignore else */\n\n      if (-1 < k) {\n        tresh[k] = idxInOld;\n        link[k] = {\n          newi: i,\n          oldi: idxInOld,\n          prev: link[k - 1]\n        };\n      }\n    }\n  }\n\n  k = --minLen;\n  --currentEnd;\n\n  while (tresh[k] > currentEnd) --k;\n\n  minLen = currentChanges + futureChanges - k;\n  const diff = Array(minLen);\n  let ptr = link[k];\n  --futureEnd;\n\n  while (ptr) {\n    const {\n      newi,\n      oldi\n    } = ptr;\n\n    while (futureEnd > newi) {\n      diff[--minLen] = INSERTION;\n      --futureEnd;\n    }\n\n    while (currentEnd > oldi) {\n      diff[--minLen] = DELETION;\n      --currentEnd;\n    }\n\n    diff[--minLen] = SKIP;\n    --futureEnd;\n    --currentEnd;\n    ptr = ptr.prev;\n  }\n\n  while (futureEnd >= futureStart) {\n    diff[--minLen] = INSERTION;\n    --futureEnd;\n  }\n\n  while (currentEnd >= currentStart) {\n    diff[--minLen] = DELETION;\n    --currentEnd;\n  }\n\n  return diff;\n}; // this is pretty much the same petit-dom code without the delete map part\n// https://github.com/yelouafi/petit-dom/blob/bd6f5c919b5ae5297be01612c524c40be45f14a7/src/vdom.js#L556-L561\n\n\nconst OND = (futureNodes, futureStart, rows, currentNodes, currentStart, cols, compare) => {\n  const length = rows + cols;\n  const v = [];\n  let d, k, r, c, pv, cv, pd;\n\n  outer: for (d = 0; d <= length; d++) {\n    /* istanbul ignore if */\n    if (d > SKIP_OND) return null;\n    pd = d - 1;\n    /* istanbul ignore next */\n\n    pv = d ? v[d - 1] : [0, 0];\n    cv = v[d] = [];\n\n    for (k = -d; k <= d; k += 2) {\n      if (k === -d || k !== d && pv[pd + k - 1] < pv[pd + k + 1]) {\n        c = pv[pd + k + 1];\n      } else {\n        c = pv[pd + k - 1] + 1;\n      }\n\n      r = c - k;\n\n      while (c < cols && r < rows && compare(currentNodes[currentStart + c], futureNodes[futureStart + r])) {\n        c++;\n        r++;\n      }\n\n      if (c === cols && r === rows) {\n        break outer;\n      }\n\n      cv[d + k] = c;\n    }\n  }\n\n  const diff = Array(d / 2 + length / 2);\n  let diffIdx = diff.length - 1;\n\n  for (d = v.length - 1; d >= 0; d--) {\n    while (c > 0 && r > 0 && compare(currentNodes[currentStart + c - 1], futureNodes[futureStart + r - 1])) {\n      // diagonal edge = equality\n      diff[diffIdx--] = SKIP;\n      c--;\n      r--;\n    }\n\n    if (!d) break;\n    pd = d - 1;\n    /* istanbul ignore next */\n\n    pv = d ? v[d - 1] : [0, 0];\n    k = c - r;\n\n    if (k === -d || k !== d && pv[pd + k - 1] < pv[pd + k + 1]) {\n      // vertical edge = insertion\n      r--;\n      diff[diffIdx--] = INSERTION;\n    } else {\n      // horizontal edge = deletion\n      c--;\n      diff[diffIdx--] = DELETION;\n    }\n  }\n\n  return diff;\n};\n\nconst applyDiff = (diff, get, parentNode, futureNodes, futureStart, currentNodes, currentStart, currentLength, before) => {\n  const live = [];\n  const length = diff.length;\n  let currentIndex = currentStart;\n  let i = 0;\n\n  while (i < length) {\n    switch (diff[i++]) {\n      case SKIP:\n        futureStart++;\n        currentIndex++;\n        break;\n\n      case INSERTION:\n        // TODO: bulk appends for sequential nodes\n        live.push(futureNodes[futureStart]);\n        append(get, parentNode, futureNodes, futureStart++, futureStart, currentIndex < currentLength ? get(currentNodes[currentIndex], 0) : before);\n        break;\n\n      case DELETION:\n        currentIndex++;\n        break;\n    }\n  }\n\n  i = 0;\n\n  while (i < length) {\n    switch (diff[i++]) {\n      case SKIP:\n        currentStart++;\n        break;\n\n      case DELETION:\n        // TODO: bulk removes for sequential nodes\n        if (-1 < live.indexOf(currentNodes[currentStart])) currentStart++;else remove(get, currentNodes, currentStart++, currentStart);\n        break;\n    }\n  }\n};\n\nconst findK = (ktr, length, j) => {\n  let lo = 1;\n  let hi = length;\n\n  while (lo < hi) {\n    const mid = (lo + hi) / 2 >>> 0;\n    if (j < ktr[mid]) hi = mid;else lo = mid + 1;\n  }\n\n  return lo;\n};\n\nconst smartDiff = (get, parentNode, futureNodes, futureStart, futureEnd, futureChanges, currentNodes, currentStart, currentEnd, currentChanges, currentLength, compare, before) => {\n  applyDiff(OND(futureNodes, futureStart, futureChanges, currentNodes, currentStart, currentChanges, compare) || HS(futureNodes, futureStart, futureEnd, futureChanges, currentNodes, currentStart, currentEnd, currentChanges), get, parentNode, futureNodes, futureStart, currentNodes, currentStart, currentLength, before);\n};\n\nconst drop = node => (node.remove || dropChild).call(node);\n\nfunction dropChild() {\n  const {\n    parentNode\n  } = this;\n  /* istanbul ignore else */\n\n  if (parentNode) parentNode.removeChild(this);\n}\n/*! (c) 2018 Andrea Giammarchi (ISC) */\n\n\nconst domdiff = (parentNode, // where changes happen\ncurrentNodes, // Array of current items/nodes\nfutureNodes, // Array of future items/nodes\noptions // optional object with one of the following properties\n//  before: domNode\n//  compare(generic, generic) => true if same generic\n//  node(generic) => Node\n) => {\n  if (!options) options = {};\n  const compare = options.compare || eqeq;\n  const get = options.node || identity;\n  const before = options.before == null ? null : get(options.before, 0);\n  const currentLength = currentNodes.length;\n  let currentEnd = currentLength;\n  let currentStart = 0;\n  let futureEnd = futureNodes.length;\n  let futureStart = 0; // common prefix\n\n  while (currentStart < currentEnd && futureStart < futureEnd && compare(currentNodes[currentStart], futureNodes[futureStart])) {\n    currentStart++;\n    futureStart++;\n  } // common suffix\n\n\n  while (currentStart < currentEnd && futureStart < futureEnd && compare(currentNodes[currentEnd - 1], futureNodes[futureEnd - 1])) {\n    currentEnd--;\n    futureEnd--;\n  }\n\n  const currentSame = currentStart === currentEnd;\n  const futureSame = futureStart === futureEnd; // same list\n\n  if (currentSame && futureSame) return futureNodes; // only stuff to add\n\n  if (currentSame && futureStart < futureEnd) {\n    append(get, parentNode, futureNodes, futureStart, futureEnd, next(get, currentNodes, currentStart, currentLength, before));\n    return futureNodes;\n  } // only stuff to remove\n\n\n  if (futureSame && currentStart < currentEnd) {\n    remove(get, currentNodes, currentStart, currentEnd);\n    return futureNodes;\n  }\n\n  const currentChanges = currentEnd - currentStart;\n  const futureChanges = futureEnd - futureStart;\n  let i = -1; // 2 simple indels: the shortest sequence is a subsequence of the longest\n\n  if (currentChanges < futureChanges) {\n    i = indexOf(futureNodes, futureStart, futureEnd, currentNodes, currentStart, currentEnd, compare); // inner diff\n\n    if (-1 < i) {\n      append(get, parentNode, futureNodes, futureStart, i, get(currentNodes[currentStart], 0));\n      append(get, parentNode, futureNodes, i + currentChanges, futureEnd, next(get, currentNodes, currentEnd, currentLength, before));\n      return futureNodes;\n    }\n  }\n  /* istanbul ignore else */\n  else if (futureChanges < currentChanges) {\n      i = indexOf(currentNodes, currentStart, currentEnd, futureNodes, futureStart, futureEnd, compare); // outer diff\n\n      if (-1 < i) {\n        remove(get, currentNodes, currentStart, i);\n        remove(get, currentNodes, i + futureChanges, currentEnd);\n        return futureNodes;\n      }\n    } // common case with one replacement for many nodes\n  // or many nodes replaced for a single one\n\n  /* istanbul ignore else */\n\n\n  if (currentChanges < 2 || futureChanges < 2) {\n    append(get, parentNode, futureNodes, futureStart, futureEnd, get(currentNodes[currentStart], 0));\n    remove(get, currentNodes, currentStart, currentEnd);\n    return futureNodes;\n  } // the half match diff part has been skipped in petit-dom\n  // https://github.com/yelouafi/petit-dom/blob/bd6f5c919b5ae5297be01612c524c40be45f14a7/src/vdom.js#L391-L397\n  // accordingly, I think it's safe to skip in here too\n  // if one day it'll come out like the speediest thing ever to do\n  // then I might add it in here too\n  // Extra: before going too fancy, what about reversed lists ?\n  //        This should bail out pretty quickly if that's not the case.\n\n\n  if (currentChanges === futureChanges && isReversed(futureNodes, futureEnd, currentNodes, currentStart, currentEnd, compare)) {\n    append(get, parentNode, futureNodes, futureStart, futureEnd, next(get, currentNodes, currentEnd, currentLength, before));\n    return futureNodes;\n  } // last resort through a smart diff\n\n\n  smartDiff(get, parentNode, futureNodes, futureStart, futureEnd, futureChanges, currentNodes, currentStart, currentEnd, currentChanges, currentLength, compare, before);\n  return futureNodes;\n};\n/**\n * Quick type checking\n * @param   {*} element - anything\n * @param   {string} type - type definition\n * @returns {boolean} true if the type corresponds\n */\n\n\nfunction checkType(element, type) {\n  return typeof element === type;\n}\n/**\n * Check if an element is part of an svg\n * @param   {HTMLElement}  el - element to check\n * @returns {boolean} true if we are in an svg context\n */\n\n\nfunction isSvg(el) {\n  const owner = el.ownerSVGElement;\n  return !!owner || owner === null;\n}\n/**\n * Check if an element is a template tag\n * @param   {HTMLElement}  el - element to check\n * @returns {boolean} true if it's a <template>\n */\n\n\nfunction isTemplate(el) {\n  return !isNil(el.content);\n}\n/**\n * Check that will be passed if its argument is a function\n * @param   {*} value - value to check\n * @returns {boolean} - true if the value is a function\n */\n\n\nfunction isFunction(value) {\n  return checkType(value, 'function');\n}\n/**\n * Check if a value is a Boolean\n * @param   {*}  value - anything\n * @returns {boolean} true only for the value is a boolean\n */\n\n\nfunction isBoolean(value) {\n  return checkType(value, 'boolean');\n}\n/**\n * Check if a value is an Object\n * @param   {*}  value - anything\n * @returns {boolean} true only for the value is an object\n */\n\n\nfunction isObject(value) {\n  return !isNil(value) && checkType(value, 'object');\n}\n/**\n * Check if a value is null or undefined\n * @param   {*}  value - anything\n * @returns {boolean} true only for the 'undefined' and 'null' types\n */\n\n\nfunction isNil(value) {\n  return value === null || value === undefined;\n}\n\nconst UNMOUNT_SCOPE = Symbol('unmount');\nconst EachBinding = Object.seal({\n  // dynamic binding properties\n  // childrenMap: null,\n  // node: null,\n  // root: null,\n  // condition: null,\n  // evaluate: null,\n  // template: null,\n  // isTemplateTag: false,\n  nodes: [],\n\n  // getKey: null,\n  // indexName: null,\n  // itemName: null,\n  // afterPlaceholder: null,\n  // placeholder: null,\n  // API methods\n  mount(scope, parentScope) {\n    return this.update(scope, parentScope);\n  },\n\n  update(scope, parentScope) {\n    const {\n      placeholder,\n      nodes,\n      childrenMap\n    } = this;\n    const collection = scope === UNMOUNT_SCOPE ? null : this.evaluate(scope);\n    const items = collection ? Array.from(collection) : [];\n    const parent = placeholder.parentNode; // prepare the diffing\n\n    const {\n      newChildrenMap,\n      batches,\n      futureNodes\n    } = createPatch(items, scope, parentScope, this); // patch the DOM only if there are new nodes\n\n    domdiff(parent, nodes, futureNodes, {\n      before: placeholder,\n      node: patch(Array.from(childrenMap.values()), parentScope)\n    }); // trigger the mounts and the updates\n\n    batches.forEach(fn => fn()); // update the children map\n\n    this.childrenMap = newChildrenMap;\n    this.nodes = futureNodes;\n    return this;\n  },\n\n  unmount(scope, parentScope) {\n    this.update(UNMOUNT_SCOPE, parentScope);\n    return this;\n  }\n\n});\n/**\n * Patch the DOM while diffing\n * @param   {TemplateChunk[]} redundant - redundant tepmplate chunks\n * @param   {*} parentScope - scope of the parent template\n * @returns {Function} patch function used by domdiff\n */\n\nfunction patch(redundant, parentScope) {\n  return (item, info) => {\n    if (info < 0) {\n      const element = redundant.pop();\n\n      if (element) {\n        const {\n          template,\n          context\n        } = element; // notice that we pass null as last argument because\n        // the root node and its children will be removed by domdiff\n\n        template.unmount(context, parentScope, null);\n      }\n    }\n\n    return item;\n  };\n}\n/**\n * Check whether a template must be filtered from a loop\n * @param   {Function} condition - filter function\n * @param   {Object} context - argument passed to the filter function\n * @returns {boolean} true if this item should be skipped\n */\n\n\nfunction mustFilterItem(condition, context) {\n  return condition ? Boolean(condition(context)) === false : false;\n}\n/**\n * Extend the scope of the looped template\n * @param   {Object} scope - current template scope\n * @param   {string} options.itemName - key to identify the looped item in the new context\n * @param   {string} options.indexName - key to identify the index of the looped item\n * @param   {number} options.index - current index\n * @param   {*} options.item - collection item looped\n * @returns {Object} enhanced scope object\n */\n\n\nfunction extendScope(scope, _ref) {\n  let {\n    itemName,\n    indexName,\n    index,\n    item\n  } = _ref;\n  scope[itemName] = item;\n  if (indexName) scope[indexName] = index;\n  return scope;\n}\n/**\n * Loop the current template items\n * @param   {Array} items - expression collection value\n * @param   {*} scope - template scope\n * @param   {*} parentScope - scope of the parent template\n * @param   {EeachBinding} binding - each binding object instance\n * @returns {Object} data\n * @returns {Map} data.newChildrenMap - a Map containing the new children template structure\n * @returns {Array} data.batches - array containing the template lifecycle functions to trigger\n * @returns {Array} data.futureNodes - array containing the nodes we need to diff\n */\n\n\nfunction createPatch(items, scope, parentScope, binding) {\n  const {\n    condition,\n    template,\n    childrenMap,\n    itemName,\n    getKey,\n    indexName,\n    root,\n    isTemplateTag\n  } = binding;\n  const newChildrenMap = new Map();\n  const batches = [];\n  const futureNodes = [];\n  items.forEach((item, index) => {\n    const context = extendScope(Object.create(scope), {\n      itemName,\n      indexName,\n      index,\n      item\n    });\n    const key = getKey ? getKey(context) : index;\n    const oldItem = childrenMap.get(key);\n\n    if (mustFilterItem(condition, context)) {\n      return;\n    }\n\n    const componentTemplate = oldItem ? oldItem.template : template.clone();\n    const el = oldItem ? componentTemplate.el : root.cloneNode();\n    const mustMount = !oldItem;\n    const meta = isTemplateTag && mustMount ? createTemplateMeta(componentTemplate) : {};\n\n    if (mustMount) {\n      batches.push(() => componentTemplate.mount(el, context, parentScope, meta));\n    } else {\n      batches.push(() => componentTemplate.update(context, parentScope));\n    } // create the collection of nodes to update or to add\n    // in case of template tags we need to add all its children nodes\n\n\n    if (isTemplateTag) {\n      const children = meta.children || componentTemplate.children;\n      futureNodes.push(...children);\n    } else {\n      futureNodes.push(el);\n    } // delete the old item from the children map\n\n\n    childrenMap.delete(key); // update the children map\n\n    newChildrenMap.set(key, {\n      template: componentTemplate,\n      context,\n      index\n    });\n  });\n  return {\n    newChildrenMap,\n    batches,\n    futureNodes\n  };\n}\n\nfunction create(node, _ref2) {\n  let {\n    evaluate,\n    condition,\n    itemName,\n    indexName,\n    getKey,\n    template\n  } = _ref2;\n  const placeholder = document.createTextNode('');\n  const parent = node.parentNode;\n  const root = node.cloneNode();\n  parent.insertBefore(placeholder, node);\n  removeNode(node);\n  return Object.assign({}, EachBinding, {\n    childrenMap: new Map(),\n    node,\n    root,\n    condition,\n    evaluate,\n    isTemplateTag: isTemplate(root),\n    template: template.createDOM(node),\n    getKey,\n    indexName,\n    itemName,\n    placeholder\n  });\n}\n/**\n * Binding responsible for the `if` directive\n */\n\n\nconst IfBinding = Object.seal({\n  // dynamic binding properties\n  // node: null,\n  // evaluate: null,\n  // isTemplateTag: false,\n  // placeholder: null,\n  // template: null,\n  // API methods\n  mount(scope, parentScope) {\n    return this.update(scope, parentScope);\n  },\n\n  update(scope, parentScope) {\n    const value = !!this.evaluate(scope);\n    const mustMount = !this.value && value;\n    const mustUnmount = this.value && !value;\n\n    const mount = () => {\n      const pristine = this.node.cloneNode();\n      this.placeholder.parentNode.insertBefore(pristine, this.placeholder);\n      this.template = this.template.clone();\n      this.template.mount(pristine, scope, parentScope);\n    };\n\n    switch (true) {\n      case mustMount:\n        mount();\n        break;\n\n      case mustUnmount:\n        this.unmount(scope);\n        break;\n\n      default:\n        if (value) this.template.update(scope, parentScope);\n    }\n\n    this.value = value;\n    return this;\n  },\n\n  unmount(scope, parentScope) {\n    this.template.unmount(scope, parentScope, true);\n    return this;\n  }\n\n});\n\nfunction create$1(node, _ref3) {\n  let {\n    evaluate,\n    template\n  } = _ref3;\n  const parent = node.parentNode;\n  const placeholder = document.createTextNode('');\n  parent.insertBefore(placeholder, node);\n  removeNode(node);\n  return Object.assign({}, IfBinding, {\n    node,\n    evaluate,\n    placeholder,\n    template: template.createDOM(node)\n  });\n}\n/**\n * Returns the memoized (cached) function.\n * // borrowed from https://www.30secondsofcode.org/js/s/memoize\n * @param {Function} fn - function to memoize\n * @returns {Function} memoize function\n */\n\n\nfunction memoize(fn) {\n  const cache = new Map();\n\n  const cached = val => {\n    return cache.has(val) ? cache.get(val) : cache.set(val, fn.call(this, val)) && cache.get(val);\n  };\n\n  cached.cache = cache;\n  return cached;\n}\n/**\n * Evaluate a list of attribute expressions\n * @param   {Array} attributes - attribute expressions generated by the riot compiler\n * @returns {Object} key value pairs with the result of the computation\n */\n\n\nfunction evaluateAttributeExpressions(attributes) {\n  return attributes.reduce((acc, attribute) => {\n    const {\n      value,\n      type\n    } = attribute;\n\n    switch (true) {\n      // spread attribute\n      case !attribute.name && type === ATTRIBUTE:\n        return Object.assign({}, acc, {}, value);\n      // value attribute\n\n      case type === VALUE:\n        acc.value = attribute.value;\n        break;\n      // normal attributes\n\n      default:\n        acc[dashToCamelCase(attribute.name)] = attribute.value;\n    }\n\n    return acc;\n  }, {});\n}\n\nconst REMOVE_ATTRIBUTE = 'removeAttribute';\nconst SET_ATTIBUTE = 'setAttribute';\nconst ElementProto = typeof Element === 'undefined' ? {} : Element.prototype;\nconst isNativeHtmlProperty = memoize(name => ElementProto.hasOwnProperty(name)); // eslint-disable-line\n\n/**\n * Add all the attributes provided\n * @param   {HTMLElement} node - target node\n * @param   {Object} attributes - object containing the attributes names and values\n * @returns {undefined} sorry it's a void function :(\n */\n\nfunction setAllAttributes(node, attributes) {\n  Object.entries(attributes).forEach((_ref4) => {\n    let [name, value] = _ref4;\n    return attributeExpression(node, {\n      name\n    }, value);\n  });\n}\n/**\n * Remove all the attributes provided\n * @param   {HTMLElement} node - target node\n * @param   {Object} newAttributes - object containing all the new attribute names\n * @param   {Object} oldAttributes - object containing all the old attribute names\n * @returns {undefined} sorry it's a void function :(\n */\n\n\nfunction removeAllAttributes(node, newAttributes, oldAttributes) {\n  const newKeys = newAttributes ? Object.keys(newAttributes) : [];\n  Object.keys(oldAttributes).filter(name => !newKeys.includes(name)).forEach(attribute => node.removeAttribute(attribute));\n}\n/**\n * This methods handles the DOM attributes updates\n * @param   {HTMLElement} node - target node\n * @param   {Object} expression - expression object\n * @param   {string} expression.name - attribute name\n * @param   {*} value - new expression value\n * @param   {*} oldValue - the old expression cached value\n * @returns {undefined}\n */\n\n\nfunction attributeExpression(node, _ref5, value, oldValue) {\n  let {\n    name\n  } = _ref5;\n\n  // is it a spread operator? {...attributes}\n  if (!name) {\n    if (oldValue) {\n      // remove all the old attributes\n      removeAllAttributes(node, value, oldValue);\n    } // is the value still truthy?\n\n\n    if (value) {\n      setAllAttributes(node, value);\n    }\n\n    return;\n  } // handle boolean attributes\n\n\n  if (!isNativeHtmlProperty(name) && (isBoolean(value) || isObject(value) || isFunction(value))) {\n    node[name] = value;\n  }\n\n  node[getMethod(value)](name, normalizeValue(name, value));\n}\n/**\n * Get the attribute modifier method\n * @param   {*} value - if truthy we return `setAttribute` othewise `removeAttribute`\n * @returns {string} the node attribute modifier method name\n */\n\n\nfunction getMethod(value) {\n  return isNil(value) || value === false || value === '' || isObject(value) || isFunction(value) ? REMOVE_ATTRIBUTE : SET_ATTIBUTE;\n}\n/**\n * Get the value as string\n * @param   {string} name - attribute name\n * @param   {*} value - user input value\n * @returns {string} input value as string\n */\n\n\nfunction normalizeValue(name, value) {\n  // be sure that expressions like selected={ true } will be always rendered as selected='selected'\n  if (value === true) return name;\n  return value;\n}\n\nconst RE_EVENTS_PREFIX = /^on/;\n\nconst getCallbackAndOptions = value => Array.isArray(value) ? value : [value, false];\n/**\n * Set a new event listener\n * @param   {HTMLElement} node - target node\n * @param   {Object} expression - expression object\n * @param   {string} expression.name - event name\n * @param   {*} value - new expression value\n * @param   {*} oldValue - old expression value\n * @returns {value} the callback just received\n */\n\n\nfunction eventExpression(node, _ref6, value, oldValue) {\n  let {\n    name\n  } = _ref6;\n  const normalizedEventName = name.replace(RE_EVENTS_PREFIX, '');\n\n  if (oldValue) {\n    node.removeEventListener(normalizedEventName, ...getCallbackAndOptions(oldValue));\n  }\n\n  if (value) {\n    node.addEventListener(normalizedEventName, ...getCallbackAndOptions(value));\n  }\n}\n/**\n * Normalize the user value in order to render a empty string in case of falsy values\n * @param   {*} value - user input value\n * @returns {string} hopefully a string\n */\n\n\nfunction normalizeStringValue(value) {\n  return isNil(value) ? '' : value;\n}\n/**\n * Get the the target text node to update or create one from of a comment node\n * @param   {HTMLElement} node - any html element containing childNodes\n * @param   {number} childNodeIndex - index of the text node in the childNodes list\n * @returns {HTMLTextNode} the text node to update\n */\n\n\nconst getTextNode = (node, childNodeIndex) => {\n  const target = node.childNodes[childNodeIndex];\n\n  if (target.nodeType === Node.COMMENT_NODE) {\n    const textNode = document.createTextNode('');\n    node.replaceChild(textNode, target);\n    return textNode;\n  }\n\n  return target;\n};\n/**\n * This methods handles a simple text expression update\n * @param   {HTMLElement} node - target node\n * @param   {Object} data - expression object\n * @param   {*} value - new expression value\n * @returns {undefined}\n */\n\n\nfunction textExpression(node, data, value) {\n  node.data = normalizeStringValue(value);\n}\n/**\n * This methods handles the input fileds value updates\n * @param   {HTMLElement} node - target node\n * @param   {Object} expression - expression object\n * @param   {*} value - new expression value\n * @returns {undefined}\n */\n\n\nfunction valueExpression(node, expression, value) {\n  node.value = normalizeStringValue(value);\n}\n\nvar expressions = {\n  [ATTRIBUTE]: attributeExpression,\n  [EVENT]: eventExpression,\n  [TEXT]: textExpression,\n  [VALUE]: valueExpression\n};\nconst Expression = Object.seal({\n  // Static props\n  // node: null,\n  // value: null,\n  // API methods\n\n  /**\n   * Mount the expression evaluating its initial value\n   * @param   {*} scope - argument passed to the expression to evaluate its current values\n   * @returns {Expression} self\n   */\n  mount(scope) {\n    // hopefully a pure function\n    this.value = this.evaluate(scope); // IO() DOM updates\n\n    apply(this, this.value);\n    return this;\n  },\n\n  /**\n   * Update the expression if its value changed\n   * @param   {*} scope - argument passed to the expression to evaluate its current values\n   * @returns {Expression} self\n   */\n  update(scope) {\n    // pure function\n    const value = this.evaluate(scope);\n\n    if (this.value !== value) {\n      // IO() DOM updates\n      apply(this, value);\n      this.value = value;\n    }\n\n    return this;\n  },\n\n  /**\n   * Expression teardown method\n   * @returns {Expression} self\n   */\n  unmount() {\n    // unmount only the event handling expressions\n    if (this.type === EVENT) apply(this, null);\n    return this;\n  }\n\n});\n/**\n * IO() function to handle the DOM updates\n * @param {Expression} expression - expression object\n * @param {*} value - current expression value\n * @returns {undefined}\n */\n\nfunction apply(expression, value) {\n  return expressions[expression.type](expression.node, expression, value, expression.value);\n}\n\nfunction create$2(node, data) {\n  return Object.assign({}, Expression, {}, data, {\n    node: data.type === TEXT ? getTextNode(node, data.childNodeIndex) : node\n  });\n}\n/**\n * Create a flat object having as keys a list of methods that if dispatched will propagate\n * on the whole collection\n * @param   {Array} collection - collection to iterate\n * @param   {Array<string>} methods - methods to execute on each item of the collection\n * @param   {*} context - context returned by the new methods created\n * @returns {Object} a new object to simplify the the nested methods dispatching\n */\n\n\nfunction flattenCollectionMethods(collection, methods, context) {\n  return methods.reduce((acc, method) => {\n    return Object.assign({}, acc, {\n      [method]: scope => {\n        return collection.map(item => item[method](scope)) && context;\n      }\n    });\n  }, {});\n}\n\nfunction create$3(node, _ref7) {\n  let {\n    expressions\n  } = _ref7;\n  return Object.assign({}, flattenCollectionMethods(expressions.map(expression => create$2(node, expression)), ['mount', 'update', 'unmount']));\n}\n\nfunction extendParentScope(attributes, scope, parentScope) {\n  if (!attributes || !attributes.length) return parentScope;\n  const expressions = attributes.map(attr => Object.assign({}, attr, {\n    value: attr.evaluate(scope)\n  }));\n  return Object.assign(Object.create(parentScope || null), evaluateAttributeExpressions(expressions));\n}\n\nconst SlotBinding = Object.seal({\n  // dynamic binding properties\n  // node: null,\n  // name: null,\n  attributes: [],\n\n  // template: null,\n  getTemplateScope(scope, parentScope) {\n    return extendParentScope(this.attributes, scope, parentScope);\n  },\n\n  // API methods\n  mount(scope, parentScope) {\n    const templateData = scope.slots ? scope.slots.find((_ref8) => {\n      let {\n        id\n      } = _ref8;\n      return id === this.name;\n    }) : false;\n    const {\n      parentNode\n    } = this.node;\n    this.template = templateData && create$6(templateData.html, templateData.bindings).createDOM(parentNode);\n\n    if (this.template) {\n      this.template.mount(this.node, this.getTemplateScope(scope, parentScope));\n      this.template.children = moveSlotInnerContent(this.node);\n    }\n\n    removeNode(this.node);\n    return this;\n  },\n\n  update(scope, parentScope) {\n    if (this.template) {\n      this.template.update(this.getTemplateScope(scope, parentScope));\n    }\n\n    return this;\n  },\n\n  unmount(scope, parentScope, mustRemoveRoot) {\n    if (this.template) {\n      this.template.unmount(this.getTemplateScope(scope, parentScope), null, mustRemoveRoot);\n    }\n\n    return this;\n  }\n\n});\n/**\n * Move the inner content of the slots outside of them\n * @param   {HTMLNode} slot - slot node\n * @param   {HTMLElement} children - array to fill with the child nodes detected\n * @returns {HTMLElement[]} list of the node moved\n */\n\nfunction moveSlotInnerContent(slot, children) {\n  if (children === void 0) {\n    children = [];\n  }\n\n  const child = slot.firstChild;\n\n  if (child) {\n    slot.parentNode.insertBefore(child, slot);\n    return [child, ...moveSlotInnerContent(slot)];\n  }\n\n  return children;\n}\n/**\n * Create a single slot binding\n * @param   {HTMLElement} node - slot node\n * @param   {string} options.name - slot id\n * @returns {Object} Slot binding object\n */\n\n\nfunction createSlot(node, _ref9) {\n  let {\n    name,\n    attributes\n  } = _ref9;\n  return Object.assign({}, SlotBinding, {\n    attributes,\n    node,\n    name\n  });\n}\n/**\n * Create a new tag object if it was registered before, otherwise fallback to the simple\n * template chunk\n * @param   {Function} component - component factory function\n * @param   {Array<Object>} slots - array containing the slots markup\n * @param   {Array} attributes - dynamic attributes that will be received by the tag element\n * @returns {TagImplementation|TemplateChunk} a tag implementation or a template chunk as fallback\n */\n\n\nfunction getTag(component, slots, attributes) {\n  if (slots === void 0) {\n    slots = [];\n  }\n\n  if (attributes === void 0) {\n    attributes = [];\n  }\n\n  // if this tag was registered before we will return its implementation\n  if (component) {\n    return component({\n      slots,\n      attributes\n    });\n  } // otherwise we return a template chunk\n\n\n  return create$6(slotsToMarkup(slots), [...slotBindings(slots), {\n    // the attributes should be registered as binding\n    // if we fallback to a normal template chunk\n    expressions: attributes.map(attr => {\n      return Object.assign({\n        type: ATTRIBUTE\n      }, attr);\n    })\n  }]);\n}\n/**\n * Merge all the slots bindings into a single array\n * @param   {Array<Object>} slots - slots collection\n * @returns {Array<Bindings>} flatten bindings array\n */\n\n\nfunction slotBindings(slots) {\n  return slots.reduce((acc, _ref10) => {\n    let {\n      bindings\n    } = _ref10;\n    return acc.concat(bindings);\n  }, []);\n}\n/**\n * Merge all the slots together in a single markup string\n * @param   {Array<Object>} slots - slots collection\n * @returns {string} markup of all the slots in a single string\n */\n\n\nfunction slotsToMarkup(slots) {\n  return slots.reduce((acc, slot) => {\n    return acc + slot.html;\n  }, '');\n}\n\nconst TagBinding = Object.seal({\n  // dynamic binding properties\n  // node: null,\n  // evaluate: null,\n  // name: null,\n  // slots: null,\n  // tag: null,\n  // attributes: null,\n  // getComponent: null,\n  mount(scope) {\n    return this.update(scope);\n  },\n\n  update(scope, parentScope) {\n    const name = this.evaluate(scope); // simple update\n\n    if (name === this.name) {\n      this.tag.update(scope);\n    } else {\n      // unmount the old tag if it exists\n      this.unmount(scope, parentScope, true); // mount the new tag\n\n      this.name = name;\n      this.tag = getTag(this.getComponent(name), this.slots, this.attributes);\n      this.tag.mount(this.node, scope);\n    }\n\n    return this;\n  },\n\n  unmount(scope, parentScope, keepRootTag) {\n    if (this.tag) {\n      // keep the root tag\n      this.tag.unmount(keepRootTag);\n    }\n\n    return this;\n  }\n\n});\n\nfunction create$4(node, _ref11) {\n  let {\n    evaluate,\n    getComponent,\n    slots,\n    attributes\n  } = _ref11;\n  return Object.assign({}, TagBinding, {\n    node,\n    evaluate,\n    slots,\n    attributes,\n    getComponent\n  });\n}\n\nvar bindings = {\n  [IF]: create$1,\n  [SIMPLE]: create$3,\n  [EACH]: create,\n  [TAG]: create$4,\n  [SLOT]: createSlot\n};\n/**\n * Text expressions in a template tag will get childNodeIndex value normalized\n * depending on the position of the <template> tag offset\n * @param   {Expression[]} expressions - riot expressions array\n * @param   {number} textExpressionsOffset - offset of the <template> tag\n * @returns {Expression[]} expressions containing the text expressions normalized\n */\n\nfunction fixTextExpressionsOffset(expressions, textExpressionsOffset) {\n  return expressions.map(e => e.type === TEXT ? Object.assign({}, e, {\n    childNodeIndex: e.childNodeIndex + textExpressionsOffset\n  }) : e);\n}\n/**\n * Bind a new expression object to a DOM node\n * @param   {HTMLElement} root - DOM node where to bind the expression\n * @param   {Object} binding - binding data\n * @param   {number|null} templateTagOffset - if it's defined we need to fix the text expressions childNodeIndex offset\n * @returns {Binding} Binding object\n */\n\n\nfunction create$5(root, binding, templateTagOffset) {\n  const {\n    selector,\n    type,\n    redundantAttribute,\n    expressions\n  } = binding; // find the node to apply the bindings\n\n  const node = selector ? root.querySelector(selector) : root; // remove eventually additional attributes created only to select this node\n\n  if (redundantAttribute) node.removeAttribute(redundantAttribute);\n  const bindingExpressions = expressions || []; // init the binding\n\n  return (bindings[type] || bindings[SIMPLE])(node, Object.assign({}, binding, {\n    expressions: templateTagOffset && !selector ? fixTextExpressionsOffset(bindingExpressions, templateTagOffset) : bindingExpressions\n  }));\n} // in this case a simple innerHTML is enough\n\n\nfunction createHTMLTree(html, root) {\n  const template = isTemplate(root) ? root : document.createElement('template');\n  template.innerHTML = html;\n  return template.content;\n} // for svg nodes we need a bit more work\n\n\nfunction createSVGTree(html, container) {\n  // create the SVGNode\n  const svgNode = container.ownerDocument.importNode(new window.DOMParser().parseFromString(`<svg xmlns=\"http://www.w3.org/2000/svg\">${html}</svg>`, 'application/xml').documentElement, true);\n  return svgNode;\n}\n/**\n * Create the DOM that will be injected\n * @param {Object} root - DOM node to find out the context where the fragment will be created\n * @param   {string} html - DOM to create as string\n * @returns {HTMLDocumentFragment|HTMLElement} a new html fragment\n */\n\n\nfunction createDOMTree(root, html) {\n  if (isSvg(root)) return createSVGTree(html, root);\n  return createHTMLTree(html, root);\n}\n/**\n * Inject the DOM tree into a target node\n * @param   {HTMLElement} el - target element\n * @param   {HTMLFragment|SVGElement} dom - dom tree to inject\n * @returns {undefined}\n */\n\n\nfunction injectDOM(el, dom) {\n  switch (true) {\n    case isSvg(el):\n      moveChildren(dom, el);\n      break;\n\n    case isTemplate(el):\n      el.parentNode.replaceChild(dom, el);\n      break;\n\n    default:\n      el.appendChild(dom);\n  }\n}\n/**\n * Create the Template DOM skeleton\n * @param   {HTMLElement} el - root node where the DOM will be injected\n * @param   {string} html - markup that will be injected into the root node\n * @returns {HTMLFragment} fragment that will be injected into the root node\n */\n\n\nfunction createTemplateDOM(el, html) {\n  return html && (typeof html === 'string' ? createDOMTree(el, html) : html);\n}\n/**\n * Template Chunk model\n * @type {Object}\n */\n\n\nconst TemplateChunk = Object.freeze({\n  // Static props\n  // bindings: null,\n  // bindingsData: null,\n  // html: null,\n  // isTemplateTag: false,\n  // fragment: null,\n  // children: null,\n  // dom: null,\n  // el: null,\n\n  /**\n   * Create the template DOM structure that will be cloned on each mount\n   * @param   {HTMLElement} el - the root node\n   * @returns {TemplateChunk} self\n   */\n  createDOM(el) {\n    // make sure that the DOM gets created before cloning the template\n    this.dom = this.dom || createTemplateDOM(el, this.html);\n    return this;\n  },\n\n  // API methods\n\n  /**\n   * Attach the template to a DOM node\n   * @param   {HTMLElement} el - target DOM node\n   * @param   {*} scope - template data\n   * @param   {*} parentScope - scope of the parent template tag\n   * @param   {Object} meta - meta properties needed to handle the <template> tags in loops\n   * @returns {TemplateChunk} self\n   */\n  mount(el, scope, parentScope, meta) {\n    if (meta === void 0) {\n      meta = {};\n    }\n\n    if (!el) throw new Error('Please provide DOM node to mount properly your template');\n    if (this.el) this.unmount(scope); // <template> tags require a bit more work\n    // the template fragment might be already created via meta outside of this call\n\n    const {\n      fragment,\n      children,\n      avoidDOMInjection\n    } = meta; // <template> bindings of course can not have a root element\n    // so we check the parent node to set the query selector bindings\n\n    const {\n      parentNode\n    } = children ? children[0] : el;\n    const isTemplateTag = isTemplate(el);\n    const templateTagOffset = isTemplateTag ? Math.max(Array.from(parentNode.childNodes).indexOf(el), 0) : null;\n    this.isTemplateTag = isTemplateTag; // create the DOM if it wasn't created before\n\n    this.createDOM(el);\n\n    if (this.dom) {\n      // create the new template dom fragment if it want already passed in via meta\n      this.fragment = fragment || this.dom.cloneNode(true);\n    } // store root node\n    // notice that for template tags the root note will be the parent tag\n\n\n    this.el = this.isTemplateTag ? parentNode : el; // create the children array only for the <template> fragments\n\n    this.children = this.isTemplateTag ? children || Array.from(this.fragment.childNodes) : null; // inject the DOM into the el only if a fragment is available\n\n    if (!avoidDOMInjection && this.fragment) injectDOM(el, this.fragment); // create the bindings\n\n    this.bindings = this.bindingsData.map(binding => create$5(this.el, binding, templateTagOffset));\n    this.bindings.forEach(b => b.mount(scope, parentScope));\n    return this;\n  },\n\n  /**\n   * Update the template with fresh data\n   * @param   {*} scope - template data\n   * @param   {*} parentScope - scope of the parent template tag\n   * @returns {TemplateChunk} self\n   */\n  update(scope, parentScope) {\n    this.bindings.forEach(b => b.update(scope, parentScope));\n    return this;\n  },\n\n  /**\n   * Remove the template from the node where it was initially mounted\n   * @param   {*} scope - template data\n   * @param   {*} parentScope - scope of the parent template tag\n   * @param   {boolean|null} mustRemoveRoot - if true remove the root element,\n   * if false or undefined clean the root tag content, if null don't touch the DOM\n   * @returns {TemplateChunk} self\n   */\n  unmount(scope, parentScope, mustRemoveRoot) {\n    if (this.el) {\n      this.bindings.forEach(b => b.unmount(scope, parentScope, mustRemoveRoot));\n\n      switch (true) {\n        // <template> tags should be treated a bit differently\n        // we need to clear their children only if it's explicitly required by the caller\n        // via mustRemoveRoot !== null\n        case this.children && mustRemoveRoot !== null:\n          clearChildren(this.children);\n          break;\n        // remove the root node only if the mustRemoveRoot === true\n\n        case mustRemoveRoot === true:\n          removeNode(this.el);\n          break;\n        // otherwise we clean the node children\n\n        case mustRemoveRoot !== null:\n          cleanNode(this.el);\n          break;\n      }\n\n      this.el = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * Clone the template chunk\n   * @returns {TemplateChunk} a clone of this object resetting the this.el property\n   */\n  clone() {\n    return Object.assign({}, this, {\n      el: null\n    });\n  }\n\n});\n/**\n * Create a template chunk wiring also the bindings\n * @param   {string|HTMLElement} html - template string\n * @param   {Array} bindings - bindings collection\n * @returns {TemplateChunk} a new TemplateChunk copy\n */\n\nfunction create$6(html, bindings) {\n  if (bindings === void 0) {\n    bindings = [];\n  }\n\n  return Object.assign({}, TemplateChunk, {\n    html,\n    bindingsData: bindings\n  });\n}\n\nvar DOMBindings = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  bindingTypes: bindingTypes,\n  createBinding: create$5,\n  createExpression: create$2,\n  expressionTypes: expressionTypes,\n  template: create$6\n});\n\nconst COMPONENTS_IMPLEMENTATION_MAP = new Map(),\n      DOM_COMPONENT_INSTANCE_PROPERTY = Symbol('riot-component'),\n      PLUGINS_SET = new Set(),\n      IS_DIRECTIVE = 'is',\n      VALUE_ATTRIBUTE = 'value',\n      MOUNT_METHOD_KEY = 'mount',\n      UPDATE_METHOD_KEY = 'update',\n      UNMOUNT_METHOD_KEY = 'unmount',\n      SHOULD_UPDATE_KEY = 'shouldUpdate',\n      ON_BEFORE_MOUNT_KEY = 'onBeforeMount',\n      ON_MOUNTED_KEY = 'onMounted',\n      ON_BEFORE_UPDATE_KEY = 'onBeforeUpdate',\n      ON_UPDATED_KEY = 'onUpdated',\n      ON_BEFORE_UNMOUNT_KEY = 'onBeforeUnmount',\n      ON_UNMOUNTED_KEY = 'onUnmounted',\n      PROPS_KEY = 'props',\n      STATE_KEY = 'state',\n      SLOTS_KEY = 'slots',\n      ROOT_KEY = 'root',\n      IS_PURE_SYMBOL = Symbol.for('pure'),\n      PARENT_KEY_SYMBOL = Symbol('parent'),\n      ATTRIBUTES_KEY_SYMBOL = Symbol('attributes'),\n      TEMPLATE_KEY_SYMBOL = Symbol('template');\n\nvar globals = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  COMPONENTS_IMPLEMENTATION_MAP: COMPONENTS_IMPLEMENTATION_MAP,\n  DOM_COMPONENT_INSTANCE_PROPERTY: DOM_COMPONENT_INSTANCE_PROPERTY,\n  PLUGINS_SET: PLUGINS_SET,\n  IS_DIRECTIVE: IS_DIRECTIVE,\n  VALUE_ATTRIBUTE: VALUE_ATTRIBUTE,\n  MOUNT_METHOD_KEY: MOUNT_METHOD_KEY,\n  UPDATE_METHOD_KEY: UPDATE_METHOD_KEY,\n  UNMOUNT_METHOD_KEY: UNMOUNT_METHOD_KEY,\n  SHOULD_UPDATE_KEY: SHOULD_UPDATE_KEY,\n  ON_BEFORE_MOUNT_KEY: ON_BEFORE_MOUNT_KEY,\n  ON_MOUNTED_KEY: ON_MOUNTED_KEY,\n  ON_BEFORE_UPDATE_KEY: ON_BEFORE_UPDATE_KEY,\n  ON_UPDATED_KEY: ON_UPDATED_KEY,\n  ON_BEFORE_UNMOUNT_KEY: ON_BEFORE_UNMOUNT_KEY,\n  ON_UNMOUNTED_KEY: ON_UNMOUNTED_KEY,\n  PROPS_KEY: PROPS_KEY,\n  STATE_KEY: STATE_KEY,\n  SLOTS_KEY: SLOTS_KEY,\n  ROOT_KEY: ROOT_KEY,\n  IS_PURE_SYMBOL: IS_PURE_SYMBOL,\n  PARENT_KEY_SYMBOL: PARENT_KEY_SYMBOL,\n  ATTRIBUTES_KEY_SYMBOL: ATTRIBUTES_KEY_SYMBOL,\n  TEMPLATE_KEY_SYMBOL: TEMPLATE_KEY_SYMBOL\n});\n\n/**\n * Quick type checking\n * @param   {*} element - anything\n * @param   {string} type - type definition\n * @returns {boolean} true if the type corresponds\n */\nfunction checkType$1(element, type) {\n  return typeof element === type;\n}\n/**\n * Check that will be passed if its argument is a function\n * @param   {*} value - value to check\n * @returns {boolean} - true if the value is a function\n */\n\nfunction isFunction$1(value) {\n  return checkType$1(value, 'function');\n}\n\nfunction noop() {\n  return this;\n}\n/**\n * Autobind the methods of a source object to itself\n * @param   {Object} source - probably a riot tag instance\n * @param   {Array<string>} methods - list of the methods to autobind\n * @returns {Object} the original object received\n */\n\nfunction autobindMethods(source, methods) {\n  methods.forEach(method => {\n    source[method] = source[method].bind(source);\n  });\n  return source;\n}\n/**\n * Call the first argument received only if it's a function otherwise return it as it is\n * @param   {*} source - anything\n * @returns {*} anything\n */\n\nfunction callOrAssign(source) {\n  return isFunction$1(source) ? source.prototype && source.prototype.constructor ? new source() : source() : source;\n}\n\n/**\n * Helper function to set an immutable property\n * @param   {Object} source - object where the new property will be set\n * @param   {string} key - object key where the new property will be stored\n * @param   {*} value - value of the new property\n * @param   {Object} options - set the propery overriding the default options\n * @returns {Object} - the original object modified\n */\nfunction defineProperty(source, key, value, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  /* eslint-disable fp/no-mutating-methods */\n  Object.defineProperty(source, key, Object.assign({\n    value,\n    enumerable: false,\n    writable: false,\n    configurable: true\n  }, options));\n  /* eslint-enable fp/no-mutating-methods */\n\n  return source;\n}\n/**\n * Define multiple properties on a target object\n * @param   {Object} source - object where the new properties will be set\n * @param   {Object} properties - object containing as key pair the key + value properties\n * @param   {Object} options - set the propery overriding the default options\n * @returns {Object} the original object modified\n */\n\nfunction defineProperties(source, properties, options) {\n  Object.entries(properties).forEach((_ref) => {\n    let [key, value] = _ref;\n    defineProperty(source, key, value, options);\n  });\n  return source;\n}\n/**\n * Define default properties if they don't exist on the source object\n * @param   {Object} source - object that will receive the default properties\n * @param   {Object} defaults - object containing additional optional keys\n * @returns {Object} the original object received enhanced\n */\n\nfunction defineDefaults(source, defaults) {\n  Object.entries(defaults).forEach((_ref2) => {\n    let [key, value] = _ref2;\n    if (!source[key]) source[key] = value;\n  });\n  return source;\n}\n\nconst ATTRIBUTE$1 = 0;\nconst VALUE$1 = 3;\n\n/**\n * Convert a string from camel case to dash-case\n * @param   {string} string - probably a component tag name\n * @returns {string} component name normalized\n */\nfunction camelToDashCase(string) {\n  return string.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n}\n/**\n * Convert a string containing dashes to camel case\n * @param   {string} string - input string\n * @returns {string} my-string -> myString\n */\n\nfunction dashToCamelCase$1(string) {\n  return string.replace(/-(\\w)/g, (_, c) => c.toUpperCase());\n}\n\n/**\n * Throw an error with a descriptive message\n * @param   { string } message - error message\n * @returns { undefined } hoppla.. at this point the program should stop working\n */\n\nfunction panic(message) {\n  throw new Error(message);\n}\n/**\n * Evaluate a list of attribute expressions\n * @param   {Array} attributes - attribute expressions generated by the riot compiler\n * @returns {Object} key value pairs with the result of the computation\n */\n\nfunction evaluateAttributeExpressions$1(attributes) {\n  return attributes.reduce((acc, attribute) => {\n    const {\n      value,\n      type\n    } = attribute;\n\n    switch (true) {\n      // spread attribute\n      case !attribute.name && type === ATTRIBUTE$1:\n        return Object.assign({}, acc, {}, value);\n      // value attribute\n\n      case type === VALUE$1:\n        acc.value = attribute.value;\n        break;\n      // normal attributes\n\n      default:\n        acc[dashToCamelCase$1(attribute.name)] = attribute.value;\n    }\n\n    return acc;\n  }, {});\n}\n\n/**\n * Converts any DOM node/s to a loopable array\n * @param   { HTMLElement|NodeList } els - single html element or a node list\n * @returns { Array } always a loopable object\n */\nfunction domToArray(els) {\n  // can this object be already looped?\n  if (!Array.isArray(els)) {\n    // is it a node list?\n    if (/^\\[object (HTMLCollection|NodeList|Object)\\]$/.test(Object.prototype.toString.call(els)) && typeof els.length === 'number') return Array.from(els);else // if it's a single node\n      // it will be returned as \"array\" with one single entry\n      return [els];\n  } // this object could be looped out of the box\n\n\n  return els;\n}\n\n/**\n * Simple helper to find DOM nodes returning them as array like loopable object\n * @param   { string|DOMNodeList } selector - either the query or the DOM nodes to arraify\n * @param   { HTMLElement }        ctx      - context defining where the query will search for the DOM nodes\n * @returns { Array } DOM nodes found as array\n */\n\nfunction $(selector, ctx) {\n  return domToArray(typeof selector === 'string' ? (ctx || document).querySelectorAll(selector) : selector);\n}\n\n/**\n * Get all the element attributes as object\n * @param   {HTMLElement} element - DOM node we want to parse\n * @returns {Object} all the attributes found as a key value pairs\n */\n\nfunction DOMattributesToObject(element) {\n  return Array.from(element.attributes).reduce((acc, attribute) => {\n    acc[dashToCamelCase$1(attribute.name)] = attribute.value;\n    return acc;\n  }, {});\n}\n\n/**\n * Normalize the return values, in case of a single value we avoid to return an array\n * @param   { Array } values - list of values we want to return\n * @returns { Array|string|boolean } either the whole list of values or the single one found\n * @private\n */\n\nconst normalize = values => values.length === 1 ? values[0] : values;\n/**\n * Parse all the nodes received to get/remove/check their attributes\n * @param   { HTMLElement|NodeList|Array } els    - DOM node/s to parse\n * @param   { string|Array }               name   - name or list of attributes\n * @param   { string }                     method - method that will be used to parse the attributes\n * @returns { Array|string } result of the parsing in a list or a single value\n * @private\n */\n\n\nfunction parseNodes(els, name, method) {\n  const names = typeof name === 'string' ? [name] : name;\n  return normalize(domToArray(els).map(el => {\n    return normalize(names.map(n => el[method](n)));\n  }));\n}\n/**\n * Set any attribute on a single or a list of DOM nodes\n * @param   { HTMLElement|NodeList|Array } els   - DOM node/s to parse\n * @param   { string|Object }              name  - either the name of the attribute to set\n *                                                 or a list of properties as object key - value\n * @param   { string }                     value - the new value of the attribute (optional)\n * @returns { HTMLElement|NodeList|Array } the original array of elements passed to this function\n *\n * @example\n *\n * import { set } from 'bianco.attr'\n *\n * const img = document.createElement('img')\n *\n * set(img, 'width', 100)\n *\n * // or also\n * set(img, {\n *   width: 300,\n *   height: 300\n * })\n *\n */\n\n\nfunction set(els, name, value) {\n  const attrs = typeof name === 'object' ? name : {\n    [name]: value\n  };\n  const props = Object.keys(attrs);\n  domToArray(els).forEach(el => {\n    props.forEach(prop => el.setAttribute(prop, attrs[prop]));\n  });\n  return els;\n}\n/**\n * Get any attribute from a single or a list of DOM nodes\n * @param   { HTMLElement|NodeList|Array } els   - DOM node/s to parse\n * @param   { string|Array }               name  - name or list of attributes to get\n * @returns { Array|string } list of the attributes found\n *\n * @example\n *\n * import { get } from 'bianco.attr'\n *\n * const img = document.createElement('img')\n *\n * get(img, 'width') // => '200'\n *\n * // or also\n * get(img, ['width', 'height']) // => ['200', '300']\n *\n * // or also\n * get([img1, img2], ['width', 'height']) // => [['200', '300'], ['500', '200']]\n */\n\nfunction get(els, name) {\n  return parseNodes(els, name, 'getAttribute');\n}\n\nconst CSS_BY_NAME = new Map();\nconst STYLE_NODE_SELECTOR = 'style[riot]'; // memoized curried function\n\nconst getStyleNode = (style => {\n  return () => {\n    // lazy evaluation:\n    // if this function was already called before\n    // we return its cached result\n    if (style) return style; // create a new style element or use an existing one\n    // and cache it internally\n\n    style = $(STYLE_NODE_SELECTOR)[0] || document.createElement('style');\n    set(style, 'type', 'text/css');\n    /* istanbul ignore next */\n\n    if (!style.parentNode) document.head.appendChild(style);\n    return style;\n  };\n})();\n/**\n * Object that will be used to inject and manage the css of every tag instance\n */\n\n\nvar cssManager = {\n  CSS_BY_NAME,\n\n  /**\n   * Save a tag style to be later injected into DOM\n   * @param { string } name - if it's passed we will map the css to a tagname\n   * @param { string } css - css string\n   * @returns {Object} self\n   */\n  add(name, css) {\n    if (!CSS_BY_NAME.has(name)) {\n      CSS_BY_NAME.set(name, css);\n      this.inject();\n    }\n\n    return this;\n  },\n\n  /**\n   * Inject all previously saved tag styles into DOM\n   * innerHTML seems slow: http://jsperf.com/riot-insert-style\n   * @returns {Object} self\n   */\n  inject() {\n    getStyleNode().innerHTML = [...CSS_BY_NAME.values()].join('\\n');\n    return this;\n  },\n\n  /**\n   * Remove a tag style from the DOM\n   * @param {string} name a registered tagname\n   * @returns {Object} self\n   */\n  remove(name) {\n    if (CSS_BY_NAME.has(name)) {\n      CSS_BY_NAME.delete(name);\n      this.inject();\n    }\n\n    return this;\n  }\n\n};\n\n/**\n * Function to curry any javascript method\n * @param   {Function}  fn - the target function we want to curry\n * @param   {...[args]} acc - initial arguments\n * @returns {Function|*} it will return a function until the target function\n *                       will receive all of its arguments\n */\nfunction curry(fn) {\n  for (var _len = arguments.length, acc = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    acc[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    args = [...acc, ...args];\n    return args.length < fn.length ? curry(fn, ...args) : fn(...args);\n  };\n}\n\n/**\n * Get the tag name of any DOM node\n * @param   {HTMLElement} element - DOM node we want to inspect\n * @returns {string} name to identify this dom node in riot\n */\n\nfunction getName(element) {\n  return get(element, IS_DIRECTIVE) || element.tagName.toLowerCase();\n}\n\nconst COMPONENT_CORE_HELPERS = Object.freeze({\n  // component helpers\n  $(selector) {\n    return $(selector, this.root)[0];\n  },\n\n  $$(selector) {\n    return $(selector, this.root);\n  }\n\n});\nconst PURE_COMPONENT_API = Object.freeze({\n  [MOUNT_METHOD_KEY]: noop,\n  [UPDATE_METHOD_KEY]: noop,\n  [UNMOUNT_METHOD_KEY]: noop\n});\nconst COMPONENT_LIFECYCLE_METHODS = Object.freeze({\n  [SHOULD_UPDATE_KEY]: noop,\n  [ON_BEFORE_MOUNT_KEY]: noop,\n  [ON_MOUNTED_KEY]: noop,\n  [ON_BEFORE_UPDATE_KEY]: noop,\n  [ON_UPDATED_KEY]: noop,\n  [ON_BEFORE_UNMOUNT_KEY]: noop,\n  [ON_UNMOUNTED_KEY]: noop\n});\nconst MOCKED_TEMPLATE_INTERFACE = Object.assign({}, PURE_COMPONENT_API, {\n  clone: noop,\n  createDOM: noop\n});\n/**\n * Evaluate the component properties either from its real attributes or from its initial user properties\n * @param   {HTMLElement} element - component root\n * @param   {Object}  initialProps - initial props\n * @returns {Object} component props key value pairs\n */\n\nfunction evaluateInitialProps(element, initialProps) {\n  if (initialProps === void 0) {\n    initialProps = {};\n  }\n\n  return Object.assign({}, DOMattributesToObject(element), {}, callOrAssign(initialProps));\n}\n/**\n * Bind a DOM node to its component object\n * @param   {HTMLElement} node - html node mounted\n * @param   {Object} component - Riot.js component object\n * @returns {Object} the component object received as second argument\n */\n\n\nconst bindDOMNodeToComponentObject = (node, component) => node[DOM_COMPONENT_INSTANCE_PROPERTY] = component;\n/**\n * Wrap the Riot.js core API methods using a mapping function\n * @param   {Function} mapFunction - lifting function\n * @returns {Object} an object having the { mount, update, unmount } functions\n */\n\n\nfunction createCoreAPIMethods(mapFunction) {\n  return [MOUNT_METHOD_KEY, UPDATE_METHOD_KEY, UNMOUNT_METHOD_KEY].reduce((acc, method) => {\n    acc[method] = mapFunction(method);\n    return acc;\n  }, {});\n}\n/**\n * Factory function to create the component templates only once\n * @param   {Function} template - component template creation function\n * @param   {Object} components - object containing the nested components\n * @returns {TemplateChunk} template chunk object\n */\n\n\nfunction componentTemplateFactory(template, components) {\n  return template(create$6, expressionTypes, bindingTypes, name => {\n    return components[name] || COMPONENTS_IMPLEMENTATION_MAP.get(name);\n  });\n}\n/**\n * Create a pure component\n * @param   {Function} pureFactoryFunction - pure component factory function\n * @param   {Array} options.slots - component slots\n * @param   {Array} options.attributes - component attributes\n * @param   {Array} options.template - template factory function\n * @param   {Array} options.template - template factory function\n * @param   {any} options.props - initial component properties\n * @returns {Object} pure component object\n */\n\n\nfunction createPureComponent(pureFactoryFunction, _ref) {\n  let {\n    slots,\n    attributes,\n    props,\n    css,\n    template\n  } = _ref;\n  if (template) panic('Pure components can not have html');\n  if (css) panic('Pure components do not have css');\n  const component = defineDefaults(pureFactoryFunction({\n    slots,\n    attributes,\n    props\n  }), PURE_COMPONENT_API);\n  return createCoreAPIMethods(method => function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    // intercept the mount calls to bind the DOM node to the pure object created\n    // see also https://github.com/riot/riot/issues/2806\n    if (method === MOUNT_METHOD_KEY) {\n      const [el] = args;\n      bindDOMNodeToComponentObject(el, component);\n    }\n\n    component[method](...args);\n    return component;\n  });\n}\n/**\n * Create the component interface needed for the @riotjs/dom-bindings tag bindings\n * @param   {string} options.css - component css\n * @param   {Function} options.template - functon that will return the dom-bindings template function\n * @param   {Object} options.exports - component interface\n * @param   {string} options.name - component name\n * @returns {Object} component like interface\n */\n\n\nfunction createComponent(_ref2) {\n  let {\n    css,\n    template,\n    exports,\n    name\n  } = _ref2;\n  const templateFn = template ? componentTemplateFactory(template, exports ? createSubcomponents(exports.components) : {}) : MOCKED_TEMPLATE_INTERFACE;\n  return (_ref3) => {\n    let {\n      slots,\n      attributes,\n      props\n    } = _ref3;\n    // pure components rendering will be managed by the end user\n    if (exports && exports[IS_PURE_SYMBOL]) return createPureComponent(exports, {\n      slots,\n      attributes,\n      props,\n      css,\n      template\n    });\n    const componentAPI = callOrAssign(exports) || {};\n    const component = defineComponent({\n      css,\n      template: templateFn,\n      componentAPI,\n      name\n    })({\n      slots,\n      attributes,\n      props\n    }); // notice that for the components create via tag binding\n    // we need to invert the mount (state/parentScope) arguments\n    // the template bindings will only forward the parentScope updates\n    // and never deal with the component state\n\n    return {\n      mount(element, parentScope, state) {\n        return component.mount(element, state, parentScope);\n      },\n\n      update(parentScope, state) {\n        return component.update(state, parentScope);\n      },\n\n      unmount(preserveRoot) {\n        return component.unmount(preserveRoot);\n      }\n\n    };\n  };\n}\n/**\n * Component definition function\n * @param   {Object} implementation - the componen implementation will be generated via compiler\n * @param   {Object} component - the component initial properties\n * @returns {Object} a new component implementation object\n */\n\nfunction defineComponent(_ref4) {\n  let {\n    css,\n    template,\n    componentAPI,\n    name\n  } = _ref4;\n  // add the component css into the DOM\n  if (css && name) cssManager.add(name, css);\n  return curry(enhanceComponentAPI)(defineProperties( // set the component defaults without overriding the original component API\n  defineDefaults(componentAPI, Object.assign({}, COMPONENT_LIFECYCLE_METHODS, {\n    [STATE_KEY]: {}\n  })), Object.assign({\n    // defined during the component creation\n    [SLOTS_KEY]: null,\n    [ROOT_KEY]: null\n  }, COMPONENT_CORE_HELPERS, {\n    name,\n    css,\n    template\n  })));\n}\n/**\n * Create the bindings to update the component attributes\n * @param   {HTMLElement} node - node where we will bind the expressions\n * @param   {Array} attributes - list of attribute bindings\n * @returns {TemplateChunk} - template bindings object\n */\n\nfunction createAttributeBindings(node, attributes) {\n  if (attributes === void 0) {\n    attributes = [];\n  }\n\n  const expressions = attributes.map(a => create$2(node, a));\n  const binding = {};\n  return Object.assign(binding, Object.assign({\n    expressions\n  }, createCoreAPIMethods(method => scope => {\n    expressions.forEach(e => e[method](scope));\n    return binding;\n  })));\n}\n/**\n * Create the subcomponents that can be included inside a tag in runtime\n * @param   {Object} components - components imported in runtime\n * @returns {Object} all the components transformed into Riot.Component factory functions\n */\n\n\nfunction createSubcomponents(components) {\n  if (components === void 0) {\n    components = {};\n  }\n\n  return Object.entries(callOrAssign(components)).reduce((acc, _ref5) => {\n    let [key, value] = _ref5;\n    acc[camelToDashCase(key)] = createComponent(value);\n    return acc;\n  }, {});\n}\n/**\n * Run the component instance through all the plugins set by the user\n * @param   {Object} component - component instance\n * @returns {Object} the component enhanced by the plugins\n */\n\n\nfunction runPlugins(component) {\n  return [...PLUGINS_SET].reduce((c, fn) => fn(c) || c, component);\n}\n/**\n * Compute the component current state merging it with its previous state\n * @param   {Object} oldState - previous state object\n * @param   {Object} newState - new state givent to the `update` call\n * @returns {Object} new object state\n */\n\n\nfunction computeState(oldState, newState) {\n  return Object.assign({}, oldState, {}, callOrAssign(newState));\n}\n/**\n * Add eventually the \"is\" attribute to link this DOM node to its css\n * @param {HTMLElement} element - target root node\n * @param {string} name - name of the component mounted\n * @returns {undefined} it's a void function\n */\n\n\nfunction addCssHook(element, name) {\n  if (getName(element) !== name) {\n    set(element, IS_DIRECTIVE, name);\n  }\n}\n/**\n * Component creation factory function that will enhance the user provided API\n * @param   {Object} component - a component implementation previously defined\n * @param   {Array} options.slots - component slots generated via riot compiler\n * @param   {Array} options.attributes - attribute expressions generated via riot compiler\n * @returns {Riot.Component} a riot component instance\n */\n\n\nfunction enhanceComponentAPI(component, _ref6) {\n  let {\n    slots,\n    attributes,\n    props\n  } = _ref6;\n  return autobindMethods(runPlugins(defineProperties(Object.create(component), {\n    mount(element, state, parentScope) {\n      if (state === void 0) {\n        state = {};\n      }\n\n      this[ATTRIBUTES_KEY_SYMBOL] = createAttributeBindings(element, attributes).mount(parentScope);\n      defineProperty(this, PROPS_KEY, Object.freeze(Object.assign({}, evaluateInitialProps(element, props), {}, evaluateAttributeExpressions$1(this[ATTRIBUTES_KEY_SYMBOL].expressions))));\n      this[STATE_KEY] = computeState(this[STATE_KEY], state);\n      this[TEMPLATE_KEY_SYMBOL] = this.template.createDOM(element).clone(); // link this object to the DOM node\n\n      bindDOMNodeToComponentObject(element, this); // add eventually the 'is' attribute\n\n      component.name && addCssHook(element, component.name); // define the root element\n\n      defineProperty(this, ROOT_KEY, element); // define the slots array\n\n      defineProperty(this, SLOTS_KEY, slots); // before mount lifecycle event\n\n      this[ON_BEFORE_MOUNT_KEY](this[PROPS_KEY], this[STATE_KEY]); // mount the template\n\n      this[TEMPLATE_KEY_SYMBOL].mount(element, this, parentScope);\n      this[PARENT_KEY_SYMBOL] = parentScope;\n      this[ON_MOUNTED_KEY](this[PROPS_KEY], this[STATE_KEY]);\n      return this;\n    },\n\n    update(state, parentScope) {\n      if (state === void 0) {\n        state = {};\n      }\n\n      if (parentScope) {\n        this[ATTRIBUTES_KEY_SYMBOL].update(parentScope);\n      }\n\n      const newProps = evaluateAttributeExpressions$1(this[ATTRIBUTES_KEY_SYMBOL].expressions);\n      if (this[SHOULD_UPDATE_KEY](newProps, this[PROPS_KEY]) === false) return;\n      defineProperty(this, PROPS_KEY, Object.freeze(Object.assign({}, this[PROPS_KEY], {}, newProps)));\n      this[STATE_KEY] = computeState(this[STATE_KEY], state);\n      this[ON_BEFORE_UPDATE_KEY](this[PROPS_KEY], this[STATE_KEY]);\n      this[TEMPLATE_KEY_SYMBOL].update(this, this[PARENT_KEY_SYMBOL]);\n      this[ON_UPDATED_KEY](this[PROPS_KEY], this[STATE_KEY]);\n      return this;\n    },\n\n    unmount(preserveRoot) {\n      this[ON_BEFORE_UNMOUNT_KEY](this[PROPS_KEY], this[STATE_KEY]);\n      this[ATTRIBUTES_KEY_SYMBOL].unmount(); // if the preserveRoot is null the template html will be left untouched\n      // in that case the DOM cleanup will happen differently from a parent node\n\n      this[TEMPLATE_KEY_SYMBOL].unmount(this, this[PARENT_KEY_SYMBOL], preserveRoot === null ? null : !preserveRoot);\n      this[ON_UNMOUNTED_KEY](this[PROPS_KEY], this[STATE_KEY]);\n      return this;\n    }\n\n  })), Object.keys(component).filter(prop => isFunction$1(component[prop])));\n}\n/**\n * Component initialization function starting from a DOM node\n * @param   {HTMLElement} element - element to upgrade\n * @param   {Object} initialProps - initial component properties\n * @param   {string} componentName - component id\n * @returns {Object} a new component instance bound to a DOM node\n */\n\nfunction mountComponent(element, initialProps, componentName) {\n  const name = componentName || getName(element);\n  if (!COMPONENTS_IMPLEMENTATION_MAP.has(name)) panic(`The component named \"${name}\" was never registered`);\n  const component = COMPONENTS_IMPLEMENTATION_MAP.get(name)({\n    props: initialProps\n  });\n  return component.mount(element);\n}\n\n/**\n * Similar to compose but performs from left-to-right function composition.<br/>\n * {@link https://30secondsofcode.org/function#composeright see also}\n * @param   {...[function]} fns) - list of unary function\n * @returns {*} result of the computation\n */\n/**\n * Performs right-to-left function composition.<br/>\n * Use Array.prototype.reduce() to perform right-to-left function composition.<br/>\n * The last (rightmost) function can accept one or more arguments; the remaining functions must be unary.<br/>\n * {@link https://30secondsofcode.org/function#compose original source code}\n * @param   {...[function]} fns) - list of unary function\n * @returns {*} result of the computation\n */\n\nfunction compose() {\n  for (var _len2 = arguments.length, fns = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    fns[_key2] = arguments[_key2];\n  }\n\n  return fns.reduce((f, g) => function () {\n    return f(g(...arguments));\n  });\n}\n\nconst {\n  DOM_COMPONENT_INSTANCE_PROPERTY: DOM_COMPONENT_INSTANCE_PROPERTY$1,\n  COMPONENTS_IMPLEMENTATION_MAP: COMPONENTS_IMPLEMENTATION_MAP$1,\n  PLUGINS_SET: PLUGINS_SET$1\n} = globals;\n/**\n * Riot public api\n */\n\n/**\n * Register a custom tag by name\n * @param   {string} name - component name\n * @param   {Object} implementation - tag implementation\n * @returns {Map} map containing all the components implementations\n */\n\nfunction register(name, _ref) {\n  let {\n    css,\n    template,\n    exports\n  } = _ref;\n  if (COMPONENTS_IMPLEMENTATION_MAP$1.has(name)) panic(`The component \"${name}\" was already registered`);\n  COMPONENTS_IMPLEMENTATION_MAP$1.set(name, createComponent({\n    name,\n    css,\n    template,\n    exports\n  }));\n  return COMPONENTS_IMPLEMENTATION_MAP$1;\n}\n/**\n * Unregister a riot web component\n * @param   {string} name - component name\n * @returns {Map} map containing all the components implementations\n */\n\nfunction unregister(name) {\n  if (!COMPONENTS_IMPLEMENTATION_MAP$1.has(name)) panic(`The component \"${name}\" was never registered`);\n  COMPONENTS_IMPLEMENTATION_MAP$1.delete(name);\n  cssManager.remove(name);\n  return COMPONENTS_IMPLEMENTATION_MAP$1;\n}\n/**\n * Mounting function that will work only for the components that were globally registered\n * @param   {string|HTMLElement} selector - query for the selection or a DOM element\n * @param   {Object} initialProps - the initial component properties\n * @param   {string} name - optional component name\n * @returns {Array} list of nodes upgraded\n */\n\nfunction mount(selector, initialProps, name) {\n  return $(selector).map(element => mountComponent(element, initialProps, name));\n}\n/**\n * Sweet unmounting helper function for the DOM node mounted manually by the user\n * @param   {string|HTMLElement} selector - query for the selection or a DOM element\n * @param   {boolean|null} keepRootElement - if true keep the root element\n * @returns {Array} list of nodes unmounted\n */\n\nfunction unmount(selector, keepRootElement) {\n  return $(selector).map(element => {\n    if (element[DOM_COMPONENT_INSTANCE_PROPERTY$1]) {\n      element[DOM_COMPONENT_INSTANCE_PROPERTY$1].unmount(keepRootElement);\n    }\n\n    return element;\n  });\n}\n/**\n * Define a riot plugin\n * @param   {Function} plugin - function that will receive all the components created\n * @returns {Set} the set containing all the plugins installed\n */\n\nfunction install(plugin) {\n  if (!isFunction$1(plugin)) panic('Plugins must be of type function');\n  if (PLUGINS_SET$1.has(plugin)) panic('This plugin was already install');\n  PLUGINS_SET$1.add(plugin);\n  return PLUGINS_SET$1;\n}\n/**\n * Uninstall a riot plugin\n * @param   {Function} plugin - plugin previously installed\n * @returns {Set} the set containing all the plugins installed\n */\n\nfunction uninstall(plugin) {\n  if (!PLUGINS_SET$1.has(plugin)) panic('This plugin was never installed');\n  PLUGINS_SET$1.delete(plugin);\n  return PLUGINS_SET$1;\n}\n/**\n * Helpter method to create component without relying on the registered ones\n * @param   {Object} implementation - component implementation\n * @returns {Function} function that will allow you to mount a riot component on a DOM node\n */\n\nfunction component(implementation) {\n  return function (el, props, _temp) {\n    let {\n      slots,\n      attributes,\n      parentScope\n    } = _temp === void 0 ? {} : _temp;\n    return compose(c => c.mount(el, parentScope), c => c({\n      props,\n      slots,\n      attributes\n    }), createComponent)(implementation);\n  };\n}\n/**\n * Lift a riot component Interface into a pure riot object\n * @param   {Function} func - RiotPureComponent factory function\n * @returns {Function} the lifted original function received as argument\n */\n\nfunction pure(func) {\n  if (!isFunction$1(func)) panic('riot.pure accepts only arguments of type \"function\"');\n  func[IS_PURE_SYMBOL] = true;\n  return func;\n}\n/** @type {string} current riot version */\n\nconst version = 'v4.11.0'; // expose some internal stuff that might be used from external tools\n\nconst __ = {\n  cssManager,\n  DOMBindings,\n  createComponent,\n  defineComponent,\n  globals\n};\n\nexport { __, component, install, mount, pure, register, uninstall, unmount, unregister, version };\n","/**\n * Converts any DOM node/s to a loopable array\n * @param   { HTMLElement|NodeList } els - single html element or a node list\n * @returns { Array } always a loopable object\n */\nexport default function domToArray(els) {\n  // can this object be already looped?\n  if (!Array.isArray(els)) {\n    // is it a node list?\n    if (\n      /^\\[object (HTMLCollection|NodeList|Object)\\]$/\n        .test(Object.prototype.toString.call(els))\n        && typeof els.length === 'number'\n    )\n      return Array.from(els)\n    else\n      // if it's a single node\n      // it will be returned as \"array\" with one single entry\n      return [els]\n  }\n  // this object could be looped out of the box\n  return els\n}","import domToArray from 'bianco.dom-to-array'\n\n/**\n * Simple helper to find DOM nodes returning them as array like loopable object\n * @param   { string|DOMNodeList } selector - either the query or the DOM nodes to arraify\n * @param   { HTMLElement }        ctx      - context defining where the query will search for the DOM nodes\n * @returns { Array } DOM nodes found as array\n */\nexport default function $(selector, ctx) {\n  return domToArray(typeof selector === 'string' ?\n    (ctx || document).querySelectorAll(selector) :\n    selector\n  )\n}\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('riot'), require('bianco.query')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'riot', 'bianco.query'], factory) :\n  (global = global || self, factory(global.riotHotReload = {}, global.riot, global.$));\n}(this, (function (exports, riot, $) { 'use strict';\n\n  $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n\n  const { cssManager } = riot.__;\n  const { DOM_COMPONENT_INSTANCE_PROPERTY } = riot.__.globals;\n\n  function reload(componentAPI) {\n    const {name} = componentAPI;\n\n    if (!name) {\n      console.warn('Anonymous components can not be reloaded'); // eslint-disable-line\n      return []\n    }\n\n    return $(`${name}, [is=${name}]`).map(el => {\n      const oldTag = el[DOM_COMPONENT_INSTANCE_PROPERTY];\n\n      // early return in case there is no riot instance found\n      if (!oldTag) return\n\n      // remove the tag template from the DOM\n      oldTag.unmount(true);\n      // delete the old css from the css manager\n      cssManager.remove(name);\n\n      // create the new tag\n      const newTag = riot.component(componentAPI)(el, oldTag.props);\n      newTag.update(oldTag.state);\n\n      return newTag\n    })\n  }\n\n  exports.default = reload;\n  exports.reload = reload;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","'use strict';\n\nmodule.exports = {\n  isString: function(arg) {\n    return typeof(arg) === 'string';\n  },\n  isObject: function(arg) {\n    return typeof(arg) === 'object' && arg !== null;\n  },\n  isNull: function(arg) {\n    return arg === null;\n  },\n  isNullOrUndefined: function(arg) {\n    return arg == null;\n  }\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar punycode = require('punycode');\nvar util = require('./util');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n      splitter =\n          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      util.isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host || srcPath.length > 1) &&\n      (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n","import { __, pure } from 'riot';\n\n/**\n * Tokenize input string.\n */\nfunction lexer(str) {\n  var tokens = [];\n  var i = 0;\n\n  while (i < str.length) {\n    var char = str[i];\n\n    if (char === \"*\" || char === \"+\" || char === \"?\") {\n      tokens.push({\n        type: \"MODIFIER\",\n        index: i,\n        value: str[i++]\n      });\n      continue;\n    }\n\n    if (char === \"\\\\\") {\n      tokens.push({\n        type: \"ESCAPED_CHAR\",\n        index: i++,\n        value: str[i++]\n      });\n      continue;\n    }\n\n    if (char === \"{\") {\n      tokens.push({\n        type: \"OPEN\",\n        index: i,\n        value: str[i++]\n      });\n      continue;\n    }\n\n    if (char === \"}\") {\n      tokens.push({\n        type: \"CLOSE\",\n        index: i,\n        value: str[i++]\n      });\n      continue;\n    }\n\n    if (char === \":\") {\n      var name = \"\";\n      var j = i + 1;\n\n      while (j < str.length) {\n        var code = str.charCodeAt(j);\n\n        if ( // `0-9`\n        code >= 48 && code <= 57 || // `A-Z`\n        code >= 65 && code <= 90 || // `a-z`\n        code >= 97 && code <= 122 || // `_`\n        code === 95) {\n          name += str[j++];\n          continue;\n        }\n\n        break;\n      }\n\n      if (!name) throw new TypeError(\"Missing parameter name at \" + i);\n      tokens.push({\n        type: \"NAME\",\n        index: i,\n        value: name\n      });\n      i = j;\n      continue;\n    }\n\n    if (char === \"(\") {\n      var count = 1;\n      var pattern = \"\";\n      var j = i + 1;\n\n      if (str[j] === \"?\") {\n        throw new TypeError(\"Pattern cannot start with \\\"?\\\" at \" + j);\n      }\n\n      while (j < str.length) {\n        if (str[j] === \"\\\\\") {\n          pattern += str[j++] + str[j++];\n          continue;\n        }\n\n        if (str[j] === \")\") {\n          count--;\n\n          if (count === 0) {\n            j++;\n            break;\n          }\n        } else if (str[j] === \"(\") {\n          count++;\n\n          if (str[j + 1] !== \"?\") {\n            throw new TypeError(\"Capturing groups are not allowed at \" + j);\n          }\n        }\n\n        pattern += str[j++];\n      }\n\n      if (count) throw new TypeError(\"Unbalanced pattern at \" + i);\n      if (!pattern) throw new TypeError(\"Missing pattern at \" + i);\n      tokens.push({\n        type: \"PATTERN\",\n        index: i,\n        value: pattern\n      });\n      i = j;\n      continue;\n    }\n\n    tokens.push({\n      type: \"CHAR\",\n      index: i,\n      value: str[i++]\n    });\n  }\n\n  tokens.push({\n    type: \"END\",\n    index: i,\n    value: \"\"\n  });\n  return tokens;\n}\n/**\n * Parse a string for the raw tokens.\n */\n\n\nfunction parse(str, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var tokens = lexer(str);\n  var _a = options.prefixes,\n      prefixes = _a === void 0 ? \"./\" : _a;\n  var defaultPattern = \"[^\" + escapeString(options.delimiter || \"/#?\") + \"]+?\";\n  var result = [];\n  var key = 0;\n  var i = 0;\n  var path = \"\";\n\n  var tryConsume = function tryConsume(type) {\n    if (i < tokens.length && tokens[i].type === type) return tokens[i++].value;\n  };\n\n  var mustConsume = function mustConsume(type) {\n    var value = tryConsume(type);\n    if (value !== undefined) return value;\n    var _a = tokens[i],\n        nextType = _a.type,\n        index = _a.index;\n    throw new TypeError(\"Unexpected \" + nextType + \" at \" + index + \", expected \" + type);\n  };\n\n  var consumeText = function consumeText() {\n    var result = \"\";\n    var value; // tslint:disable-next-line\n\n    while (value = tryConsume(\"CHAR\") || tryConsume(\"ESCAPED_CHAR\")) {\n      result += value;\n    }\n\n    return result;\n  };\n\n  while (i < tokens.length) {\n    var char = tryConsume(\"CHAR\");\n    var name = tryConsume(\"NAME\");\n    var pattern = tryConsume(\"PATTERN\");\n\n    if (name || pattern) {\n      var prefix = char || \"\";\n\n      if (prefixes.indexOf(prefix) === -1) {\n        path += prefix;\n        prefix = \"\";\n      }\n\n      if (path) {\n        result.push(path);\n        path = \"\";\n      }\n\n      result.push({\n        name: name || key++,\n        prefix: prefix,\n        suffix: \"\",\n        pattern: pattern || defaultPattern,\n        modifier: tryConsume(\"MODIFIER\") || \"\"\n      });\n      continue;\n    }\n\n    var value = char || tryConsume(\"ESCAPED_CHAR\");\n\n    if (value) {\n      path += value;\n      continue;\n    }\n\n    if (path) {\n      result.push(path);\n      path = \"\";\n    }\n\n    var open = tryConsume(\"OPEN\");\n\n    if (open) {\n      var prefix = consumeText();\n      var name_1 = tryConsume(\"NAME\") || \"\";\n      var pattern_1 = tryConsume(\"PATTERN\") || \"\";\n      var suffix = consumeText();\n      mustConsume(\"CLOSE\");\n      result.push({\n        name: name_1 || (pattern_1 ? key++ : \"\"),\n        pattern: name_1 && !pattern_1 ? defaultPattern : pattern_1,\n        prefix: prefix,\n        suffix: suffix,\n        modifier: tryConsume(\"MODIFIER\") || \"\"\n      });\n      continue;\n    }\n\n    mustConsume(\"END\");\n  }\n\n  return result;\n}\n/**\n * Compile a string to a template function for the path.\n */\n\nfunction compile(str, options) {\n  return tokensToFunction(parse(str, options), options);\n}\n/**\n * Expose a method for transforming tokens into the path function.\n */\n\nfunction tokensToFunction(tokens, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var reFlags = flags(options);\n  var _a = options.encode,\n      encode = _a === void 0 ? function (x) {\n    return x;\n  } : _a,\n      _b = options.validate,\n      validate = _b === void 0 ? true : _b; // Compile all the tokens into regexps.\n\n  var matches = tokens.map(function (token) {\n    if (typeof token === \"object\") {\n      return new RegExp(\"^(?:\" + token.pattern + \")$\", reFlags);\n    }\n  });\n  return function (data) {\n    var path = \"\";\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n\n      if (typeof token === \"string\") {\n        path += token;\n        continue;\n      }\n\n      var value = data ? data[token.name] : undefined;\n      var optional = token.modifier === \"?\" || token.modifier === \"*\";\n      var repeat = token.modifier === \"*\" || token.modifier === \"+\";\n\n      if (Array.isArray(value)) {\n        if (!repeat) {\n          throw new TypeError(\"Expected \\\"\" + token.name + \"\\\" to not repeat, but got an array\");\n        }\n\n        if (value.length === 0) {\n          if (optional) continue;\n          throw new TypeError(\"Expected \\\"\" + token.name + \"\\\" to not be empty\");\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          var segment = encode(value[j], token);\n\n          if (validate && !matches[i].test(segment)) {\n            throw new TypeError(\"Expected all \\\"\" + token.name + \"\\\" to match \\\"\" + token.pattern + \"\\\", but got \\\"\" + segment + \"\\\"\");\n          }\n\n          path += token.prefix + segment + token.suffix;\n        }\n\n        continue;\n      }\n\n      if (typeof value === \"string\" || typeof value === \"number\") {\n        var segment = encode(String(value), token);\n\n        if (validate && !matches[i].test(segment)) {\n          throw new TypeError(\"Expected \\\"\" + token.name + \"\\\" to match \\\"\" + token.pattern + \"\\\", but got \\\"\" + segment + \"\\\"\");\n        }\n\n        path += token.prefix + segment + token.suffix;\n        continue;\n      }\n\n      if (optional) continue;\n      var typeOfMessage = repeat ? \"an array\" : \"a string\";\n      throw new TypeError(\"Expected \\\"\" + token.name + \"\\\" to be \" + typeOfMessage);\n    }\n\n    return path;\n  };\n}\n/**\n * Escape a regular expression string.\n */\n\nfunction escapeString(str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n}\n/**\n * Get the flags for a regexp from the options.\n */\n\n\nfunction flags(options) {\n  return options && options.sensitive ? \"\" : \"i\";\n}\n/**\n * Pull out keys from a regexp.\n */\n\n\nfunction regexpToRegexp(path, keys) {\n  if (!keys) return path; // Use a negative lookahead to match only capturing groups.\n\n  var groups = path.source.match(/\\((?!\\?)/g);\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: \"\",\n        suffix: \"\",\n        modifier: \"\",\n        pattern: \"\"\n      });\n    }\n  }\n\n  return path;\n}\n/**\n * Transform an array into a regexp.\n */\n\n\nfunction arrayToRegexp(paths, keys, options) {\n  var parts = paths.map(function (path) {\n    return pathToRegexp(path, keys, options).source;\n  });\n  return new RegExp(\"(?:\" + parts.join(\"|\") + \")\", flags(options));\n}\n/**\n * Create a path regexp from string input.\n */\n\n\nfunction stringToRegexp(path, keys, options) {\n  return tokensToRegexp(parse(path, options), keys, options);\n}\n/**\n * Expose a function for taking tokens and returning a RegExp.\n */\n\n\nfunction tokensToRegexp(tokens, keys, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _a = options.strict,\n      strict = _a === void 0 ? false : _a,\n      _b = options.start,\n      start = _b === void 0 ? true : _b,\n      _c = options.end,\n      end = _c === void 0 ? true : _c,\n      _d = options.encode,\n      encode = _d === void 0 ? function (x) {\n    return x;\n  } : _d;\n  var endsWith = \"[\" + escapeString(options.endsWith || \"\") + \"]|$\";\n  var delimiter = \"[\" + escapeString(options.delimiter || \"/#?\") + \"]\";\n  var route = start ? \"^\" : \"\"; // Iterate over the tokens and create our regexp string.\n\n  for (var _i = 0, tokens_1 = tokens; _i < tokens_1.length; _i++) {\n    var token = tokens_1[_i];\n\n    if (typeof token === \"string\") {\n      route += escapeString(encode(token));\n    } else {\n      var prefix = escapeString(encode(token.prefix));\n      var suffix = escapeString(encode(token.suffix));\n\n      if (token.pattern) {\n        if (keys) keys.push(token);\n\n        if (prefix || suffix) {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            var mod = token.modifier === \"*\" ? \"?\" : \"\";\n            route += \"(?:\" + prefix + \"((?:\" + token.pattern + \")(?:\" + suffix + prefix + \"(?:\" + token.pattern + \"))*)\" + suffix + \")\" + mod;\n          } else {\n            route += \"(?:\" + prefix + \"(\" + token.pattern + \")\" + suffix + \")\" + token.modifier;\n          }\n        } else {\n          route += \"(\" + token.pattern + \")\" + token.modifier;\n        }\n      } else {\n        route += \"(?:\" + prefix + suffix + \")\" + token.modifier;\n      }\n    }\n  }\n\n  if (end) {\n    if (!strict) route += delimiter + \"?\";\n    route += !options.endsWith ? \"$\" : \"(?=\" + endsWith + \")\";\n  } else {\n    var endToken = tokens[tokens.length - 1];\n    var isEndDelimited = typeof endToken === \"string\" ? delimiter.indexOf(endToken[endToken.length - 1]) > -1 : // tslint:disable-next-line\n    endToken === undefined;\n\n    if (!strict) {\n      route += \"(?:\" + delimiter + \"(?=\" + endsWith + \"))?\";\n    }\n\n    if (!isEndDelimited) {\n      route += \"(?=\" + delimiter + \"|\" + endsWith + \")\";\n    }\n  }\n\n  return new RegExp(route, flags(options));\n}\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n */\n\nfunction pathToRegexp(path, keys, options) {\n  if (path instanceof RegExp) return regexpToRegexp(path, keys);\n  if (Array.isArray(path)) return arrayToRegexp(path, keys, options);\n  return stringToRegexp(path, keys, options);\n}\n\n/**\n * Cancel token\n * @private\n * @type { Symbol }\n */\nconst CANCEL = Symbol();\n/**\n * Helper that can be returned by ruit function to cancel the tasks chain\n * @returns { Symbol } internal private constant\n * @example\n *\n * ruit(\n *   100,\n *   num => Math.random() * num\n *   num => num > 50 ? ruit.cancel() : num\n *   num => num - 2\n * ).then(result => {\n *   console.log(result) // here we will get only number lower than 50\n * })\n *\n */\n\nruit.cancel = () => CANCEL;\n/**\n * The same as ruit() but with the arguments inverted from right to left\n * @param   { * } tasks - list of tasks to process sequentially\n * @returns { Promise } a promise containing the result of the whole chain\n * @example\n *\n * const curry = f => a => b => f(a, b)\n * const add = (a, b) => a + b\n *\n * const addOne = curry(add)(1)\n *\n * const squareAsync = (num) => {\n *   return new Promise(r => {\n *     setTimeout(r, 500, num * 2)\n *   })\n * }\n *\n * // a -> a + a -> a * 2\n * // basically from right to left: 1 => 1 + 1 => 2 * 2\n * ruit.compose(squareAsync, addOne, 1).then(result => console.log(result)) // 4\n */\n\n\nruit.compose = function () {\n  for (var _len = arguments.length, tasks = new Array(_len), _key = 0; _key < _len; _key++) {\n    tasks[_key] = arguments[_key];\n  }\n\n  return ruit(...tasks.reverse());\n};\n/**\n * Serialize a list of sync and async tasks from left to right\n * @param   { * } tasks - list of tasks to process sequentially\n * @returns { Promise } a promise containing the result of the whole chain\n * @example\n *\n * const curry = f => a => b => f(a, b)\n * const add = (a, b) => a + b\n *\n * const addOne = curry(add)(1)\n *\n * const squareAsync = (num) => {\n *   return new Promise(r => {\n *     setTimeout(r, 500, num * 2)\n *   })\n * }\n *\n * // a -> a + a -> a * 2\n * // basically from left to right: 1 => 1 + 1 => 2 * 2\n * ruit(1, addOne, squareAsync).then(result => console.log(result)) // 4\n */\n\n\nfunction ruit() {\n  for (var _len2 = arguments.length, tasks = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    tasks[_key2] = arguments[_key2];\n  }\n\n  return new Promise((resolve, reject) => {\n    return function run(queue, result) {\n      if (!queue.length) return resolve(result);\n      const [task, ...rest] = queue;\n      const value = typeof task === 'function' ? task(result) : task;\n\n      const done = v => run(rest, v); // check against nil values\n\n\n      if (value != null) {\n        if (value === CANCEL) return;\n        if (value.then) return value.then(done, reject);\n      }\n\n      return Promise.resolve(done(value));\n    }(tasks);\n  });\n}\n\nconst API_METHODS = new Set();\nconst UNSUBSCRIBE_SYMBOL = Symbol();\nconst UNSUBSCRIBE_METHOD = 'off';\nconst CANCEL_METHOD = 'cancel';\n/**\n * Factory function to create the stream generator\n * @private\n * @param {Set} modifiers - stream input modifiers\n * @returns {Generator} the stream generator\n */\n\nfunction createStream(modifiers) {\n  const stream = function* stream() {\n    while (true) {\n      // get the initial stream value\n      const input = yield; // run the input sequence\n\n      yield ruit(input, ...modifiers);\n    }\n  }(); // start the stream\n\n\n  stream.next();\n  return stream;\n}\n/**\n * Dispatch a value to several listeners\n * @private\n * @param   {Set} callbacks - callbacks collection\n * @param   {*} value - anything\n * @returns {Set} the callbacks received\n */\n\n\nfunction dispatch(callbacks, value) {\n  callbacks.forEach(f => {\n    // unsubscribe the callback if erre.unsubscribe() will be returned\n    if (f(value) === UNSUBSCRIBE_SYMBOL) callbacks.delete(f);\n  });\n  return callbacks;\n}\n/**\n * Throw a panic error\n * @param {string} message - error message\n * @returns {Error} an error object\n */\n\n\nfunction panic(message) {\n  throw new Error(message);\n}\n/**\n * Install an erre plugin adding it to the API\n * @param   {string} name - plugin name\n * @param   {Function} fn - new erre API method\n * @returns {Function} return the erre function\n */\n\n\nerre.install = function (name, fn) {\n  if (!name || typeof name !== 'string') panic('Please provide a name (as string) for your erre plugin');\n  if (!fn || typeof fn !== 'function') panic('Please provide a function for your erre plugin');\n\n  if (API_METHODS.has(name)) {\n    panic(`The ${name} is already part of the erre API, please provide a different name`);\n  } else {\n    erre[name] = fn;\n    API_METHODS.add(name);\n  }\n\n  return erre;\n}; // alias for ruit canel to stop a stream chain\n\n\nerre.install(CANCEL_METHOD, ruit.cancel); // unsubscribe helper\n\nerre.install(UNSUBSCRIBE_METHOD, () => UNSUBSCRIBE_SYMBOL);\n/**\n * Stream constuction function\n * @param   {...Function} fns - stream modifiers\n * @returns {Object} erre instance\n */\n\nfunction erre() {\n  for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {\n    fns[_key] = arguments[_key];\n  }\n\n  const [success, error, end, modifiers] = [new Set(), new Set(), new Set(), new Set(fns)],\n        generator = createStream(modifiers),\n        stream = Object.create(generator),\n        addToCollection = collection => fn => collection.add(fn) && stream,\n        deleteFromCollection = collection => fn => collection.delete(fn) ? stream : panic('Couldn\\'t remove handler passed by reference');\n\n  return Object.assign(stream, {\n    on: Object.freeze({\n      value: addToCollection(success),\n      error: addToCollection(error),\n      end: addToCollection(end)\n    }),\n    off: Object.freeze({\n      value: deleteFromCollection(success),\n      error: deleteFromCollection(error),\n      end: deleteFromCollection(end)\n    }),\n    connect: addToCollection(modifiers),\n\n    push(input) {\n      const {\n        value,\n        done\n      } = stream.next(input); // dispatch the stream events\n\n      if (!done) {\n        value.then(res => dispatch(success, res), err => dispatch(error, err));\n      }\n\n      return stream;\n    },\n\n    end() {\n      // kill the stream\n      generator.return(); // dispatch the end event\n\n      dispatch(end) // clean up all the collections\n      ;\n      [success, error, end, modifiers].forEach(el => el.clear());\n      return stream;\n    },\n\n    fork() {\n      return erre(...modifiers);\n    },\n\n    next(input) {\n      // get the input and run eventually the promise\n      const result = generator.next(input); // pause to the next iteration\n\n      generator.next();\n      return result;\n    }\n\n  });\n}\n\nconst hasWindow = typeof window !== 'undefined';\n\nconst isString = str => typeof str === 'string'; // the url parsing function depends on the platform, on node we rely on the 'url' module\n\n/* istanbul ignore next */\n\n\nconst parseURL = function parseURL() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return hasWindow ? new URL(...args) : require('url').parse(...args);\n};\n/**\n * Replace the base path from a path\n * @param   {string} path - router path string\n * @returns {string} path cleaned up without the base\n */\n\n\nconst replaceBase = path => path.replace(defaults.base, '');\n/**\n * Try to match the current path or skip it\n * @param   {RegEx} pathRegExp - target path transformed by pathToRegexp\n * @returns {string|Symbol} if the path match we return it otherwise we cancel the stream\n */\n\n\nconst matchOrSkip = pathRegExp => path => match(path, pathRegExp) ? path : erre.cancel();\n/**\n * Combine 2 streams connecting the events of dispatcherStream to the receiverStream\n * @param   {Stream} dispatcherStream - main stream dispatching events\n * @param   {Stream} receiverStream - sub stream receiving events from the dispatcher\n * @returns {Stream} receiverStream\n */\n\n\nconst joinStreams = (dispatcherStream, receiverStream) => {\n  dispatcherStream.on.value(receiverStream.push);\n  receiverStream.on.end(() => {\n    dispatcherStream.off.value(receiverStream.push);\n  });\n  return receiverStream;\n};\n/**\n * Error handling function\n * @param   {Error} error - error to catch\n * @returns {void}\n */\n\n\nconst panic$1 = error => {\n  if (defaults.silentErrors) return;\n  throw new Error(error);\n}; // make sure that the router will always receive strings params\n\n\nconst filterStrings = str => isString(str) ? str : erre.cancel(); // create the streaming router\n\nconst router = erre(filterStrings).on.error(panic$1); // cast the values of this stream always to string\n\n/* @type {object} general configuration object */\n\nconst defaults = {\n  // custom option\n  base: '',\n  silentErrors: false,\n  // pathToRegexp options\n  sensitive: false,\n  strict: false,\n  end: true,\n  start: true,\n  delimiter: '/#?',\n  encode: undefined,\n  endsWith: undefined,\n  prefixes: './'\n};\n/**\n * Merge the user options with the defaults\n * @param   {Object} options - custom user options\n * @returns {Object} options object merged with defaults\n */\n\nconst mergeOptions = options => Object.assign({}, defaults, options);\n/* {@link https://github.com/pillarjs/path-to-regexp#usage} */\n\nconst toRegexp = (path, keys, options) => pathToRegexp(path, keys, mergeOptions(options));\n/**\n * Convert a router entry to a real path computing the url parameters\n * @param   {string} path - router path string\n * @param   {Object} params - named matched parameters\n * @param   {Object} options - pathToRegexp options object\n * @returns {string} computed url string\n */\n\nconst toPath = (path, params, options) => compile(path, mergeOptions(options))(params);\n/**\n * Parse a string path generating an object containing\n * @param   {string} path - target path\n * @param   {RegExp} pathRegExp - path transformed to regexp via pathToRegexp\n * @param   {Object} options - object containing the base path\n * @returns {URL} url object enhanced with the `match` attribute\n */\n\nconst toURL = (path, pathRegExp, options) => {\n  const {\n    base\n  } = mergeOptions(options);\n  const [, ...params] = pathRegExp.exec(path);\n  const url = parseURL(path, base); // extend the url object adding the matched params\n\n  url.params = params;\n  return url;\n};\n/**\n * Return true if a path will be matched\n * @param   {string} path - target path\n * @param   {RegExp} pathRegExp - path transformed to regexp via pathToRegexp\n * @returns {boolean} true if the path matches the regexp\n */\n\nconst match = (path, pathRegExp) => pathRegExp.test(path);\n/**\n * Factory function to create an sequence of functions to pass to erre.js\n * This function will be used in the erre stream\n * @param   {RegExp} pathRegExp - path transformed to regexp via pathToRegexp\n * @param   {Object} options - pathToRegexp options object\n * @returns {Array} a functions array that will be used as stream pipe for erre.js\n */\n\nconst createURLStreamPipe = (pathRegExp, options) => [replaceBase, matchOrSkip(pathRegExp), path => toURL(path, pathRegExp, options)];\n/**\n * Create a fork of the main router stream\n * @param   {string} path - route to match\n * @param   {Object} options - pathToRegexp options object\n * @returns {Stream} new route stream\n */\n\nfunction createRoute(path, options) {\n  const pathRegExp = pathToRegexp(path, [], options);\n  const URLStream = erre(...createURLStreamPipe(pathRegExp, options));\n  return joinStreams(router, URLStream).on.error(panic$1);\n}\n\nconst getCurrentRoute = (currentRoute => {\n  // listen the route changes events to store the current route\n  router.on.value(r => currentRoute = r);\n  return () => {\n    return currentRoute;\n  };\n})(null);\n\n/**\n * Similar to compose but performs from left-to-right function composition.<br/>\n * {@link https://30secondsofcode.org/function#composeright see also}\n * @param   {...[function]} fns) - list of unary function\n * @returns {*} result of the computation\n */\n/**\n * Performs right-to-left function composition.<br/>\n * Use Array.prototype.reduce() to perform right-to-left function composition.<br/>\n * The last (rightmost) function can accept one or more arguments; the remaining functions must be unary.<br/>\n * {@link https://30secondsofcode.org/function#compose original source code}\n * @param   {...[function]} fns) - list of unary function\n * @returns {*} result of the computation\n */\n\nfunction compose() {\n  for (var _len2 = arguments.length, fns = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    fns[_key2] = arguments[_key2];\n  }\n\n  return fns.reduce((f, g) => function () {\n    return f(g(...arguments));\n  });\n}\n\nconst getInitialRouteValue = (pathToRegexp, path, options) => {\n  const route = compose(\n    ...createURLStreamPipe(pathToRegexp, options).reverse()\n  )(path);\n\n  return route.params ? route : null\n};\n\nvar routeHoc = {\n  'css': null,\n\n  'exports': {\n    onBeforeMount(props) {\n      const currentRoute = getCurrentRoute();\n      const pathToRegexp = toRegexp(props.path, [], props);\n\n      this.state = {\n        pathToRegexp,\n        route: currentRoute && match(currentRoute, pathToRegexp) ?\n          getInitialRouteValue(pathToRegexp, currentRoute, props) :\n          null\n      };\n\n      router.on.value(this.onBeforeRoute);\n      this.stream = createRoute(props.path, props).on.value(this.onRoute);\n    },\n\n    onBeforeRoute(path, pathToRegexp) {\n      if (this.state.route && !match(path, this.state.pathToRegexp)) {\n        this.callLifecycleProperty('onBeforeUnmount', createRoute);\n        this.update({\n          route: null\n        });\n        this.callLifecycleProperty('onUnmounted', createRoute);\n      }\n    },\n\n    onRoute(route) {\n      this.callLifecycleProperty('onBeforeMount', route);\n      this.update({route});\n      this.callLifecycleProperty('onMounted', route);\n    },\n\n    callLifecycleProperty(method, ...params) {\n      if (this.props[method]) this.props[method](...params);\n    },\n\n    onUnmounted() {\n      router.off.value(this.onBeforeRoute);\n      this.stream.end();\n    }\n  },\n\n  'template': function(template, expressionTypes, bindingTypes, getComponent) {\n    return template('<template expr0=\"expr0\"></template>', [{\n      'type': bindingTypes.IF,\n\n      'evaluate': function(scope) {\n        return scope.state.route;\n      },\n\n      'redundantAttribute': 'expr0',\n      'selector': '[expr0]',\n\n      'template': template('<slot expr1=\"expr1\"></slot>', [{\n        'type': bindingTypes.SLOT,\n\n        'attributes': [{\n          'type': expressionTypes.ATTRIBUTE,\n          'name': 'route',\n\n          'evaluate': function(scope) {\n            return scope.state.route;\n          }\n        }],\n\n        'name': 'default',\n        'redundantAttribute': 'expr1',\n        'selector': '[expr1]'\n      }])\n    }]);\n  },\n\n  'name': 'route-hoc'\n};\n\nfunction setBase(base) {\n  defaults.base = base;\n}\n\n/**\n * Throw an error with a descriptive message\n * @param   { string } message - error message\n * @returns { undefined } hoppla.. at this point the program should stop working\n */\n\nfunction panic$2(message) {\n  throw new Error(message);\n}\n\n/**\n * Converts any DOM node/s to a loopable array\n * @param   { HTMLElement|NodeList } els - single html element or a node list\n * @returns { Array } always a loopable object\n */\nfunction domToArray(els) {\n  // can this object be already looped?\n  if (!Array.isArray(els)) {\n    // is it a node list?\n    if (/^\\[object (HTMLCollection|NodeList|Object)\\]$/.test(Object.prototype.toString.call(els)) && typeof els.length === 'number') return Array.from(els);else // if it's a single node\n      // it will be returned as \"array\" with one single entry\n      return [els];\n  } // this object could be looped out of the box\n\n\n  return els;\n}\n\n/**\n * Split a string into several items separed by spaces\n * @param   { string } l - events list\n * @returns { Array } all the events detected\n * @private\n */\n\nconst split = l => l.split(/\\s/);\n/**\n * Set a listener for all the events received separated by spaces\n * @param   { HTMLElement|NodeList|Array } els     - DOM node/s where the listeners will be bound\n * @param   { string }                     evList  - list of events we want to bind or unbind space separated\n * @param   { Function }                   cb      - listeners callback\n * @param   { string }                     method  - either 'addEventListener' or 'removeEventListener'\n * @param   { Object }                     options - event options (capture, once and passive)\n * @returns { undefined }\n * @private\n */\n\n\nfunction manageEvents(els, evList, cb, method, options) {\n  els = domToArray(els);\n  split(evList).forEach(e => {\n    els.forEach(el => el[method](e, cb, options || false));\n  });\n}\n/**\n * Set a listener for all the events received separated by spaces\n * @param   { HTMLElement|Array } els    - DOM node/s where the listeners will be bound\n * @param   { string }            evList - list of events we want to bind space separated\n * @param   { Function }          cb     - listeners callback\n * @param   { Object }            options - event options (capture, once and passive)\n * @returns { HTMLElement|NodeList|Array } DOM node/s and first argument of the function\n */\n\n\nfunction add(els, evList, cb, options) {\n  manageEvents(els, evList, cb, 'addEventListener', options);\n  return els;\n}\n/**\n * Remove all the listeners for the events received separated by spaces\n * @param   { HTMLElement|Array } els     - DOM node/s where the events will be unbind\n * @param   { string }            evList  - list of events we want unbind space separated\n * @param   { Function }          cb      - listeners callback\n * @param   { Object }             options - event options (capture, once and passive)\n * @returns { HTMLElement|NodeList|Array }  DOM node/s and first argument of the function\n */\n\nfunction remove(els, evList, cb, options) {\n  manageEvents(els, evList, cb, 'removeEventListener', options);\n  return els;\n}\n\n/**\n * Normalize the return values, in case of a single value we avoid to return an array\n * @param   { Array } values - list of values we want to return\n * @returns { Array|string|boolean } either the whole list of values or the single one found\n * @private\n */\n\nconst normalize = values => values.length === 1 ? values[0] : values;\n/**\n * Parse all the nodes received to get/remove/check their attributes\n * @param   { HTMLElement|NodeList|Array } els    - DOM node/s to parse\n * @param   { string|Array }               name   - name or list of attributes\n * @param   { string }                     method - method that will be used to parse the attributes\n * @returns { Array|string } result of the parsing in a list or a single value\n * @private\n */\n\n\nfunction parseNodes(els, name, method) {\n  const names = typeof name === 'string' ? [name] : name;\n  return normalize(domToArray(els).map(el => {\n    return normalize(names.map(n => el[method](n)));\n  }));\n}\n/**\n * Set any attribute on a single or a list of DOM nodes\n * @param   { HTMLElement|NodeList|Array } els   - DOM node/s to parse\n * @param   { string|Array }               name  - name or list of attributes to detect\n * @returns { boolean|Array } true or false or an array of boolean values\n * @example\n *\n * import { has } from 'bianco.attr'\n *\n * has(img, 'width') // false\n *\n * // or also\n * has(img, ['width', 'height']) // => [false, false]\n *\n * // or also\n * has([img1, img2], ['width', 'height']) // => [[false, false], [false, false]]\n */\n\nfunction has(els, name) {\n  return parseNodes(els, name, 'hasAttribute');\n}\n\nconst WINDOW_EVENTS = 'popstate';\nconst CLICK_EVENT = 'click';\nconst DOWNLOAD_LINK_ATTRIBUTE = 'download';\nconst HREF_LINK_ATTRIBUTE = 'href';\nconst TARGET_SELF_LINK_ATTRIBUTE = '_self';\nconst LINK_TAG_NAME = 'A';\nconst HASH = '#';\nconst RE_ORIGIN = /^.+?\\/\\/+[^/]+/;\n\nconst getWindow = () => typeof window === 'undefined' ? null : window;\n\nconst getDocument = () => typeof document === 'undefined' ? null : document;\n\nconst getHistorty = () => getWindow() && history;\n\nconst getLocation = () => {\n  const win = getWindow();\n  const hist = getHistorty();\n  return win && (hist.location || win.location);\n};\n\nconst onWindowEvent = () => router.push(normalizePath(String(getLocation().href)));\n\nconst onRouterPush = path => {\n  const url = path.includes(defaults.base) ? path : defaults.base + path;\n  const loc = getLocation();\n  const hist = getHistorty();\n  const doc = getDocument(); // update the browser history only if it's necessary\n\n  if (url !== loc.href) {\n    hist.pushState(null, doc.title, url);\n  }\n};\n\nconst getLinkElement = node => node && !isLinkNode(node) ? getLinkElement(node.parentNode) : node;\n\nconst isLinkNode = node => node.nodeName === LINK_TAG_NAME;\n\nconst isCrossOriginLink = path => path.indexOf(getLocation().href.match(RE_ORIGIN)[0]) === -1;\n\nconst isTargetSelfLink = el => el.target && el.target !== TARGET_SELF_LINK_ATTRIBUTE;\n\nconst isEventForbidden = event => event.which && event.which !== 1 || // not left click\nevent.metaKey || event.ctrlKey || event.shiftKey // or meta keys\n|| event.defaultPrevented; // or default prevented\n\n\nconst isForbiddenLink = el => !el || !isLinkNode(el) // not A tag\n|| has(el, DOWNLOAD_LINK_ATTRIBUTE) // has download attr\n|| !has(el, HREF_LINK_ATTRIBUTE) // has no href attr\n|| isTargetSelfLink(el) || isCrossOriginLink(el.href);\n\nconst isHashLink = path => path.split(HASH).length > 1;\n\nconst normalizePath = path => path.replace(defaults.base, '');\n\nconst isInBase = path => !defaults.base || path.includes(defaults.base);\n/**\n * Callback called anytime something will be clicked on the page\n * @param   {HTMLEvent} event - click event\n * @returns {undefined} void method\n */\n\n\nconst onClick = event => {\n  if (isEventForbidden(event)) return;\n  const el = getLinkElement(event.target);\n  if (isForbiddenLink(el) || isHashLink(el.href) || !isInBase(el.href)) return;\n  const path = normalizePath(el.href);\n  router.push(path);\n  event.preventDefault();\n};\n/**\n * Link the rawth router to the DOM events\n * @param { HTMLElement } container - DOM node where the links are located\n * @returns {Function} teardown function\n */\n\n\nfunction initDomListeners(container) {\n  const win = getWindow();\n  const root = container || getDocument();\n\n  if (win) {\n    add(win, WINDOW_EVENTS, onWindowEvent);\n    add(root, CLICK_EVENT, onClick);\n  }\n\n  router.on.value(onRouterPush);\n  return () => {\n    if (win) {\n      remove(win, WINDOW_EVENTS, onWindowEvent);\n      remove(root, CLICK_EVENT, onClick);\n    }\n\n    router.off.value(onRouterPush);\n  };\n}\n\nconst BASE_ATTRIBUTE_NAME = 'base';\nconst ON_STARTED_ATTRIBUTE_NAME = 'onStarted';\nconst defer = window.requestAnimationFrame || window.setTimeout;\nconst cancelDefer = window.cancelAnimationFrame || window.clearTimeout;\n\nlet wasInitialized = false;\n\nvar routerHoc = {\n  'css': null,\n\n  'exports': (() => {\n    // rely on riot internal only if it's available\n    try {\n      const { template, bindingTypes } = __.DOMBindings;\n\n      return pure(({ slots, attributes, props }) => {\n        if (wasInitialized) panic$2('Multiple <router> components are not supported');\n\n        const getAttribute = name => attributes && attributes.find(a => a.name === name);\n\n        return {\n          slot: null,\n          el: null,\n          teardown: null,\n          mount(el, context) {\n            const currentRoute = getCurrentRoute();\n            const onFirstRoute = () => {\n              this.createSlot(context);\n              router.off.value(onFirstRoute);\n            };\n            wasInitialized = true;\n\n            this.el = el;\n            this.teardown = initDomListeners(this.root);\n\n            this.setBase(context);\n\n            // mount the slots only if the current route was defined\n            if (currentRoute) {\n              this.createSlot(context);\n            } else {\n              router.on.value(onFirstRoute);\n              router.push(window.location.href);\n            }\n          },\n          createSlot(context) {\n            if (!slots || !slots.length) return\n            const onStartedAttr = getAttribute(ON_STARTED_ATTRIBUTE_NAME);\n\n            this.slot = template(null, [{\n              type: bindingTypes.SLOT,\n              name: 'default'\n            }]);\n\n            this.slot.mount(this.el, {\n              slots\n            }, context);\n\n            if (onStartedAttr) {\n              onStartedAttr.evaluate(context)(getCurrentRoute());\n            }\n          },\n          update(context) {\n            this.setBase(context);\n\n            // defer the updates to avoid internal recoursive update calls\n            // see https://github.com/riot/route/issues/148\n            if (this.slot) {\n              cancelDefer(this.deferred);\n\n              this.deferred = defer(() => {\n                this.slot.update({}, context);\n              });\n            }\n          },\n          unmount(...args) {\n            this.teardown();\n            wasInitialized = false;\n\n            if (this.slot) {\n              this.slot.unmount(...args);\n            }\n          },\n          getBase(context) {\n            const loc = window.location;\n            const baseAttr = getAttribute(BASE_ATTRIBUTE_NAME);\n\n            return baseAttr ? baseAttr.evaluate(context) : `${loc.protocol}//${loc.host}`\n          },\n          setBase(context) {\n            setBase(props ? props.base : this.getBase(context));\n          }\n        }\n      })\n    } catch(error) {\n      // riot is not available\n    }\n  })(),\n\n  'template': null,\n  'name': 'router-hoc'\n};\n\nexport { routeHoc as Route, routerHoc as Router, createURLStreamPipe, filterStrings, getCurrentRoute, initDomListeners, match, createRoute as route, router, setBase, toPath, toRegexp, toURL };\n","!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t(require(\"riot\")):\"function\"==typeof define&&define.amd?define([\"riot\"],t):\"object\"==typeof exports?exports.SemanticUiRiot=t(require(\"riot\")):e.SemanticUiRiot=t(e.riot)}(window,(function(e){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var i=t[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var i in e)n.d(r,i,function(t){return e[t]}.bind(null,i));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"\",n(n.s=167)}([function(e,t,n){var r=n(65),i=n(14),a=/[T ]/,o=/:/,s=/^(\\d{2})$/,u=[/^([+-]\\d{2})$/,/^([+-]\\d{3})$/,/^([+-]\\d{4})$/],l=/^(\\d{4})/,c=[/^([+-]\\d{4})/,/^([+-]\\d{5})/,/^([+-]\\d{6})/],p=/^-(\\d{2})$/,d=/^-?(\\d{3})$/,f=/^-?(\\d{2})-?(\\d{2})$/,h=/^-?W(\\d{2})$/,m=/^-?W(\\d{2})-?(\\d{1})$/,v=/^(\\d{2}([.,]\\d*)?)$/,g=/^(\\d{2}):?(\\d{2}([.,]\\d*)?)$/,x=/^(\\d{2}):?(\\d{2}):?(\\d{2}([.,]\\d*)?)$/,b=/([Z+-].*)$/,y=/^(Z)$/,T=/^([+-])(\\d{2})$/,k=/^([+-])(\\d{2}):?(\\d{2})$/;function E(e,t,n){t=t||0,n=n||0;var r=new Date(0);r.setUTCFullYear(e,0,4);var i=7*t+n+1-(r.getUTCDay()||7);return r.setUTCDate(r.getUTCDate()+i),r}e.exports=function(e,t){if(i(e))return new Date(e.getTime());if(\"string\"!=typeof e)return new Date(e);var n=(t||{}).additionalDigits;n=null==n?2:Number(n);var w=function(e){var t,n={},r=e.split(a);o.test(r[0])?(n.date=null,t=r[0]):(n.date=r[0],t=r[1]);if(t){var i=b.exec(t);i?(n.time=t.replace(i[1],\"\"),n.timezone=i[1]):n.time=t}return n}(e),A=function(e,t){var n,r=u[t],i=c[t];if(n=l.exec(e)||i.exec(e)){var a=n[1];return{year:parseInt(a,10),restDateString:e.slice(a.length)}}if(n=s.exec(e)||r.exec(e)){var o=n[1];return{year:100*parseInt(o,10),restDateString:e.slice(o.length)}}return{year:null}}(w.date,n),I=A.year,M=function(e,t){if(null===t)return null;var n,r,i,a;if(0===e.length)return(r=new Date(0)).setUTCFullYear(t),r;if(n=p.exec(e))return r=new Date(0),i=parseInt(n[1],10)-1,r.setUTCFullYear(t,i),r;if(n=d.exec(e)){r=new Date(0);var o=parseInt(n[1],10);return r.setUTCFullYear(t,0,o),r}if(n=f.exec(e)){r=new Date(0),i=parseInt(n[1],10)-1;var s=parseInt(n[2],10);return r.setUTCFullYear(t,i,s),r}if(n=h.exec(e))return a=parseInt(n[1],10)-1,E(t,a);if(n=m.exec(e)){a=parseInt(n[1],10)-1;var u=parseInt(n[2],10)-1;return E(t,a,u)}return null}(A.restDateString,I);if(M){var D,O=M.getTime(),S=0;if(w.time&&(S=function(e){var t,n,r;if(t=v.exec(e))return(n=parseFloat(t[1].replace(\",\",\".\")))%24*36e5;if(t=g.exec(e))return n=parseInt(t[1],10),r=parseFloat(t[2].replace(\",\",\".\")),n%24*36e5+6e4*r;if(t=x.exec(e)){n=parseInt(t[1],10),r=parseInt(t[2],10);var i=parseFloat(t[3].replace(\",\",\".\"));return n%24*36e5+6e4*r+1e3*i}return null}(w.time)),w.timezone)D=6e4*function(e){var t,n;if(t=y.exec(e))return 0;if(t=T.exec(e))return n=60*parseInt(t[2],10),\"+\"===t[1]?-n:n;if(t=k.exec(e))return n=60*parseInt(t[2],10)+parseInt(t[3],10),\"+\"===t[1]?-n:n;return 0}(w.timezone);else{var N=O+S,B=new Date(N);D=r(B);var R=new Date(N);R.setDate(B.getDate()+1);var j=r(R)-r(B);j>0&&(D+=j)}return new Date(O+S+D)}return new Date(e)}},function(t,n){t.exports=e},function(e,t,n){e.exports={addDays:n(6),addHours:n(27),addISOYears:n(28),addMilliseconds:n(7),addMinutes:n(30),addMonths:n(12),addQuarters:n(31),addSeconds:n(32),addWeeks:n(16),addYears:n(33),areRangesOverlapping:n(66),closestIndexTo:n(67),closestTo:n(68),compareAsc:n(9),compareDesc:n(17),differenceInCalendarDays:n(11),differenceInCalendarISOWeeks:n(69),differenceInCalendarISOYears:n(34),differenceInCalendarMonths:n(35),differenceInCalendarQuarters:n(70),differenceInCalendarWeeks:n(71),differenceInCalendarYears:n(37),differenceInDays:n(38),differenceInHours:n(72),differenceInISOYears:n(73),differenceInMilliseconds:n(13),differenceInMinutes:n(74),differenceInMonths:n(18),differenceInQuarters:n(75),differenceInSeconds:n(19),differenceInWeeks:n(76),differenceInYears:n(77),distanceInWords:n(40),distanceInWordsStrict:n(81),distanceInWordsToNow:n(82),eachDay:n(83),endOfDay:n(21),endOfHour:n(84),endOfISOWeek:n(85),endOfISOYear:n(86),endOfMinute:n(87),endOfMonth:n(42),endOfQuarter:n(88),endOfSecond:n(89),endOfToday:n(90),endOfTomorrow:n(91),endOfWeek:n(41),endOfYear:n(92),endOfYesterday:n(93),format:n(94),getDate:n(95),getDay:n(96),getDayOfYear:n(43),getDaysInMonth:n(15),getDaysInYear:n(97),getHours:n(98),getISODay:n(47),getISOWeek:n(22),getISOWeeksInYear:n(99),getISOYear:n(3),getMilliseconds:n(100),getMinutes:n(101),getMonth:n(102),getOverlappingDaysInRanges:n(103),getQuarter:n(36),getSeconds:n(104),getTime:n(105),getYear:n(106),isAfter:n(107),isBefore:n(108),isDate:n(14),isEqual:n(109),isFirstDayOfMonth:n(110),isFriday:n(111),isFuture:n(112),isLastDayOfMonth:n(113),isLeapYear:n(46),isMonday:n(114),isPast:n(115),isSameDay:n(116),isSameHour:n(48),isSameISOWeek:n(50),isSameISOYear:n(51),isSameMinute:n(52),isSameMonth:n(54),isSameQuarter:n(55),isSameSecond:n(57),isSameWeek:n(23),isSameYear:n(59),isSaturday:n(117),isSunday:n(118),isThisHour:n(119),isThisISOWeek:n(120),isThisISOYear:n(121),isThisMinute:n(122),isThisMonth:n(123),isThisQuarter:n(124),isThisSecond:n(125),isThisWeek:n(126),isThisYear:n(127),isThursday:n(128),isToday:n(129),isTomorrow:n(130),isTuesday:n(131),isValid:n(45),isWednesday:n(132),isWeekend:n(133),isWithinRange:n(134),isYesterday:n(135),lastDayOfISOWeek:n(136),lastDayOfISOYear:n(137),lastDayOfMonth:n(138),lastDayOfQuarter:n(139),lastDayOfWeek:n(60),lastDayOfYear:n(140),max:n(141),min:n(142),parse:n(0),setDate:n(143),setDay:n(144),setDayOfYear:n(145),setHours:n(146),setISODay:n(147),setISOWeek:n(148),setISOYear:n(29),setMilliseconds:n(149),setMinutes:n(150),setMonth:n(61),setQuarter:n(151),setSeconds:n(152),setYear:n(153),startOfDay:n(5),startOfHour:n(49),startOfISOWeek:n(4),startOfISOYear:n(8),startOfMinute:n(53),startOfMonth:n(154),startOfQuarter:n(56),startOfSecond:n(58),startOfToday:n(155),startOfTomorrow:n(156),startOfWeek:n(10),startOfYear:n(44),startOfYesterday:n(157),subDays:n(158),subHours:n(159),subISOYears:n(39),subMilliseconds:n(160),subMinutes:n(161),subMonths:n(162),subQuarters:n(163),subSeconds:n(164),subWeeks:n(165),subYears:n(166)}},function(e,t,n){var r=n(0),i=n(4);e.exports=function(e){var t=r(e),n=t.getFullYear(),a=new Date(0);a.setFullYear(n+1,0,4),a.setHours(0,0,0,0);var o=i(a),s=new Date(0);s.setFullYear(n,0,4),s.setHours(0,0,0,0);var u=i(s);return t.getTime()>=o.getTime()?n+1:t.getTime()>=u.getTime()?n:n-1}},function(e,t,n){var r=n(10);e.exports=function(e){return r(e,{weekStartsOn:1})}},function(e,t,n){var r=n(0);e.exports=function(e){var t=r(e);return t.setHours(0,0,0,0),t}},function(e,t,n){var r=n(0);e.exports=function(e,t){var n=r(e),i=Number(t);return n.setDate(n.getDate()+i),n}},function(e,t,n){var r=n(0);e.exports=function(e,t){var n=r(e).getTime(),i=Number(t);return new Date(n+i)}},function(e,t,n){var r=n(3),i=n(4);e.exports=function(e){var t=r(e),n=new Date(0);return n.setFullYear(t,0,4),n.setHours(0,0,0,0),i(n)}},function(e,t,n){var r=n(0);e.exports=function(e,t){var n=r(e).getTime(),i=r(t).getTime();return n<i?-1:n>i?1:0}},function(e,t,n){var r=n(0);e.exports=function(e,t){var n=t&&Number(t.weekStartsOn)||0,i=r(e),a=i.getDay(),o=(a<n?7:0)+a-n;return i.setDate(i.getDate()-o),i.setHours(0,0,0,0),i}},function(e,t,n){var r=n(5);e.exports=function(e,t){var n=r(e),i=r(t),a=n.getTime()-6e4*n.getTimezoneOffset(),o=i.getTime()-6e4*i.getTimezoneOffset();return Math.round((a-o)/864e5)}},function(e,t,n){var r=n(0),i=n(15);e.exports=function(e,t){var n=r(e),a=Number(t),o=n.getMonth()+a,s=new Date(0);s.setFullYear(n.getFullYear(),o,1),s.setHours(0,0,0,0);var u=i(s);return n.setMonth(o,Math.min(u,n.getDate())),n}},function(e,t,n){var r=n(0);e.exports=function(e,t){var n=r(e),i=r(t);return n.getTime()-i.getTime()}},function(e,t){e.exports=function(e){return e instanceof Date}},function(e,t,n){var r=n(0);e.exports=function(e){var t=r(e),n=t.getFullYear(),i=t.getMonth(),a=new Date(0);return a.setFullYear(n,i+1,0),a.setHours(0,0,0,0),a.getDate()}},function(e,t,n){var r=n(6);e.exports=function(e,t){var n=Number(t);return r(e,7*n)}},function(e,t,n){var r=n(0);e.exports=function(e,t){var n=r(e).getTime(),i=r(t).getTime();return n>i?-1:n<i?1:0}},function(e,t,n){var r=n(0),i=n(35),a=n(9);e.exports=function(e,t){var n=r(e),o=r(t),s=a(n,o),u=Math.abs(i(n,o));return n.setMonth(n.getMonth()-s*u),s*(u-(a(n,o)===-s))}},function(e,t,n){var r=n(13);e.exports=function(e,t){var n=r(e,t)/1e3;return n>0?Math.floor(n):Math.ceil(n)}},function(e,t,n){var r=n(78),i=n(79);e.exports={distanceInWords:r(),format:i()}},function(e,t,n){var r=n(0);e.exports=function(e){var t=r(e);return t.setHours(23,59,59,999),t}},function(e,t,n){var r=n(0),i=n(4),a=n(8);e.exports=function(e){var t=r(e),n=i(t).getTime()-a(t).getTime();return Math.round(n/6048e5)+1}},function(e,t,n){var r=n(10);e.exports=function(e,t,n){var i=r(e,n),a=r(t,n);return i.getTime()===a.getTime()}},function(e,t,n){(function(t,n){\n/*!\n *\n * Copyright 2009-2017 Kris Kowal under the terms of the MIT\n * license found at https://github.com/kriskowal/q/blob/v1/LICENSE\n *\n * With parts by Tyler Close\n * Copyright 2007-2009 Tyler Close under the terms of the MIT X license found\n * at http://www.opensource.org/licenses/mit-license.html\n * Forked at ref_send.js version: 2009-05-11\n *\n * With parts by Mark Miller\n * Copyright (C) 2011 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n!function(t){\"use strict\";\"function\"==typeof bootstrap?bootstrap(\"promise\",t):e.exports=t()}((function(){\"use strict\";var e=!1;try{throw new Error}catch(t){e=!!t.stack}var r,i=E(),a=function(){},o=function(){var e={task:void 0,next:null},r=e,i=!1,a=void 0,s=!1,u=[];function l(){for(var t,n;e.next;)t=(e=e.next).task,e.task=void 0,(n=e.domain)&&(e.domain=void 0,n.enter()),c(t,n);for(;u.length;)c(t=u.pop());i=!1}function c(e,t){try{e()}catch(e){if(s)throw t&&t.exit(),setTimeout(l,0),t&&t.enter(),e;setTimeout((function(){throw e}),0)}t&&t.exit()}if(o=function(e){r=r.next={task:e,domain:s&&t.domain,next:null},i||(i=!0,a())},\"object\"==typeof t&&\"[object process]\"===t.toString()&&t.nextTick)s=!0,a=function(){t.nextTick(l)};else if(\"function\"==typeof n)a=\"undefined\"!=typeof window?n.bind(window,l):function(){n(l)};else if(\"undefined\"!=typeof MessageChannel){var p=new MessageChannel;p.port1.onmessage=function(){a=d,p.port1.onmessage=l,l()};var d=function(){p.port2.postMessage(0)};a=function(){setTimeout(l,0),d()}}else a=function(){setTimeout(l,0)};return o.runAfter=function(e){u.push(e),i||(i=!0,a())},o}(),s=Function.call;function u(e){return function(){return s.apply(e,arguments)}}var l,c=u(Array.prototype.slice),p=u(Array.prototype.reduce||function(e,t){var n=0,r=this.length;if(1===arguments.length)for(;;){if(n in this){t=this[n++];break}if(++n>=r)throw new TypeError}for(;n<r;n++)n in this&&(t=e(t,this[n],n));return t}),d=u(Array.prototype.indexOf||function(e){for(var t=0;t<this.length;t++)if(this[t]===e)return t;return-1}),f=u(Array.prototype.map||function(e,t){var n=this,r=[];return p(n,(function(i,a,o){r.push(e.call(t,a,o,n))}),void 0),r}),h=Object.create||function(e){function t(){}return t.prototype=e,new t},m=Object.defineProperty||function(e,t,n){return e[t]=n.value,e},v=u(Object.prototype.hasOwnProperty),g=Object.keys||function(e){var t=[];for(var n in e)v(e,n)&&t.push(n);return t},x=u(Object.prototype.toString);function b(e){return\"[object StopIteration]\"===x(e)||e instanceof l}l=\"undefined\"!=typeof ReturnValue?ReturnValue:function(e){this.value=e};function y(t,n){if(e&&n.stack&&\"object\"==typeof t&&null!==t&&t.stack){for(var r=[],i=n;i;i=i.source)i.stack&&(!t.__minimumStackCounter__||t.__minimumStackCounter__>i.stackCounter)&&(m(t,\"__minimumStackCounter__\",{value:i.stackCounter,configurable:!0}),r.unshift(i.stack));r.unshift(t.stack);var a=function(e){for(var t=e.split(\"\\n\"),n=[],r=0;r<t.length;++r){var i=t[r];!k(i)&&(-1===(a=i).indexOf(\"(module.js:\")&&-1===a.indexOf(\"(node.js:\"))&&i&&n.push(i)}var a;return n.join(\"\\n\")}(r.join(\"\\nFrom previous event:\\n\"));m(t,\"stack\",{value:a,configurable:!0})}}function T(e){var t=/at .+ \\((.+):(\\d+):(?:\\d+)\\)$/.exec(e);if(t)return[t[1],Number(t[2])];var n=/at ([^ ]+):(\\d+):(?:\\d+)$/.exec(e);if(n)return[n[1],Number(n[2])];var r=/.*@(.+):(\\d+)$/.exec(e);return r?[r[1],Number(r[2])]:void 0}function k(e){var t=T(e);if(!t)return!1;var n=t[0],a=t[1];return n===r&&a>=i&&a<=Q}function E(){if(e)try{throw new Error}catch(e){var t=e.stack.split(\"\\n\"),n=T(t[0].indexOf(\"@\")>0?t[1]:t[2]);if(!n)return;return r=n[0],n[1]}}function w(e){return e instanceof O?e:R(e)?function(e){var t=I();return w.nextTick((function(){try{e.then(t.resolve,t.reject,t.notify)}catch(e){t.reject(e)}})),t.promise}(e):H(e)}w.resolve=w,w.nextTick=o,w.longStackSupport=!1;var A=1;function I(){var t,n=[],r=[],i=h(I.prototype),a=h(O.prototype);if(a.promiseDispatch=function(e,i,a){var o=c(arguments);n?(n.push(o),\"when\"===i&&a[1]&&r.push(a[1])):w.nextTick((function(){t.promiseDispatch.apply(t,o)}))},a.valueOf=function(){if(n)return a;var e=N(t);return B(e)&&(t=e),e},a.inspect=function(){return t?t.inspect():{state:\"pending\"}},w.longStackSupport&&e)try{throw new Error}catch(e){a.stack=e.stack.substring(e.stack.indexOf(\"\\n\")+1),a.stackCounter=A++}function o(i){t=i,w.longStackSupport&&e&&(a.source=i),p(n,(function(e,t){w.nextTick((function(){i.promiseDispatch.apply(i,t)}))}),void 0),n=void 0,r=void 0}return i.promise=a,i.resolve=function(e){t||o(w(e))},i.fulfill=function(e){t||o(H(e))},i.reject=function(e){t||o(_(e))},i.notify=function(e){t||p(r,(function(t,n){w.nextTick((function(){n(e)}))}),void 0)},i}function M(e){if(\"function\"!=typeof e)throw new TypeError(\"resolver must be a function.\");var t=I();try{e(t.resolve,t.reject,t.notify)}catch(e){t.reject(e)}return t.promise}function D(e){return M((function(t,n){for(var r=0,i=e.length;r<i;r++)w(e[r]).then(t,n)}))}function O(e,t,n){void 0===t&&(t=function(e){return _(new Error(\"Promise does not support operation: \"+e))}),void 0===n&&(n=function(){return{state:\"unknown\"}});var r=h(O.prototype);if(r.promiseDispatch=function(n,i,a){var o;try{o=e[i]?e[i].apply(r,a):t.call(r,i,a)}catch(e){o=_(e)}n&&n(o)},r.inspect=n,n){var i=n();\"rejected\"===i.state&&(r.exception=i.reason),r.valueOf=function(){var e=n();return\"pending\"===e.state||\"rejected\"===e.state?r:e.value}}return r}function S(e,t,n,r){return w(e).then(t,n,r)}function N(e){if(B(e)){var t=e.inspect();if(\"fulfilled\"===t.state)return t.value}return e}function B(e){return e instanceof O}function R(e){return(t=e)===Object(t)&&\"function\"==typeof e.then;var t}\"object\"==typeof t&&t&&t.env&&t.env.Q_DEBUG&&(w.longStackSupport=!0),w.defer=I,I.prototype.makeNodeResolver=function(){var e=this;return function(t,n){t?e.reject(t):arguments.length>2?e.resolve(c(arguments,1)):e.resolve(n)}},w.Promise=M,w.promise=M,M.race=D,M.all=z,M.reject=_,M.resolve=w,w.passByCopy=function(e){return e},O.prototype.passByCopy=function(){return this},w.join=function(e,t){return w(e).join(t)},O.prototype.join=function(e){return w([this,e]).spread((function(e,t){if(e===t)return e;throw new Error(\"Q can't join: not the same: \"+e+\" \"+t)}))},w.race=D,O.prototype.race=function(){return this.then(w.race)},w.makePromise=O,O.prototype.toString=function(){return\"[object Promise]\"},O.prototype.then=function(e,t,n){var r=this,i=I(),a=!1;return w.nextTick((function(){r.promiseDispatch((function(t){a||(a=!0,i.resolve(function(t){try{return\"function\"==typeof e?e(t):t}catch(e){return _(e)}}(t)))}),\"when\",[function(e){a||(a=!0,i.resolve(function(e){if(\"function\"==typeof t){y(e,r);try{return t(e)}catch(e){return _(e)}}return _(e)}(e)))}])})),r.promiseDispatch(void 0,\"when\",[void 0,function(e){var t,r=!1;try{t=function(e){return\"function\"==typeof n?n(e):e}(e)}catch(e){if(r=!0,!w.onerror)throw e;w.onerror(e)}r||i.notify(t)}]),i.promise},w.tap=function(e,t){return w(e).tap(t)},O.prototype.tap=function(e){return e=w(e),this.then((function(t){return e.fcall(t).thenResolve(t)}))},w.when=S,O.prototype.thenResolve=function(e){return this.then((function(){return e}))},w.thenResolve=function(e,t){return w(e).thenResolve(t)},O.prototype.thenReject=function(e){return this.then((function(){throw e}))},w.thenReject=function(e,t){return w(e).thenReject(t)},w.nearer=N,w.isPromise=B,w.isPromiseAlike=R,w.isPending=function(e){return B(e)&&\"pending\"===e.inspect().state},O.prototype.isPending=function(){return\"pending\"===this.inspect().state},w.isFulfilled=function(e){return!B(e)||\"fulfilled\"===e.inspect().state},O.prototype.isFulfilled=function(){return\"fulfilled\"===this.inspect().state},w.isRejected=function(e){return B(e)&&\"rejected\"===e.inspect().state},O.prototype.isRejected=function(){return\"rejected\"===this.inspect().state};var j,C,U,V=[],Y=[],F=[],$=!0;function P(){V.length=0,Y.length=0,$||($=!0)}function _(e){var n=O({when:function(n){return n&&function(e){if($){var n=d(Y,e);-1!==n&&(\"object\"==typeof t&&\"function\"==typeof t.emit&&w.nextTick.runAfter((function(){var r=d(F,e);-1!==r&&(t.emit(\"rejectionHandled\",V[n],e),F.splice(r,1))})),Y.splice(n,1),V.splice(n,1))}}(this),n?n(e):this}},(function(){return this}),(function(){return{state:\"rejected\",reason:e}}));return function(e,n){$&&(\"object\"==typeof t&&\"function\"==typeof t.emit&&w.nextTick.runAfter((function(){-1!==d(Y,e)&&(t.emit(\"unhandledRejection\",n,e),F.push(e))})),Y.push(e),n&&void 0!==n.stack?V.push(n.stack):V.push(\"(no stack) \"+n))}(n,e),n}function H(e){return O({when:function(){return e},get:function(t){return e[t]},set:function(t,n){e[t]=n},delete:function(t){delete e[t]},post:function(t,n){return null==t?e.apply(void 0,n):e[t].apply(e,n)},apply:function(t,n){return e.apply(t,n)},keys:function(){return g(e)}},void 0,(function(){return{state:\"fulfilled\",value:e}}))}function X(e,t,n){return w(e).spread(t,n)}function L(e,t,n){return w(e).dispatch(t,n)}function z(e){return S(e,(function(e){var t=0,n=I();return p(e,(function(r,i,a){var o;B(i)&&\"fulfilled\"===(o=i.inspect()).state?e[a]=o.value:(++t,S(i,(function(r){e[a]=r,0==--t&&n.resolve(e)}),n.reject,(function(e){n.notify({index:a,value:e})})))}),void 0),0===t&&n.resolve(e),n.promise}))}function W(e){if(0===e.length)return w.resolve();var t=w.defer(),n=0;return p(e,(function(r,i,a){var o=e[a];n++,S(o,(function(e){t.resolve(e)}),(function(e){if(0===--n){var r=e||new Error(\"\"+e);r.message=\"Q can't get fulfillment value from any promise, all promises were rejected. Last error message: \"+r.message,t.reject(r)}}),(function(e){t.notify({index:a,value:e})}))}),void 0),t.promise}function K(e){return S(e,(function(e){return e=f(e,w),S(z(f(e,(function(e){return S(e,a,a)}))),(function(){return e}))}))}w.resetUnhandledRejections=P,w.getUnhandledReasons=function(){return V.slice()},w.stopUnhandledRejectionTracking=function(){P(),$=!1},P(),w.reject=_,w.fulfill=H,w.master=function(e){return O({isDef:function(){}},(function(t,n){return L(e,t,n)}),(function(){return w(e).inspect()}))},w.spread=X,O.prototype.spread=function(e,t){return this.all().then((function(t){return e.apply(void 0,t)}),t)},w.async=function(e){return function(){function t(e,t){var a;if(\"undefined\"==typeof StopIteration){try{a=n[e](t)}catch(e){return _(e)}return a.done?w(a.value):S(a.value,r,i)}try{a=n[e](t)}catch(e){return b(e)?w(e.value):_(e)}return S(a,r,i)}var n=e.apply(this,arguments),r=t.bind(t,\"next\"),i=t.bind(t,\"throw\");return r()}},w.spawn=function(e){w.done(w.async(e)())},w.return=function(e){throw new l(e)},w.promised=function(e){return function(){return X([this,z(arguments)],(function(t,n){return e.apply(t,n)}))}},w.dispatch=L,O.prototype.dispatch=function(e,t){var n=this,r=I();return w.nextTick((function(){n.promiseDispatch(r.resolve,e,t)})),r.promise},w.get=function(e,t){return w(e).dispatch(\"get\",[t])},O.prototype.get=function(e){return this.dispatch(\"get\",[e])},w.set=function(e,t,n){return w(e).dispatch(\"set\",[t,n])},O.prototype.set=function(e,t){return this.dispatch(\"set\",[e,t])},w.del=w.delete=function(e,t){return w(e).dispatch(\"delete\",[t])},O.prototype.del=O.prototype.delete=function(e){return this.dispatch(\"delete\",[e])},w.mapply=w.post=function(e,t,n){return w(e).dispatch(\"post\",[t,n])},O.prototype.mapply=O.prototype.post=function(e,t){return this.dispatch(\"post\",[e,t])},w.send=w.mcall=w.invoke=function(e,t){return w(e).dispatch(\"post\",[t,c(arguments,2)])},O.prototype.send=O.prototype.mcall=O.prototype.invoke=function(e){return this.dispatch(\"post\",[e,c(arguments,1)])},w.fapply=function(e,t){return w(e).dispatch(\"apply\",[void 0,t])},O.prototype.fapply=function(e){return this.dispatch(\"apply\",[void 0,e])},w.try=w.fcall=function(e){return w(e).dispatch(\"apply\",[void 0,c(arguments,1)])},O.prototype.fcall=function(){return this.dispatch(\"apply\",[void 0,c(arguments)])},w.fbind=function(e){var t=w(e),n=c(arguments,1);return function(){return t.dispatch(\"apply\",[this,n.concat(c(arguments))])}},O.prototype.fbind=function(){var e=this,t=c(arguments);return function(){return e.dispatch(\"apply\",[this,t.concat(c(arguments))])}},w.keys=function(e){return w(e).dispatch(\"keys\",[])},O.prototype.keys=function(){return this.dispatch(\"keys\",[])},w.all=z,O.prototype.all=function(){return z(this)},w.any=W,O.prototype.any=function(){return W(this)},w.allResolved=(j=K,C=\"allResolved\",U=\"allSettled\",function(){return\"undefined\"!=typeof console&&\"function\"==typeof console.warn&&console.warn(C+\" is deprecated, use \"+U+\" instead.\",new Error(\"\").stack),j.apply(j,arguments)}),O.prototype.allResolved=function(){return K(this)},w.allSettled=function(e){return w(e).allSettled()},O.prototype.allSettled=function(){return this.then((function(e){return z(f(e,(function(e){function t(){return e.inspect()}return(e=w(e)).then(t,t)})))}))},w.fail=w.catch=function(e,t){return w(e).then(void 0,t)},O.prototype.fail=O.prototype.catch=function(e){return this.then(void 0,e)},w.progress=function(e,t){return w(e).then(void 0,void 0,t)},O.prototype.progress=function(e){return this.then(void 0,void 0,e)},w.fin=w.finally=function(e,t){return w(e).finally(t)},O.prototype.fin=O.prototype.finally=function(e){if(!e||\"function\"!=typeof e.apply)throw new Error(\"Q can't apply finally callback\");return e=w(e),this.then((function(t){return e.fcall().then((function(){return t}))}),(function(t){return e.fcall().then((function(){throw t}))}))},w.done=function(e,t,n,r){return w(e).done(t,n,r)},O.prototype.done=function(e,n,r){var i=function(e){w.nextTick((function(){if(y(e,a),!w.onerror)throw e;w.onerror(e)}))},a=e||n||r?this.then(e,n,r):this;\"object\"==typeof t&&t&&t.domain&&(i=t.domain.bind(i)),a.then(void 0,i)},w.timeout=function(e,t,n){return w(e).timeout(t,n)},O.prototype.timeout=function(e,t){var n=I(),r=setTimeout((function(){t&&\"string\"!=typeof t||((t=new Error(t||\"Timed out after \"+e+\" ms\")).code=\"ETIMEDOUT\"),n.reject(t)}),e);return this.then((function(e){clearTimeout(r),n.resolve(e)}),(function(e){clearTimeout(r),n.reject(e)}),n.notify),n.promise},w.delay=function(e,t){return void 0===t&&(t=e,e=void 0),w(e).delay(t)},O.prototype.delay=function(e){return this.then((function(t){var n=I();return setTimeout((function(){n.resolve(t)}),e),n.promise}))},w.nfapply=function(e,t){return w(e).nfapply(t)},O.prototype.nfapply=function(e){var t=I(),n=c(e);return n.push(t.makeNodeResolver()),this.fapply(n).fail(t.reject),t.promise},w.nfcall=function(e){var t=c(arguments,1);return w(e).nfapply(t)},O.prototype.nfcall=function(){var e=c(arguments),t=I();return e.push(t.makeNodeResolver()),this.fapply(e).fail(t.reject),t.promise},w.nfbind=w.denodeify=function(e){if(void 0===e)throw new Error(\"Q can't wrap an undefined function\");var t=c(arguments,1);return function(){var n=t.concat(c(arguments)),r=I();return n.push(r.makeNodeResolver()),w(e).fapply(n).fail(r.reject),r.promise}},O.prototype.nfbind=O.prototype.denodeify=function(){var e=c(arguments);return e.unshift(this),w.denodeify.apply(void 0,e)},w.nbind=function(e,t){var n=c(arguments,2);return function(){var r=n.concat(c(arguments)),i=I();function a(){return e.apply(t,arguments)}return r.push(i.makeNodeResolver()),w(a).fapply(r).fail(i.reject),i.promise}},O.prototype.nbind=function(){var e=c(arguments,0);return e.unshift(this),w.nbind.apply(void 0,e)},w.nmapply=w.npost=function(e,t,n){return w(e).npost(t,n)},O.prototype.nmapply=O.prototype.npost=function(e,t){var n=c(t||[]),r=I();return n.push(r.makeNodeResolver()),this.dispatch(\"post\",[e,n]).fail(r.reject),r.promise},w.nsend=w.nmcall=w.ninvoke=function(e,t){var n=c(arguments,2),r=I();return n.push(r.makeNodeResolver()),w(e).dispatch(\"post\",[t,n]).fail(r.reject),r.promise},O.prototype.nsend=O.prototype.nmcall=O.prototype.ninvoke=function(e){var t=c(arguments,1),n=I();return t.push(n.makeNodeResolver()),this.dispatch(\"post\",[e,t]).fail(n.reject),n.promise},w.nodeify=function(e,t){return w(e).nodeify(t)},O.prototype.nodeify=function(e){if(!e)return this;this.then((function(t){w.nextTick((function(){e(null,t)}))}),(function(t){w.nextTick((function(){e(t)}))}))},w.noConflict=function(){throw new Error(\"Q.noConflict only works when Q is used as a global\")};var Q=E();return w}))}).call(this,n(25),n(63).setImmediate)},function(e,t){var n,r,i=e.exports={};function a(){throw new Error(\"setTimeout has not been defined\")}function o(){throw new Error(\"clearTimeout has not been defined\")}function s(e){if(n===setTimeout)return setTimeout(e,0);if((n===a||!n)&&setTimeout)return n=setTimeout,setTimeout(e,0);try{return n(e,0)}catch(t){try{return n.call(null,e,0)}catch(t){return n.call(this,e,0)}}}!function(){try{n=\"function\"==typeof setTimeout?setTimeout:a}catch(e){n=a}try{r=\"function\"==typeof clearTimeout?clearTimeout:o}catch(e){r=o}}();var u,l=[],c=!1,p=-1;function d(){c&&u&&(c=!1,u.length?l=u.concat(l):p=-1,l.length&&f())}function f(){if(!c){var e=s(d);c=!0;for(var t=l.length;t;){for(u=l,l=[];++p<t;)u&&u[p].run();p=-1,t=l.length}u=null,c=!1,function(e){if(r===clearTimeout)return clearTimeout(e);if((r===o||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(e);try{r(e)}catch(t){try{return r.call(null,e)}catch(t){return r.call(this,e)}}}(e)}}function h(e,t){this.fun=e,this.array=t}function m(){}i.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];l.push(new h(e,t)),1!==l.length||c||s(f)},h.prototype.run=function(){this.fun.apply(null,this.array)},i.title=\"browser\",i.browser=!0,i.env={},i.argv=[],i.version=\"\",i.versions={},i.on=m,i.addListener=m,i.once=m,i.off=m,i.removeListener=m,i.removeAllListeners=m,i.emit=m,i.prependListener=m,i.prependOnceListener=m,i.listeners=function(e){return[]},i.binding=function(e){throw new Error(\"process.binding is not supported\")},i.cwd=function(){return\"/\"},i.chdir=function(e){throw new Error(\"process.chdir is not supported\")},i.umask=function(){return 0}},function(e,t){var n;n=function(){return this}();try{n=n||new Function(\"return this\")()}catch(e){\"object\"==typeof window&&(n=window)}e.exports=n},function(e,t,n){var r=n(7);e.exports=function(e,t){var n=Number(t);return r(e,36e5*n)}},function(e,t,n){var r=n(3),i=n(29);e.exports=function(e,t){var n=Number(t);return i(e,r(e)+n)}},function(e,t,n){var r=n(0),i=n(8),a=n(11);e.exports=function(e,t){var n=r(e),o=Number(t),s=a(n,i(n)),u=new Date(0);return u.setFullYear(o,0,4),u.setHours(0,0,0,0),(n=i(u)).setDate(n.getDate()+s),n}},function(e,t,n){var r=n(7);e.exports=function(e,t){var n=Number(t);return r(e,6e4*n)}},function(e,t,n){var r=n(12);e.exports=function(e,t){var n=Number(t);return r(e,3*n)}},function(e,t,n){var r=n(7);e.exports=function(e,t){var n=Number(t);return r(e,1e3*n)}},function(e,t,n){var r=n(12);e.exports=function(e,t){var n=Number(t);return r(e,12*n)}},function(e,t,n){var r=n(3);e.exports=function(e,t){return r(e)-r(t)}},function(e,t,n){var r=n(0);e.exports=function(e,t){var n=r(e),i=r(t);return 12*(n.getFullYear()-i.getFullYear())+(n.getMonth()-i.getMonth())}},function(e,t,n){var r=n(0);e.exports=function(e){var t=r(e);return Math.floor(t.getMonth()/3)+1}},function(e,t,n){var r=n(0);e.exports=function(e,t){var n=r(e),i=r(t);return n.getFullYear()-i.getFullYear()}},function(e,t,n){var r=n(0),i=n(11),a=n(9);e.exports=function(e,t){var n=r(e),o=r(t),s=a(n,o),u=Math.abs(i(n,o));return n.setDate(n.getDate()-s*u),s*(u-(a(n,o)===-s))}},function(e,t,n){var r=n(28);e.exports=function(e,t){var n=Number(t);return r(e,-n)}},function(e,t,n){var r=n(17),i=n(0),a=n(19),o=n(18),s=n(20);e.exports=function(e,t,n){var u=n||{},l=r(e,t),c=u.locale,p=s.distanceInWords.localize;c&&c.distanceInWords&&c.distanceInWords.localize&&(p=c.distanceInWords.localize);var d,f,h={addSuffix:Boolean(u.addSuffix),comparison:l};l>0?(d=i(e),f=i(t)):(d=i(t),f=i(e));var m,v=a(f,d),g=f.getTimezoneOffset()-d.getTimezoneOffset(),x=Math.round(v/60)-g;if(x<2)return u.includeSeconds?v<5?p(\"lessThanXSeconds\",5,h):v<10?p(\"lessThanXSeconds\",10,h):v<20?p(\"lessThanXSeconds\",20,h):v<40?p(\"halfAMinute\",null,h):p(v<60?\"lessThanXMinutes\":\"xMinutes\",1,h):0===x?p(\"lessThanXMinutes\",1,h):p(\"xMinutes\",x,h);if(x<45)return p(\"xMinutes\",x,h);if(x<90)return p(\"aboutXHours\",1,h);if(x<1440)return p(\"aboutXHours\",Math.round(x/60),h);if(x<2520)return p(\"xDays\",1,h);if(x<43200)return p(\"xDays\",Math.round(x/1440),h);if(x<86400)return p(\"aboutXMonths\",m=Math.round(x/43200),h);if((m=o(f,d))<12)return p(\"xMonths\",Math.round(x/43200),h);var b=m%12,y=Math.floor(m/12);return b<3?p(\"aboutXYears\",y,h):b<9?p(\"overXYears\",y,h):p(\"almostXYears\",y+1,h)}},function(e,t,n){var r=n(0);e.exports=function(e,t){var n=t&&Number(t.weekStartsOn)||0,i=r(e),a=i.getDay(),o=6+(a<n?-7:0)-(a-n);return i.setDate(i.getDate()+o),i.setHours(23,59,59,999),i}},function(e,t,n){var r=n(0);e.exports=function(e){var t=r(e),n=t.getMonth();return t.setFullYear(t.getFullYear(),n+1,0),t.setHours(23,59,59,999),t}},function(e,t,n){var r=n(0),i=n(44),a=n(11);e.exports=function(e){var t=r(e);return a(t,i(t))+1}},function(e,t,n){var r=n(0);e.exports=function(e){var t=r(e),n=new Date(0);return n.setFullYear(t.getFullYear(),0,1),n.setHours(0,0,0,0),n}},function(e,t,n){var r=n(14);e.exports=function(e){if(r(e))return!isNaN(e);throw new TypeError(toString.call(e)+\" is not an instance of Date\")}},function(e,t,n){var r=n(0);e.exports=function(e){var t=r(e).getFullYear();return t%400==0||t%4==0&&t%100!=0}},function(e,t,n){var r=n(0);e.exports=function(e){var t=r(e).getDay();return 0===t&&(t=7),t}},function(e,t,n){var r=n(49);e.exports=function(e,t){var n=r(e),i=r(t);return n.getTime()===i.getTime()}},function(e,t,n){var r=n(0);e.exports=function(e){var t=r(e);return t.setMinutes(0,0,0),t}},function(e,t,n){var r=n(23);e.exports=function(e,t){return r(e,t,{weekStartsOn:1})}},function(e,t,n){var r=n(8);e.exports=function(e,t){var n=r(e),i=r(t);return n.getTime()===i.getTime()}},function(e,t,n){var r=n(53);e.exports=function(e,t){var n=r(e),i=r(t);return n.getTime()===i.getTime()}},function(e,t,n){var r=n(0);e.exports=function(e){var t=r(e);return t.setSeconds(0,0),t}},function(e,t,n){var r=n(0);e.exports=function(e,t){var n=r(e),i=r(t);return n.getFullYear()===i.getFullYear()&&n.getMonth()===i.getMonth()}},function(e,t,n){var r=n(56);e.exports=function(e,t){var n=r(e),i=r(t);return n.getTime()===i.getTime()}},function(e,t,n){var r=n(0);e.exports=function(e){var t=r(e),n=t.getMonth(),i=n-n%3;return t.setMonth(i,1),t.setHours(0,0,0,0),t}},function(e,t,n){var r=n(58);e.exports=function(e,t){var n=r(e),i=r(t);return n.getTime()===i.getTime()}},function(e,t,n){var r=n(0);e.exports=function(e){var t=r(e);return t.setMilliseconds(0),t}},function(e,t,n){var r=n(0);e.exports=function(e,t){var n=r(e),i=r(t);return n.getFullYear()===i.getFullYear()}},function(e,t,n){var r=n(0);e.exports=function(e,t){var n=t&&Number(t.weekStartsOn)||0,i=r(e),a=i.getDay(),o=6+(a<n?-7:0)-(a-n);return i.setHours(0,0,0,0),i.setDate(i.getDate()+o),i}},function(e,t,n){var r=n(0),i=n(15);e.exports=function(e,t){var n=r(e),a=Number(t),o=n.getFullYear(),s=n.getDate(),u=new Date(0);u.setFullYear(o,a,15),u.setHours(0,0,0,0);var l=i(u);return n.setMonth(a,Math.min(s,l)),n}},function(e,t,n){!function(t,n){const r=Object.defineProperties,i=Object.entries,a=(e,t)=>(n,r)=>(e.has(n)?e.get(n).add(r):e.set(n,(new Set).add(r)),t),o=(e,t)=>(n,r)=>{if(\"*\"!==n||r)if(r){const t=e.get(n);t&&(t.delete(r),0===t.size&&e.delete(n))}else e.delete(n);else e.clear();return t},s=(e,t)=>(e,n)=>t.on(e,(function r(...i){t.off(e,r),n.apply(t,i)})),u=(e,t)=>(n,...r)=>{const i=e.get(n);return i&&i.forEach(e=>e.apply(t,r)),e.get(\"*\")&&\"*\"!==n&&t.trigger(\"*\",n,...r),t};e.exports=function(e){const t=new Map;return r(e=e||{},i({on:a,off:o,one:s,trigger:u}).reduce((n,[r,i])=>(n[r]={value:i(t,e),enumerable:!1,writable:!1,configurable:!1},n),{})),e}}(\"undefined\"!=typeof window&&window)},function(e,t,n){(function(e){var r=void 0!==e&&e||\"undefined\"!=typeof self&&self||window,i=Function.prototype.apply;function a(e,t){this._id=e,this._clearFn=t}t.setTimeout=function(){return new a(i.call(setTimeout,r,arguments),clearTimeout)},t.setInterval=function(){return new a(i.call(setInterval,r,arguments),clearInterval)},t.clearTimeout=t.clearInterval=function(e){e&&e.close()},a.prototype.unref=a.prototype.ref=function(){},a.prototype.close=function(){this._clearFn.call(r,this._id)},t.enroll=function(e,t){clearTimeout(e._idleTimeoutId),e._idleTimeout=t},t.unenroll=function(e){clearTimeout(e._idleTimeoutId),e._idleTimeout=-1},t._unrefActive=t.active=function(e){clearTimeout(e._idleTimeoutId);var t=e._idleTimeout;t>=0&&(e._idleTimeoutId=setTimeout((function(){e._onTimeout&&e._onTimeout()}),t))},n(64),t.setImmediate=\"undefined\"!=typeof self&&self.setImmediate||void 0!==e&&e.setImmediate||this&&this.setImmediate,t.clearImmediate=\"undefined\"!=typeof self&&self.clearImmediate||void 0!==e&&e.clearImmediate||this&&this.clearImmediate}).call(this,n(26))},function(e,t,n){(function(e,t){!function(e,n){\"use strict\";if(!e.setImmediate){var r,i,a,o,s,u=1,l={},c=!1,p=e.document,d=Object.getPrototypeOf&&Object.getPrototypeOf(e);d=d&&d.setTimeout?d:e,\"[object process]\"==={}.toString.call(e.process)?r=function(e){t.nextTick((function(){h(e)}))}:!function(){if(e.postMessage&&!e.importScripts){var t=!0,n=e.onmessage;return e.onmessage=function(){t=!1},e.postMessage(\"\",\"*\"),e.onmessage=n,t}}()?e.MessageChannel?((a=new MessageChannel).port1.onmessage=function(e){h(e.data)},r=function(e){a.port2.postMessage(e)}):p&&\"onreadystatechange\"in p.createElement(\"script\")?(i=p.documentElement,r=function(e){var t=p.createElement(\"script\");t.onreadystatechange=function(){h(e),t.onreadystatechange=null,i.removeChild(t),t=null},i.appendChild(t)}):r=function(e){setTimeout(h,0,e)}:(o=\"setImmediate$\"+Math.random()+\"$\",s=function(t){t.source===e&&\"string\"==typeof t.data&&0===t.data.indexOf(o)&&h(+t.data.slice(o.length))},e.addEventListener?e.addEventListener(\"message\",s,!1):e.attachEvent(\"onmessage\",s),r=function(t){e.postMessage(o+t,\"*\")}),d.setImmediate=function(e){\"function\"!=typeof e&&(e=new Function(\"\"+e));for(var t=new Array(arguments.length-1),n=0;n<t.length;n++)t[n]=arguments[n+1];var i={callback:e,args:t};return l[u]=i,r(u),u++},d.clearImmediate=f}function f(e){delete l[e]}function h(e){if(c)setTimeout(h,0,e);else{var t=l[e];if(t){c=!0;try{!function(e){var t=e.callback,n=e.args;switch(n.length){case 0:t();break;case 1:t(n[0]);break;case 2:t(n[0],n[1]);break;case 3:t(n[0],n[1],n[2]);break;default:t.apply(void 0,n)}}(t)}finally{f(e),c=!1}}}}}(\"undefined\"==typeof self?void 0===e?this:e:self)}).call(this,n(26),n(25))},function(e,t){e.exports=function(e){var t=new Date(e.getTime()),n=t.getTimezoneOffset();return t.setSeconds(0,0),6e4*n+t.getTime()%6e4}},function(e,t,n){var r=n(0);e.exports=function(e,t,n,i){var a=r(e).getTime(),o=r(t).getTime(),s=r(n).getTime(),u=r(i).getTime();if(a>o||s>u)throw new Error(\"The start of the range cannot be after the end of the range\");return a<u&&s<o}},function(e,t,n){var r=n(0);e.exports=function(e,t){if(!(t instanceof Array))throw new TypeError(toString.call(t)+\" is not an instance of Array\");var n,i,a=r(e).getTime();return t.forEach((function(e,t){var o=r(e),s=Math.abs(a-o.getTime());(void 0===n||s<i)&&(n=t,i=s)})),n}},function(e,t,n){var r=n(0);e.exports=function(e,t){if(!(t instanceof Array))throw new TypeError(toString.call(t)+\" is not an instance of Array\");var n,i,a=r(e).getTime();return t.forEach((function(e){var t=r(e),o=Math.abs(a-t.getTime());(void 0===n||o<i)&&(n=t,i=o)})),n}},function(e,t,n){var r=n(4);e.exports=function(e,t){var n=r(e),i=r(t),a=n.getTime()-6e4*n.getTimezoneOffset(),o=i.getTime()-6e4*i.getTimezoneOffset();return Math.round((a-o)/6048e5)}},function(e,t,n){var r=n(36),i=n(0);e.exports=function(e,t){var n=i(e),a=i(t);return 4*(n.getFullYear()-a.getFullYear())+(r(n)-r(a))}},function(e,t,n){var r=n(10);e.exports=function(e,t,n){var i=r(e,n),a=r(t,n),o=i.getTime()-6e4*i.getTimezoneOffset(),s=a.getTime()-6e4*a.getTimezoneOffset();return Math.round((o-s)/6048e5)}},function(e,t,n){var r=n(13);e.exports=function(e,t){var n=r(e,t)/36e5;return n>0?Math.floor(n):Math.ceil(n)}},function(e,t,n){var r=n(0),i=n(34),a=n(9),o=n(39);e.exports=function(e,t){var n=r(e),s=r(t),u=a(n,s),l=Math.abs(i(n,s));return n=o(n,u*l),u*(l-(a(n,s)===-u))}},function(e,t,n){var r=n(13);e.exports=function(e,t){var n=r(e,t)/6e4;return n>0?Math.floor(n):Math.ceil(n)}},function(e,t,n){var r=n(18);e.exports=function(e,t){var n=r(e,t)/3;return n>0?Math.floor(n):Math.ceil(n)}},function(e,t,n){var r=n(38);e.exports=function(e,t){var n=r(e,t)/7;return n>0?Math.floor(n):Math.ceil(n)}},function(e,t,n){var r=n(0),i=n(37),a=n(9);e.exports=function(e,t){var n=r(e),o=r(t),s=a(n,o),u=Math.abs(i(n,o));return n.setFullYear(n.getFullYear()-s*u),s*(u-(a(n,o)===-s))}},function(e,t){e.exports=function(){var e={lessThanXSeconds:{one:\"less than a second\",other:\"less than {{count}} seconds\"},xSeconds:{one:\"1 second\",other:\"{{count}} seconds\"},halfAMinute:\"half a minute\",lessThanXMinutes:{one:\"less than a minute\",other:\"less than {{count}} minutes\"},xMinutes:{one:\"1 minute\",other:\"{{count}} minutes\"},aboutXHours:{one:\"about 1 hour\",other:\"about {{count}} hours\"},xHours:{one:\"1 hour\",other:\"{{count}} hours\"},xDays:{one:\"1 day\",other:\"{{count}} days\"},aboutXMonths:{one:\"about 1 month\",other:\"about {{count}} months\"},xMonths:{one:\"1 month\",other:\"{{count}} months\"},aboutXYears:{one:\"about 1 year\",other:\"about {{count}} years\"},xYears:{one:\"1 year\",other:\"{{count}} years\"},overXYears:{one:\"over 1 year\",other:\"over {{count}} years\"},almostXYears:{one:\"almost 1 year\",other:\"almost {{count}} years\"}};return{localize:function(t,n,r){var i;return r=r||{},i=\"string\"==typeof e[t]?e[t]:1===n?e[t].one:e[t].other.replace(\"{{count}}\",n),r.addSuffix?r.comparison>0?\"in \"+i:i+\" ago\":i}}}},function(e,t,n){var r=n(80);e.exports=function(){var e=[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],t=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],n=[\"Su\",\"Mo\",\"Tu\",\"We\",\"Th\",\"Fr\",\"Sa\"],i=[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"],a=[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"],o=[\"AM\",\"PM\"],s=[\"am\",\"pm\"],u=[\"a.m.\",\"p.m.\"],l={MMM:function(t){return e[t.getMonth()]},MMMM:function(e){return t[e.getMonth()]},dd:function(e){return n[e.getDay()]},ddd:function(e){return i[e.getDay()]},dddd:function(e){return a[e.getDay()]},A:function(e){return e.getHours()/12>=1?o[1]:o[0]},a:function(e){return e.getHours()/12>=1?s[1]:s[0]},aa:function(e){return e.getHours()/12>=1?u[1]:u[0]}};return[\"M\",\"D\",\"DDD\",\"d\",\"Q\",\"W\"].forEach((function(e){l[e+\"o\"]=function(t,n){return function(e){var t=e%100;if(t>20||t<10)switch(t%10){case 1:return e+\"st\";case 2:return e+\"nd\";case 3:return e+\"rd\"}return e+\"th\"}(n[e](t))}})),{formatters:l,formattingTokensRegExp:r(l)}}},function(e,t){var n=[\"M\",\"MM\",\"Q\",\"D\",\"DD\",\"DDD\",\"DDDD\",\"d\",\"E\",\"W\",\"WW\",\"YY\",\"YYYY\",\"GG\",\"GGGG\",\"H\",\"HH\",\"h\",\"hh\",\"m\",\"mm\",\"s\",\"ss\",\"S\",\"SS\",\"SSS\",\"Z\",\"ZZ\",\"X\",\"x\"];e.exports=function(e){var t=[];for(var r in e)e.hasOwnProperty(r)&&t.push(r);var i=n.concat(t).sort().reverse();return new RegExp(\"(\\\\[[^\\\\[]*\\\\])|(\\\\\\\\)?(\"+i.join(\"|\")+\"|.)\",\"g\")}},function(e,t,n){var r=n(17),i=n(0),a=n(19),o=n(20);e.exports=function(e,t,n){var s=n||{},u=r(e,t),l=s.locale,c=o.distanceInWords.localize;l&&l.distanceInWords&&l.distanceInWords.localize&&(c=l.distanceInWords.localize);var p,d,f,h={addSuffix:Boolean(s.addSuffix),comparison:u};u>0?(p=i(e),d=i(t)):(p=i(t),d=i(e));var m=Math[s.partialMethod?String(s.partialMethod):\"floor\"],v=a(d,p),g=d.getTimezoneOffset()-p.getTimezoneOffset(),x=m(v/60)-g;if(\"s\"===(f=s.unit?String(s.unit):x<1?\"s\":x<60?\"m\":x<1440?\"h\":x<43200?\"d\":x<525600?\"M\":\"Y\"))return c(\"xSeconds\",v,h);if(\"m\"===f)return c(\"xMinutes\",x,h);if(\"h\"===f)return c(\"xHours\",m(x/60),h);if(\"d\"===f)return c(\"xDays\",m(x/1440),h);if(\"M\"===f)return c(\"xMonths\",m(x/43200),h);if(\"Y\"===f)return c(\"xYears\",m(x/525600),h);throw new Error(\"Unknown unit: \"+f)}},function(e,t,n){var r=n(40);e.exports=function(e,t){return r(Date.now(),e,t)}},function(e,t,n){var r=n(0);e.exports=function(e,t,n){var i=r(e),a=void 0!==n?n:1,o=r(t).getTime();if(i.getTime()>o)throw new Error(\"The first date cannot be after the second date\");var s=[],u=i;for(u.setHours(0,0,0,0);u.getTime()<=o;)s.push(r(u)),u.setDate(u.getDate()+a);return s}},function(e,t,n){var r=n(0);e.exports=function(e){var t=r(e);return t.setMinutes(59,59,999),t}},function(e,t,n){var r=n(41);e.exports=function(e){return r(e,{weekStartsOn:1})}},function(e,t,n){var r=n(3),i=n(4);e.exports=function(e){var t=r(e),n=new Date(0);n.setFullYear(t+1,0,4),n.setHours(0,0,0,0);var a=i(n);return a.setMilliseconds(a.getMilliseconds()-1),a}},function(e,t,n){var r=n(0);e.exports=function(e){var t=r(e);return t.setSeconds(59,999),t}},function(e,t,n){var r=n(0);e.exports=function(e){var t=r(e),n=t.getMonth(),i=n-n%3+3;return t.setMonth(i,0),t.setHours(23,59,59,999),t}},function(e,t,n){var r=n(0);e.exports=function(e){var t=r(e);return t.setMilliseconds(999),t}},function(e,t,n){var r=n(21);e.exports=function(){return r(new Date)}},function(e,t){e.exports=function(){var e=new Date,t=e.getFullYear(),n=e.getMonth(),r=e.getDate(),i=new Date(0);return i.setFullYear(t,n,r+1),i.setHours(23,59,59,999),i}},function(e,t,n){var r=n(0);e.exports=function(e){var t=r(e),n=t.getFullYear();return t.setFullYear(n+1,0,0),t.setHours(23,59,59,999),t}},function(e,t){e.exports=function(){var e=new Date,t=e.getFullYear(),n=e.getMonth(),r=e.getDate(),i=new Date(0);return i.setFullYear(t,n,r-1),i.setHours(23,59,59,999),i}},function(e,t,n){var r=n(43),i=n(22),a=n(3),o=n(0),s=n(45),u=n(20);var l={M:function(e){return e.getMonth()+1},MM:function(e){return d(e.getMonth()+1,2)},Q:function(e){return Math.ceil((e.getMonth()+1)/3)},D:function(e){return e.getDate()},DD:function(e){return d(e.getDate(),2)},DDD:function(e){return r(e)},DDDD:function(e){return d(r(e),3)},d:function(e){return e.getDay()},E:function(e){return e.getDay()||7},W:function(e){return i(e)},WW:function(e){return d(i(e),2)},YY:function(e){return d(e.getFullYear(),4).substr(2)},YYYY:function(e){return d(e.getFullYear(),4)},GG:function(e){return String(a(e)).substr(2)},GGGG:function(e){return a(e)},H:function(e){return e.getHours()},HH:function(e){return d(e.getHours(),2)},h:function(e){var t=e.getHours();return 0===t?12:t>12?t%12:t},hh:function(e){return d(l.h(e),2)},m:function(e){return e.getMinutes()},mm:function(e){return d(e.getMinutes(),2)},s:function(e){return e.getSeconds()},ss:function(e){return d(e.getSeconds(),2)},S:function(e){return Math.floor(e.getMilliseconds()/100)},SS:function(e){return d(Math.floor(e.getMilliseconds()/10),2)},SSS:function(e){return d(e.getMilliseconds(),3)},Z:function(e){return p(e.getTimezoneOffset(),\":\")},ZZ:function(e){return p(e.getTimezoneOffset())},X:function(e){return Math.floor(e.getTime()/1e3)},x:function(e){return e.getTime()}};function c(e){return e.match(/\\[[\\s\\S]/)?e.replace(/^\\[|]$/g,\"\"):e.replace(/\\\\/g,\"\")}function p(e,t){t=t||\"\";var n=e>0?\"-\":\"+\",r=Math.abs(e),i=r%60;return n+d(Math.floor(r/60),2)+t+d(i,2)}function d(e,t){for(var n=Math.abs(e).toString();n.length<t;)n=\"0\"+n;return n}e.exports=function(e,t,n){var r=t?String(t):\"YYYY-MM-DDTHH:mm:ss.SSSZ\",i=(n||{}).locale,a=u.format.formatters,p=u.format.formattingTokensRegExp;i&&i.format&&i.format.formatters&&(a=i.format.formatters,i.format.formattingTokensRegExp&&(p=i.format.formattingTokensRegExp));var d=o(e);return s(d)?function(e,t,n){var r,i,a=e.match(n),o=a.length;for(r=0;r<o;r++)i=t[a[r]]||l[a[r]],a[r]=i||c(a[r]);return function(e){for(var t=\"\",n=0;n<o;n++)a[n]instanceof Function?t+=a[n](e,l):t+=a[n];return t}}(r,a,p)(d):\"Invalid Date\"}},function(e,t,n){var r=n(0);e.exports=function(e){return r(e).getDate()}},function(e,t,n){var r=n(0);e.exports=function(e){return r(e).getDay()}},function(e,t,n){var r=n(46);e.exports=function(e){return r(e)?366:365}},function(e,t,n){var r=n(0);e.exports=function(e){return r(e).getHours()}},function(e,t,n){var r=n(8),i=n(16);e.exports=function(e){var t=r(e),n=r(i(t,60)).valueOf()-t.valueOf();return Math.round(n/6048e5)}},function(e,t,n){var r=n(0);e.exports=function(e){return r(e).getMilliseconds()}},function(e,t,n){var r=n(0);e.exports=function(e){return r(e).getMinutes()}},function(e,t,n){var r=n(0);e.exports=function(e){return r(e).getMonth()}},function(e,t,n){var r=n(0);e.exports=function(e,t,n,i){var a=r(e).getTime(),o=r(t).getTime(),s=r(n).getTime(),u=r(i).getTime();if(a>o||s>u)throw new Error(\"The start of the range cannot be after the end of the range\");if(!(a<u&&s<o))return 0;var l=(u>o?o:u)-(s<a?a:s);return Math.ceil(l/864e5)}},function(e,t,n){var r=n(0);e.exports=function(e){return r(e).getSeconds()}},function(e,t,n){var r=n(0);e.exports=function(e){return r(e).getTime()}},function(e,t,n){var r=n(0);e.exports=function(e){return r(e).getFullYear()}},function(e,t,n){var r=n(0);e.exports=function(e,t){var n=r(e),i=r(t);return n.getTime()>i.getTime()}},function(e,t,n){var r=n(0);e.exports=function(e,t){var n=r(e),i=r(t);return n.getTime()<i.getTime()}},function(e,t,n){var r=n(0);e.exports=function(e,t){var n=r(e),i=r(t);return n.getTime()===i.getTime()}},function(e,t,n){var r=n(0);e.exports=function(e){return 1===r(e).getDate()}},function(e,t,n){var r=n(0);e.exports=function(e){return 5===r(e).getDay()}},function(e,t,n){var r=n(0);e.exports=function(e){return r(e).getTime()>(new Date).getTime()}},function(e,t,n){var r=n(0),i=n(21),a=n(42);e.exports=function(e){var t=r(e);return i(t).getTime()===a(t).getTime()}},function(e,t,n){var r=n(0);e.exports=function(e){return 1===r(e).getDay()}},function(e,t,n){var r=n(0);e.exports=function(e){return r(e).getTime()<(new Date).getTime()}},function(e,t,n){var r=n(5);e.exports=function(e,t){var n=r(e),i=r(t);return n.getTime()===i.getTime()}},function(e,t,n){var r=n(0);e.exports=function(e){return 6===r(e).getDay()}},function(e,t,n){var r=n(0);e.exports=function(e){return 0===r(e).getDay()}},function(e,t,n){var r=n(48);e.exports=function(e){return r(new Date,e)}},function(e,t,n){var r=n(50);e.exports=function(e){return r(new Date,e)}},function(e,t,n){var r=n(51);e.exports=function(e){return r(new Date,e)}},function(e,t,n){var r=n(52);e.exports=function(e){return r(new Date,e)}},function(e,t,n){var r=n(54);e.exports=function(e){return r(new Date,e)}},function(e,t,n){var r=n(55);e.exports=function(e){return r(new Date,e)}},function(e,t,n){var r=n(57);e.exports=function(e){return r(new Date,e)}},function(e,t,n){var r=n(23);e.exports=function(e,t){return r(new Date,e,t)}},function(e,t,n){var r=n(59);e.exports=function(e){return r(new Date,e)}},function(e,t,n){var r=n(0);e.exports=function(e){return 4===r(e).getDay()}},function(e,t,n){var r=n(5);e.exports=function(e){return r(e).getTime()===r(new Date).getTime()}},function(e,t,n){var r=n(5);e.exports=function(e){var t=new Date;return t.setDate(t.getDate()+1),r(e).getTime()===r(t).getTime()}},function(e,t,n){var r=n(0);e.exports=function(e){return 2===r(e).getDay()}},function(e,t,n){var r=n(0);e.exports=function(e){return 3===r(e).getDay()}},function(e,t,n){var r=n(0);e.exports=function(e){var t=r(e).getDay();return 0===t||6===t}},function(e,t,n){var r=n(0);e.exports=function(e,t,n){var i=r(e).getTime(),a=r(t).getTime(),o=r(n).getTime();if(a>o)throw new Error(\"The start of the range cannot be after the end of the range\");return i>=a&&i<=o}},function(e,t,n){var r=n(5);e.exports=function(e){var t=new Date;return t.setDate(t.getDate()-1),r(e).getTime()===r(t).getTime()}},function(e,t,n){var r=n(60);e.exports=function(e){return r(e,{weekStartsOn:1})}},function(e,t,n){var r=n(3),i=n(4);e.exports=function(e){var t=r(e),n=new Date(0);n.setFullYear(t+1,0,4),n.setHours(0,0,0,0);var a=i(n);return a.setDate(a.getDate()-1),a}},function(e,t,n){var r=n(0);e.exports=function(e){var t=r(e),n=t.getMonth();return t.setFullYear(t.getFullYear(),n+1,0),t.setHours(0,0,0,0),t}},function(e,t,n){var r=n(0);e.exports=function(e){var t=r(e),n=t.getMonth(),i=n-n%3+3;return t.setMonth(i,0),t.setHours(0,0,0,0),t}},function(e,t,n){var r=n(0);e.exports=function(e){var t=r(e),n=t.getFullYear();return t.setFullYear(n+1,0,0),t.setHours(0,0,0,0),t}},function(e,t,n){var r=n(0);e.exports=function(){var e=Array.prototype.slice.call(arguments),t=e.map((function(e){return r(e)})),n=Math.max.apply(null,t);return new Date(n)}},function(e,t,n){var r=n(0);e.exports=function(){var e=Array.prototype.slice.call(arguments),t=e.map((function(e){return r(e)})),n=Math.min.apply(null,t);return new Date(n)}},function(e,t,n){var r=n(0);e.exports=function(e,t){var n=r(e),i=Number(t);return n.setDate(i),n}},function(e,t,n){var r=n(0),i=n(6);e.exports=function(e,t,n){var a=n&&Number(n.weekStartsOn)||0,o=r(e),s=Number(t),u=o.getDay();return i(o,((s%7+7)%7<a?7:0)+s-u)}},function(e,t,n){var r=n(0);e.exports=function(e,t){var n=r(e),i=Number(t);return n.setMonth(0),n.setDate(i),n}},function(e,t,n){var r=n(0);e.exports=function(e,t){var n=r(e),i=Number(t);return n.setHours(i),n}},function(e,t,n){var r=n(0),i=n(6),a=n(47);e.exports=function(e,t){var n=r(e),o=Number(t),s=a(n);return i(n,o-s)}},function(e,t,n){var r=n(0),i=n(22);e.exports=function(e,t){var n=r(e),a=Number(t),o=i(n)-a;return n.setDate(n.getDate()-7*o),n}},function(e,t,n){var r=n(0);e.exports=function(e,t){var n=r(e),i=Number(t);return n.setMilliseconds(i),n}},function(e,t,n){var r=n(0);e.exports=function(e,t){var n=r(e),i=Number(t);return n.setMinutes(i),n}},function(e,t,n){var r=n(0),i=n(61);e.exports=function(e,t){var n=r(e),a=Number(t)-(Math.floor(n.getMonth()/3)+1);return i(n,n.getMonth()+3*a)}},function(e,t,n){var r=n(0);e.exports=function(e,t){var n=r(e),i=Number(t);return n.setSeconds(i),n}},function(e,t,n){var r=n(0);e.exports=function(e,t){var n=r(e),i=Number(t);return n.setFullYear(i),n}},function(e,t,n){var r=n(0);e.exports=function(e){var t=r(e);return t.setDate(1),t.setHours(0,0,0,0),t}},function(e,t,n){var r=n(5);e.exports=function(){return r(new Date)}},function(e,t){e.exports=function(){var e=new Date,t=e.getFullYear(),n=e.getMonth(),r=e.getDate(),i=new Date(0);return i.setFullYear(t,n,r+1),i.setHours(0,0,0,0),i}},function(e,t){e.exports=function(){var e=new Date,t=e.getFullYear(),n=e.getMonth(),r=e.getDate(),i=new Date(0);return i.setFullYear(t,n,r-1),i.setHours(0,0,0,0),i}},function(e,t,n){var r=n(6);e.exports=function(e,t){var n=Number(t);return r(e,-n)}},function(e,t,n){var r=n(27);e.exports=function(e,t){var n=Number(t);return r(e,-n)}},function(e,t,n){var r=n(7);e.exports=function(e,t){var n=Number(t);return r(e,-n)}},function(e,t,n){var r=n(30);e.exports=function(e,t){var n=Number(t);return r(e,-n)}},function(e,t,n){var r=n(12);e.exports=function(e,t){var n=Number(t);return r(e,-n)}},function(e,t,n){var r=n(31);e.exports=function(e,t){var n=Number(t);return r(e,-n)}},function(e,t,n){var r=n(32);e.exports=function(e,t){var n=Number(t);return r(e,-n)}},function(e,t,n){var r=n(16);e.exports=function(e,t){var n=Number(t);return r(e,-n)}},function(e,t,n){var r=n(33);e.exports=function(e,t){var n=Number(t);return r(e,-n)}},function(e,t,n){\"use strict\";n.r(t);var r=n(1),i=n(62),a=n.n(i),o=n(24),s=n.n(o);let u=0;var l={css:null,exports:{state:{active:!1},onMounted:function(e,t){this.su_id=`su-accordion-${u++}`,this.update(),this.obs.on(`${this.su_id}-toggle-active`,e=>{this.update({active:e})})},onClick:function(){this.obs.trigger(`${this.su_id}-click`,{id:this.su_id,active:this.state.active,label:this.props.title})}},template:function(e,t,n,r){return e('<div expr0=\"expr0\"><i class=\"dropdown icon\"></i> </div><div expr1=\"expr1\"><slot expr2=\"expr2\"></slot></div>',[{expressions:[{type:t.ATTRIBUTE,name:\"id\",evaluate:function(e){return e.su_id}}]},{redundantAttribute:\"expr0\",selector:\"[expr0]\",expressions:[{type:t.TEXT,childNodeIndex:1,evaluate:function(e){return[e.props.title].join(\"\")}},{type:t.ATTRIBUTE,name:\"class\",evaluate:function(e){return[\"title \",e.state.active?\"active\":\"\"].join(\"\")}},{type:t.EVENT,name:\"onclick\",evaluate:function(e){return e.onClick}}]},{redundantAttribute:\"expr1\",selector:\"[expr1]\",expressions:[{type:t.ATTRIBUTE,name:\"class\",evaluate:function(e){return[\"content active \",e.state.active?\"open\":\"close\"].join(\"\")}}]},{type:n.SLOT,attributes:[],name:\"default\",redundantAttribute:\"expr2\",selector:\"[expr2]\"}])},name:\"su-accordion\"};var c={css:'su-accordionset,[is=\"su-accordionset\"]{ display: block; } su-accordionset.ui.accordion .title~.content:not(.ui).close,[is=\"su-accordionset\"].ui.accordion .title~.content:not(.ui).close{ padding-top: 0; padding-bottom: 0; } su-accordionset .content.close *,[is=\"su-accordionset\"] .content.close *{ line-height: 0 !important; opacity: 0 !important; visibility: hidden !important; padding-top: 0 !important; padding-bottom: 0 !important; margin-top: 0 !important; margin-bottom: 0 !important; min-height: 0 !important; transition: all 300ms 0s linear !important; } su-accordionset .content.close .dropdown.icon,[is=\"su-accordionset\"] .content.close .dropdown.icon{ height: 0 !important; transition: height 300ms 0s linear !important; } su-accordionset .content.open *,[is=\"su-accordionset\"] .content.open *{ line-height: 1.4285; opacity: 1; visibility: visible; transition: all 300ms 0s linear !important; } su-accordionset .content.open .dropdown.icon,[is=\"su-accordionset\"] .content.open .dropdown.icon{ height: 1.4285 !important; transition: height 300ms 0s linear !important; }',exports:{state:{},accordions:[],onBeforeMount:function(){this.accordions=[]},onMounted:function(){this.accordions=this.$$(\":scope > su-accordion, :scope > .item > su-accordion\");let e=!1;this.accordions.forEach(t=>{var n,r;r=t,(n=this).obs.on(`${r.id}-click`,e=>{const t=e.active;n.accordions.forEach(e=>{n.obs.trigger(`${e.id}-toggle-active`,!1)}),n.obs.trigger(`${e.id}-toggle-active`,!t),n.update(),n.dispatch(\"click\",e)}),t.getAttribute(\"active\")&&(e=!0,this.obs.trigger(`${t.id}-toggle-active`,!0))}),!e&&this.accordions.length&&this.obs.trigger(`${this.accordions[0].id}-toggle-active`,!0),this.update()}},template:function(e,t,n,r){return e('<slot expr3=\"expr3\"></slot>',[{expressions:[{type:t.ATTRIBUTE,name:\"class\",evaluate:function(e){return[\"ui accordion \",e.props.class].join(\"\")}}]},{type:n.SLOT,attributes:[],name:\"default\",redundantAttribute:\"expr3\",selector:\"[expr3]\"}])},name:\"su-accordionset\"};var p={css:'su-alert .ui.dimmer,[is=\"su-alert\"] .ui.dimmer{ z-index: 1020; } su-alert .ui.modal,[is=\"su-alert\"] .ui.modal{ z-index: 1021; } su-alert .ui.message,[is=\"su-alert\"] .ui.message{ background: none; box-shadow: none; } su-alert .ui.message .header+p,[is=\"su-alert\"] .ui.message .header+p{ margin-top: 1em; }',exports:{state:{},modal:{closable:!1,buttons:[]},show:!1,button:{},onMounted:function(e,t){let n={};this.suDefaultOptions&&this.suDefaultOptions.alert&&this.suDefaultOptions.alert.button&&(n=this.suDefaultOptions.alert.button),n.default&&(this.button.default=!0),this.button.text=n.text||\"Close\",this.button.type=n.type||\"\",this.button.icon=n.icon||\"\",this.obs&&this.obs.on(\"su-alert-show\",e=>{!function(e,t){const n={title:null,message:null,button:{text:null,default:null,type:null,icon:null}};\"string\"==typeof t?n.message=t:t&&(t.title&&(n.title=t.title),t.message&&(n.message=t.message),t.button&&(n.button=t.button));(function(e,t={}){e.title=t.title,e.messages=Array.isArray(t.message)?t.message:[t.message],function(e,t){const n={text:t.button.text||e.button.text,type:t.button.type||e.button.type,icon:t.button.icon||e.button.icon,action:\"close\",closable:!1};t.button.default?n.default=!0:null===t.button.default&&(n.default=e.button.default);e.modal.buttons.length=0,e.modal.buttons.push(n)}(e,t),e.show=!0,e.update()})(e,n),e.obs.on(\"callbackConfirm\",()=>{e.obs.trigger(\"su-alert-close\")})}(this,e)})},onClose:function(){this.show=!1,this.update(),this.obs.trigger(\"callbackConfirm\")}},template:function(e,t,n,r){return e('<su-modal expr4=\"expr4\" class=\"tiny\"></su-modal>',[{type:n.TAG,getComponent:r,evaluate:function(e){return\"su-modal\"},slots:[{id:\"default\",html:'<div class=\"ui icon message\"><i class=\"info circle icon\"></i><div class=\"scrolling content\"><div expr5=\"expr5\" class=\"header\"></div><p expr6=\"expr6\"></p></div></div>',bindings:[{type:n.IF,evaluate:function(e){return e.title},redundantAttribute:\"expr5\",selector:\"[expr5]\",template:e(\" \",[{expressions:[{type:t.TEXT,childNodeIndex:0,evaluate:function(e){return[e.title].join(\"\")}}]}])},{type:n.EACH,getKey:null,condition:null,template:e(\" \",[{expressions:[{type:t.TEXT,childNodeIndex:0,evaluate:function(e){return e.message}}]}]),redundantAttribute:\"expr6\",selector:\"[expr6]\",itemName:\"message\",indexName:null,evaluate:function(e){return e.messages}}]}],attributes:[{type:t.ATTRIBUTE,name:\"show\",evaluate:function(e){return e.show}},{type:t.ATTRIBUTE,name:\"modal\",evaluate:function(e){return e.modal}},{type:t.EVENT,name:\"onclose\",evaluate:function(e){return e.onClose}}],redundantAttribute:\"expr4\",selector:\"[expr4]\"}])},name:\"su-alert\"};let d=0;function f(e){return!0===e||\"checked\"===e||\"true\"===e}var h={css:'su-checkbox.ui.checkbox label,[is=\"su-checkbox\"].ui.checkbox label{ cursor: pointer; } su-checkbox.ui.read-only input[type=\"checkbox\"],[is=\"su-checkbox\"].ui.read-only input[type=\"checkbox\"],su-checkbox.ui.disabled input[type=\"checkbox\"],[is=\"su-checkbox\"].ui.disabled input[type=\"checkbox\"]{ cursor: default !important; }',exports:{state:{checked:!1,defaultChecked:!1,observable:null,lastChecked:!1,lastOptsChecked:!1},changed:!1,onBeforeUpdate:function(e,t){this.readOnly=this.root.classList.contains(\"read-only\"),this.disabled=this.root.classList.contains(\"disabled\"),this.changed=t.checked!==t.defaultChecked,t.lastOptsChecked!=f(e.checked)&&(t.checked=f(e.checked),t.lastOptsChecked=t.checked)},onMounted:function(e,t){this.su_id=`su-checkbox-${d++}`,this.obs.on(`${this.su_id}-reset`,()=>{var e;(e=this).update({checked:e.state.defaultChecked})}),t.checked=f(e.checked),t.lastChecked=t.checked,t.lastOptsChecked=t.checked,t.defaultChecked=t.checked,this.update()},onUpdated:function(e,t){t.lastChecked!=t.checked&&(t.lastChecked=t.checked,t.lastOptsChecked=f(e.checked))},onClick:function(){this.readOnly||this.disabled?event.preventDefault():(this.update({checked:!this.state.checked}),this.dispatch(\"click\",this.checked),this.obs.trigger(`${this.props.suParentId}-update`),this.obs&&this.root.getAttribute(\"name\")&&this.obs.trigger(`${this.root.getAttribute(\"name\")}-click`,this.props.value))}},template:function(e,t,n,r){return e('<input expr7=\"expr7\" type=\"checkbox\"/><label expr8=\"expr8\"></label><label expr10=\"expr10\"></label>',[{expressions:[{type:t.ATTRIBUTE,name:\"class\",evaluate:function(e){return[\"ui checkbox \",e.props.class].join(\"\")}},{type:t.ATTRIBUTE,name:\"checked\",evaluate:function(e){return e.state.checked}},{type:t.ATTRIBUTE,name:\"changed\",evaluate:function(e){return e.changed}},{type:t.ATTRIBUTE,name:\"id\",evaluate:function(e){return e.su_id}}]},{redundantAttribute:\"expr7\",selector:\"[expr7]\",expressions:[{type:t.ATTRIBUTE,name:\"checked\",evaluate:function(e){return e.state.checked}},{type:t.EVENT,name:\"onclick\",evaluate:function(e){return e.onClick}},{type:t.ATTRIBUTE,name:\"disabled\",evaluate:function(e){return e.disabled}},{type:t.ATTRIBUTE,name:\"id\",evaluate:function(e){return[e.su_id,\"-input\"].join(\"\")}}]},{type:n.IF,evaluate:function(e){return!e.props.label},redundantAttribute:\"expr8\",selector:\"[expr8]\",template:e('<slot expr9=\"expr9\"></slot>',[{expressions:[{type:t.ATTRIBUTE,name:\"for\",evaluate:function(e){return[e.su_id,\"-input\"].join(\"\")}}]},{type:n.SLOT,attributes:[],name:\"default\",redundantAttribute:\"expr9\",selector:\"[expr9]\"}])},{type:n.IF,evaluate:function(e){return e.props.label},redundantAttribute:\"expr10\",selector:\"[expr10]\",template:e(\" \",[{expressions:[{type:t.TEXT,childNodeIndex:0,evaluate:function(e){return e.props.label}},{type:t.ATTRIBUTE,name:\"for\",evaluate:function(e){return[e.su_id,\"-input\"].join(\"\")}}]}])}])},name:\"su-checkbox\"};let m=0;function v(e,t){if(void 0===e.getAttribute(\"value\")||void 0===t)return;e[Object.getOwnPropertySymbols(e).find(e=>\"Symbol(riot-component)\"===e.toString())].state.checked=t.some(t=>t==e.getAttribute(\"value\"))}function g(e,t){e.setAttribute(\"name\",`${t}-checkbox`)}function x(e){return void 0===e?e:Array.isArray(e)?e.toString():[e].toString()}var b={css:null,exports:{state:{value:\"\",lastValue:\"\",lastOptsValue:\"\"},changed:!1,defaultValue:\"\",onMounted:function(e,t){this.su_id=`su-checkbox-group-${m++}`,this.obs.on(`${this.su_id}-reset`,()=>{var e;(e=this).update({value:e.defaultValue})}),t.value||(t.value=e.value),void 0===t.value||Array.isArray(t.value)||(t.value=t.value.toString().split(/\\s+/).join(\"\").split(\",\")),t.lastValue=t.value,t.lastOptsValue=t.value;let n=this.$$(\"su-checkbox\");n.forEach(e=>{g(e,this.su_id),v(e)}),this.obs.on(`${this.su_id}-checkbox-click`,()=>{n=this.$$(\"su-checkbox\"),this.update({value:n.filter(e=>e.getAttribute(\"checked\")).map(e=>e.getAttribute(\"value\"))}),this.update()}),this.defaultValue=t.value,this.update()},onBeforeUpdate:function(e,t){this.changed=t.value!==this.defaultValue,x(t.lastOptsValue)!=x(e.value)&&(t.value=e.value,t.lastOptsValue=e.value);let n=!1;x(t.lastValue)!=x(t.value)&&(t.lastValue=t.value,n=!0),void 0===t.value||Array.isArray(t.value)||(t.value=t.value.toString().split(/\\s+/).join(\"\").split(\",\"));let r=this.$$(\"su-checkbox\");r.forEach(e=>{g(e,this.su_id)}),n&&(r.forEach(e=>{v(e,t.value)}),this.viewValue=Array.isArray(t.value)?t.value.join(\",\"):t.value,this.dispatch(\"change\",t.value),this.obs.trigger(`${e.suParentId}-update`))}},template:function(e,t,n,r){return e('<slot expr11=\"expr11\"></slot>',[{expressions:[{type:t.ATTRIBUTE,name:\"value\",evaluate:function(e){return e.viewValue}},{type:t.ATTRIBUTE,name:\"changed\",evaluate:function(e){return e.changed}},{type:t.ATTRIBUTE,name:\"id\",evaluate:function(e){return e.su_id}}]},{type:n.SLOT,attributes:[],name:\"default\",redundantAttribute:\"expr11\",selector:\"[expr11]\"}])},name:\"su-checkbox-group\"};var y={css:'su-confirm .ui.dimmer,[is=\"su-confirm\"] .ui.dimmer{ z-index: 1010; } su-confirm .ui.modal,[is=\"su-confirm\"] .ui.modal{ z-index: 1011; } su-confirm .ui.message,[is=\"su-confirm\"] .ui.message{ background: none; box-shadow: none; }',exports:{state:{},modal:{closable:!1,buttons:[]},show:!1,reverse:!1,cancelButton:{action:\"negativeAction\"},okButton:{action:\"positiveAction\"},onMounted:function(e,t){let n={},r={};this.reverse=!1,this.suDefaultOptions&&this.suDefaultOptions.confirm&&(this.suDefaultOptions.confirm.reverse&&(this.reverse=this.suDefaultOptions.confirm.reverse),this.suDefaultOptions.confirm.buttons&&(this.suDefaultOptions.confirm.buttons.ok&&(n=this.suDefaultOptions.confirm.buttons.ok),this.suDefaultOptions.confirm.buttons.cancel&&(r=this.suDefaultOptions.confirm.buttons.cancel))),this.okButton.text=n.text||\"OK\",this.okButton.type=void 0!==n.type?n.type:\"primary\",this.okButton.icon=void 0!==n.icon?n.icon:\"check\",this.cancelButton.text=r.text||\"Cancel\",this.cancelButton.type=r.type||\"\",this.cancelButton.icon=r.icon||\"\",n.default?this.okButton.default=!0:r.default?this.cancelButton.default=!0:void 0===n.default&&void 0===n.default&&(this.okButton.default=!0),this.obs&&this.obs.on(\"su-confirm-show\",e=>{!function(e,t){const n={title:null,message:null,reverse:null,buttons:{ok:{text:null,default:null,type:null,icon:null},cancel:{text:null,default:null,type:null,icon:null}}};\"string\"==typeof t?n.message=t:t&&(t.title&&(n.title=t.title),t.message&&(n.message=t.message),t.reverse&&(n.reverse=t.reverse),t.buttons&&(t.buttons.ok&&(n.buttons.ok=t.buttons.ok),t.buttons.cancel&&(n.buttons.cancel=t.buttons.cancel)));(function(e,t={}){e.title=t.title,e.messages=Array.isArray(t.message)?t.message:[t.message],function(e,t){const n={text:t.buttons.cancel.text||e.cancelButton.text,type:null!==t.buttons.cancel.type?t.buttons.cancel.type:e.cancelButton.type,icon:null!==t.buttons.cancel.icon?t.buttons.cancel.icon:e.cancelButton.icon,action:\"cancel\"},r={text:t.buttons.ok.text||e.okButton.text,type:null!==t.buttons.ok.type?t.buttons.ok.type:e.okButton.type,icon:null!==t.buttons.ok.icon?t.buttons.ok.icon:e.okButton.icon,action:\"ok\"};t.buttons.ok.default?r.default=!0:t.buttons.cancel.default?n.default=!0:null===t.buttons.ok.default&&null===t.buttons.cancel.default&&(r.default=e.okButton.default,n.default=e.cancelButton.default);e.modal.buttons.length=0,e.modal.buttons.push(t.reverse||e.reverse?r:n),e.modal.buttons.push(t.reverse||e.reverse?n:r)}(e,t),e.show=!0,e.update()})(e,n),e.obs.on(\"callbackConfirm\",t=>{e.obs.trigger(\"su-confirm-close\",t)})}(this,e)})},onOk:function(){this.show=!1,this.update(),this.obs.trigger(\"callbackConfirm\",!0)},onCancel:function(){this.show=!1,this.update(),this.obs.trigger(\"callbackConfirm\",!1)}},template:function(e,t,n,r){return e('<su-modal expr12=\"expr12\" class=\"tiny\"></su-modal>',[{type:n.TAG,getComponent:r,evaluate:function(e){return\"su-modal\"},slots:[{id:\"default\",html:'<div class=\"ui icon message\"><i class=\"question circle outline icon\"></i><div class=\"scrolling content\"><div expr13=\"expr13\" class=\"header\"></div><p expr14=\"expr14\"></p></div></div>',bindings:[{type:n.IF,evaluate:function(e){return e.title},redundantAttribute:\"expr13\",selector:\"[expr13]\",template:e(\" \",[{expressions:[{type:t.TEXT,childNodeIndex:0,evaluate:function(e){return[e.title].join(\"\")}}]}])},{type:n.EACH,getKey:null,condition:null,template:e(\" \",[{expressions:[{type:t.TEXT,childNodeIndex:0,evaluate:function(e){return e.messsage}}]}]),redundantAttribute:\"expr14\",selector:\"[expr14]\",itemName:\"messsage\",indexName:null,evaluate:function(e){return e.messages}}]}],attributes:[{type:t.ATTRIBUTE,name:\"show\",evaluate:function(e){return e.show}},{type:t.ATTRIBUTE,name:\"modal\",evaluate:function(e){return e.modal}},{type:t.EVENT,name:\"onok\",evaluate:function(e){return e.onOk}},{type:t.EVENT,name:\"oncancel\",evaluate:function(e){return e.onCancel}}],redundantAttribute:\"expr12\",selector:\"[expr12]\"}])},name:\"su-confirm\"},T=n(2);let k=0;function E(e,t){return e.map(e=>e=e.map(e=>e+parseInt(t)))}function w(e){e.state.transitionStatus=\"hidden\",e.visibleFlg=!1,e.dispatch(\"close\",e.state.value)}function A(e,t){e.state.value=t?Object(T.format)(t,\"YYYY-MM-DD\"):null,e.props.popup&&(e.$(\"input\").value=e.state.value,w(e)),e.dispatch(\"change\",e.state.value)}function I(e,t){return e==t||void 0!==e&&void 0!==t&&null!==e&&null!==t&&Object(T.isSameDay)(e,t)}function M(e){return e?Object(T.parse)(e):e}function D(e,t=0){return Array.from(Array(e).keys()).map(e=>e+t)}function O(e,t){const n=M(t);return n?Object(T.format)(n,e.pattern,{locale:e.locale}):null}function S(e){e.obs.trigger(`${e.props.suParentId}-update`)}var N={css:'su-datepicker .ui.segment,[is=\"su-datepicker\"] .ui.segment{ padding-top: 0.5rem; padding-bottom: 0.5rem; } su-datepicker .ui.dropdown .menu,[is=\"su-datepicker\"] .ui.dropdown .menu{ display: block; } su-datepicker .ui.buttons.dp-navigation,[is=\"su-datepicker\"] .ui.buttons.dp-navigation{ margin-bottom: 0.4rem; } su-datepicker .ui.dropdown,[is=\"su-datepicker\"] .ui.dropdown{ display: block; } su-datepicker .dp-wrapper,[is=\"su-datepicker\"] .dp-wrapper{ display: flex; } su-datepicker .dp-day,[is=\"su-datepicker\"] .dp-day,su-datepicker .dp-month,[is=\"su-datepicker\"] .dp-month{ cursor: pointer; } su-datepicker .dp-weekday,[is=\"su-datepicker\"] .dp-weekday,su-datepicker .dp-day,[is=\"su-datepicker\"] .dp-day,su-datepicker .dp-day .ui.button,[is=\"su-datepicker\"] .dp-day .ui.button{ width: 2.5rem; } su-datepicker .dp-month,[is=\"su-datepicker\"] .dp-month,su-datepicker .dp-month .ui.button,[is=\"su-datepicker\"] .dp-month .ui.button{ width: 4.375rem; } su-datepicker .dp-day .ui.button,[is=\"su-datepicker\"] .dp-day .ui.button,su-datepicker .dp-month .ui.button,[is=\"su-datepicker\"] .dp-month .ui.button{ padding: 0; height: 2.5rem; font-weight: normal } su-datepicker .dp-day .ui.button.today,[is=\"su-datepicker\"] .dp-day .ui.button.today{ font-weight: 700; } su-datepicker .dp-today .ui.button,[is=\"su-datepicker\"] .dp-today .ui.button,su-datepicker .dp-clear .ui.button,[is=\"su-datepicker\"] .dp-clear .ui.button,su-datepicker .dp-navigation .ui.button,[is=\"su-datepicker\"] .dp-navigation .ui.button,su-datepicker .dp-month .ui.button,[is=\"su-datepicker\"] .dp-month .ui.button,su-datepicker .dp-day .ui.button.non-active,[is=\"su-datepicker\"] .dp-day .ui.button.non-active{ background-color: transparent; } su-datepicker .dp-today .ui.button:hover,[is=\"su-datepicker\"] .dp-today .ui.button:hover,su-datepicker .dp-clear .ui.button:hover,[is=\"su-datepicker\"] .dp-clear .ui.button:hover,su-datepicker .dp-navigation .ui.button:hover,[is=\"su-datepicker\"] .dp-navigation .ui.button:hover,su-datepicker .dp-month .ui.button:hover,[is=\"su-datepicker\"] .dp-month .ui.button:hover,su-datepicker .dp-day .ui.button.non-active:hover,[is=\"su-datepicker\"] .dp-day .ui.button.non-active:hover{ background-color: #e0e1e2; } su-datepicker .dp-day .ui.button.disabled,[is=\"su-datepicker\"] .dp-day .ui.button.disabled{ pointer-events: all !important; } su-datepicker .dp-navigation,[is=\"su-datepicker\"] .dp-navigation{ width: 100%; } su-datepicker .dp-navigation .ui.button,[is=\"su-datepicker\"] .dp-navigation .ui.button{ width: 20%; } su-datepicker .dp-navigation .ui.button.year,[is=\"su-datepicker\"] .dp-navigation .ui.button.year,su-datepicker .dp-navigation .ui.button.month,[is=\"su-datepicker\"] .dp-navigation .ui.button.month{ width: 30%; }',exports:{state:{currentDate:null,defaultValue:null,value:null,weeks:[]},visibleFlg:!1,itemActivated:!1,lastValue:null,lastPropsValue:null,lastCurrentDate:null,lastPropsCurrentDate:null,yearRange:20,onBeforeMount:function(e,t){var n;this.state.transitionStatus=e.popup?\"hidden\":\"visible\",this.weeks=[],this.pattern=function(e){if(e.props.pattern)return e.props.pattern;if(e.defaultOptions&&e.defaultOptions.pattern)return e.defaultOptions.pattern;return\"YYYY-MM-DD\"}(this),this.locale=function(e){if(e.props.locale)return e.props.locale;if(e.defaultOptions&&e.defaultOptions.locale)return e.defaultOptions.locale}(this),this.tabIndex=function(e){if(!e.props.popup)return!1;if(e.props.tabindex)return e.props.tabindex;return 0}(this),this.weekNames=(n=this,D(7,1).map(e=>Object(T.format)(new Date(2018,6,e),\"dd\",{locale:n.locale}))),this.su_id=`su-datepicker-${k++}`,this.obs.on(`${this.su_id}-reset`,()=>{!function(e){e.state.value=e.state.defaultValue,e.update(),S(e)}(this)})},onMounted:function(e,t){t.value||(t.value=M(e.value)),t.value&&(t.value=Object(T.format)(M(t.value),\"YYYY-MM-DD\")),t.formatedValue=O(this,t.value),e.popup&&(this.$(\"input\").value=t.formatedValue),this.lastValue=M(t.value),this.lastPropsValue=M(e.value),t.currentDate=M(e.currentDate),t.value&&(t.currentDate=M(t.value)),t.currentDate||(t.currentDate=new Date),t.months=function(e){const t=[[],[],[]];return D(12).map(t=>Object(T[\"format\"])(new Date(2018,t,1),\"MMM\",{locale:e.locale})).forEach((e,n)=>{t[(n-n%4)/4][n%4]={label:e,value:n}}),t}(this),e.yearRange&&!isNaN(e.yearRange)&&e.yearRange>20&&(this.yearRange=e.yearRange),\"year\"===e.startMode&&this.selectYear(),t.defaultValue=t.value,this.update(),S(this)},onBeforeUpdate:function(e,t){this.readOnly=this.root.classList.contains(\"read-only\")?\"read-only\":\"\",this.disabled=this.root.classList.contains(\"disabled\")?\"disabled\":\"\";let n=!1;I(this.lastValue,t.value)?this.lastPropsValue!==e.value&&(t.value=e.value?Object(T.format)(M(e.value),\"YYYY-MM-DD\"):null,this.lastPropsValue=M(e.value),this.lastValue=M(e.value),n=!0):(this.lastValue=M(t.value),n=!0),n&&(t.formatedValue=O(this,t.value),e.popup&&(this.$(\"input\").value=t.formatedValue),S(this)),n&&t.value&&(t.currentDate=M(t.value)),I(this.lastPropsCurrentDate,e.currentDate)||(t.currentDate=M(e.currentDate),this.lastPropsCurrentDate=M(e.currentDate)),I(this.lastCurrentDate,t.currentDate)||(this.lastCurrentDate=M(t.currentDate),function(e){const t=Object(T.startOfMonth)(e.state.currentDate),n=Object(T.addDays)(t,-t.getDay());let r=0;e.weeks=[];for(let t=0;t<6;t++){const t=[];for(let e=0;e<7;e++)t.push(Object(T.addDays)(n,r++));e.weeks.push({days:t})}}(this)),this.changed=!I(t.value,t.defaultValue)},clickDay:function(e){this.readOnly||this.disabled||(A(this,e),this.update(),S(this),this.dispatch(\"click\",this.state.value))},clickMonth:function(e){this.state.currentDate.setMonth(e.value),this.monthSelecting=!1,this.update()},clickYear:function(e){this.state.currentDate.setYear(e),this.selectMonth(),this.update()},clickPrevious:function(){this.yearSelecting?this.state.years=E(this.state.years,-this.yearRange):(this.monthSelecting=!1,this.state.currentDate=Object(T.addMonths)(this.state.currentDate,-1)),this.update()},clickNext:function(){this.yearSelecting?this.state.years=E(this.state.years,this.yearRange):(this.monthSelecting=!1,this.state.currentDate=Object(T.addMonths)(this.state.currentDate,1)),this.update()},clickClear:function(){A(this,null),this.update(),S(this),this.dispatch(\"clear\",this.state.value)},clickToday:function(){A(this,new Date),this.update(),S(this),this.dispatch(\"today\",this.state.value)},selectMonth:function(){this.yearSelecting=!1,this.monthSelecting=!this.monthSelecting,this.update()},selectYear:function(){this.state.years=function(e){const t=(e.yearRange-e.yearRange%4)/4+(e.yearRange%4!=0?1:0),n=new Array;for(let e=0;e<t;e++)n.push([]);for(let t=0;t<e.yearRange;t++)n[(t-t%4)/4][t%4]=e.state.currentDate.getFullYear()+t-((e.yearRange-e.yearRange%2)/2-1);return n}(this),this.monthSelecting=!1,this.yearSelecting=!this.yearSelecting,this.update()},toggle:function(){this.readOnly||this.disabled||(this.visibleFlg?w(this):(\"year\"===this.props.startMode&&(this.selectYear(),this.yearSelecting=!0),function(e){e.upward=function(e){if(\"upward\"==e.props.direction)return!0;if(\"downward\"==e.props.direction)return!1;const t=e.root.getBoundingClientRect(),n=document.documentElement.offsetHeight||document.body.offsetHeight,r=e.root.querySelector(\".menu\").getBoundingClientRect().height,i=r<=t.top,a=n>=t.top+t.height+r;if(a)return!1;if(!a&&!i)return!1;return!0}(e),e.state.transitionStatus=\"visible\",e.visibleFlg=!0,e.state.currentDate=M(e.props.currentDate),e.state.value&&(e.state.currentDate=M(e.state.value));e.state.currentDate||(e.state.currentDate=new Date);e.dispatch(\"open\",e.state.value)}(this)),this.update())},onMouseDown:function(){this.itemActivated=!0,this.update()},onMouseUp:function(){this.itemActivated=!1,this.update()},onBlur:function(){this.props.popup&&!this.itemActivated&&(w(this),this.update())},onChangeInput:function(){const e=this.$(\"input\").value?Object(T.parse)(this.$(\"input\").value.replace(/\\//g,\"-\")):\"\";\"Invalid Date\"!=e?A(this,e):this.$(\"input\").value=this.state.value,this.update()},getCurrentYear:function(){if(this.state.currentDate)return this.state.currentDate.getFullYear()},getCurrentMonthView:function(){if(this.state.currentDate)return Object(T.format)(this.state.currentDate,\"MMM\",{locale:this.locale})},getCurrentMonth:function(){return this.state.currentDate.getMonth()},isActive:function(e){return I(this.state.value,e)},isToday:T.isToday},template:function(e,t,n,r){return e('<div expr78=\"expr78\"><div expr79=\"expr79\"></div><div expr82=\"expr82\"><div class=\"ui compact segments\"><div class=\"ui center aligned secondary segment\"><div class=\"ui buttons dp-navigation\"><button expr83=\"expr83\" type=\"button\"><i class=\"chevron left icon\"></i></button><button expr84=\"expr84\" type=\"button\"> </button><button expr85=\"expr85\" type=\"button\"> </button><button expr86=\"expr86\" type=\"button\"><i class=\"chevron right icon\"></i></button></div><div class=\"dp-wrapper\"><div expr87=\"expr87\" class=\"dp-weekday\"></div></div></div><div expr88=\"expr88\" class=\"ui center aligned segment\"></div><div expr92=\"expr92\" class=\"ui center aligned segment\"></div><div expr95=\"expr95\" class=\"ui center aligned segment\"></div><div expr99=\"expr99\" class=\"ui center aligned segment\"></div></div></div></div>',[{expressions:[{type:t.ATTRIBUTE,name:\"value\",evaluate:function(e){return e.state.value}},{type:t.ATTRIBUTE,name:\"formated-value\",evaluate:function(e){return e.state.formatedValue}},{type:t.ATTRIBUTE,name:\"changed\",evaluate:function(e){return e.changed}},{type:t.ATTRIBUTE,name:\"id\",evaluate:function(e){return e.su_id}}]},{redundantAttribute:\"expr78\",selector:\"[expr78]\",expressions:[{type:t.ATTRIBUTE,name:\"class\",evaluate:function(e){return[\"ui \",e.props.popup?\"dropdown\":\"\",\" \",e.upward?\"upward\":\"\"].join(\"\")}}]},{type:n.IF,evaluate:function(e){return e.props.popup},redundantAttribute:\"expr79\",selector:\"[expr79]\",template:e('<input expr80=\"expr80\" type=\"text\"/><button expr81=\"expr81\" type=\"button\"><i class=\"calendar icon\"></i></button>',[{expressions:[{type:t.ATTRIBUTE,name:\"class\",evaluate:function(e){return[\"ui action input \",e.disabled].join(\"\")}}]},{redundantAttribute:\"expr80\",selector:\"[expr80]\",expressions:[{type:t.ATTRIBUTE,name:\"placeholder\",evaluate:function(e){return e.props.placeholder}},{type:t.EVENT,name:\"onchange\",evaluate:function(e){return e.onChangeInput}},{type:t.ATTRIBUTE,name:\"tabindex\",evaluate:function(e){return e.tabIndex}},{type:t.ATTRIBUTE,name:\"readonly\",evaluate:function(e){return e.readOnly}}]},{redundantAttribute:\"expr81\",selector:\"[expr81]\",expressions:[{type:t.ATTRIBUTE,name:\"class\",evaluate:function(e){return[\"ui icon button \",e.disabled].join(\"\")}},{type:t.EVENT,name:\"onclick\",evaluate:function(e){return e.toggle}},{type:t.EVENT,name:\"onblur\",evaluate:function(e){return e.onBlur}}]}])},{redundantAttribute:\"expr82\",selector:\"[expr82]\",expressions:[{type:t.ATTRIBUTE,name:\"class\",evaluate:function(e){return[\"menu transition \",e.state.transitionStatus].join(\"\")}},{type:t.EVENT,name:\"onmousedown\",evaluate:function(e){return e.onMouseDown}},{type:t.EVENT,name:\"onmouseup\",evaluate:function(e){return e.onMouseUp}},{type:t.EVENT,name:\"onblur\",evaluate:function(e){return e.onBlur}},{type:t.ATTRIBUTE,name:\"tabindex\",evaluate:function(e){return e.tabIndex}}]},{redundantAttribute:\"expr83\",selector:\"[expr83]\",expressions:[{type:t.ATTRIBUTE,name:\"class\",evaluate:function(e){return[\"icon tiny ui button \",e.disabled,\" prev\"].join(\"\")}},{type:t.EVENT,name:\"onclick\",evaluate:function(e){return e.clickPrevious}}]},{redundantAttribute:\"expr84\",selector:\"[expr84]\",expressions:[{type:t.TEXT,childNodeIndex:0,evaluate:function(e){return e.getCurrentMonthView()}},{type:t.ATTRIBUTE,name:\"class\",evaluate:function(e){return[\"ui button \",e.disabled,\" month\"].join(\"\")}},{type:t.EVENT,name:\"onclick\",evaluate:function(e){return e.selectMonth}}]},{redundantAttribute:\"expr85\",selector:\"[expr85]\",expressions:[{type:t.TEXT,childNodeIndex:0,evaluate:function(e){return e.getCurrentYear()}},{type:t.ATTRIBUTE,name:\"class\",evaluate:function(e){return[\"ui button \",e.disabled,\" year\"].join(\"\")}},{type:t.EVENT,name:\"onclick\",evaluate:function(e){return e.selectYear}}]},{redundantAttribute:\"expr86\",selector:\"[expr86]\",expressions:[{type:t.ATTRIBUTE,name:\"class\",evaluate:function(e){return[\"icon tiny ui button \",e.disabled,\" next\"].join(\"\")}},{type:t.EVENT,name:\"onclick\",evaluate:function(e){return e.clickNext}}]},{type:n.EACH,getKey:null,condition:null,template:e(\" \",[{expressions:[{type:t.TEXT,childNodeIndex:0,evaluate:function(e){return e.week}}]}]),redundantAttribute:\"expr87\",selector:\"[expr87]\",itemName:\"week\",indexName:null,evaluate:function(e){return e.weekNames}},{type:n.IF,evaluate:function(e){return!e.yearSelecting&&!e.monthSelecting},redundantAttribute:\"expr88\",selector:\"[expr88]\",template:e('<div expr89=\"expr89\" class=\"dp-wrapper\"></div>',[{type:n.EACH,getKey:null,condition:null,template:e('<div expr90=\"expr90\" class=\"dp-day\"></div>',[{type:n.EACH,getKey:null,condition:null,template:e('<button expr91=\"expr91\" type=\"button\"> </button>',[{redundantAttribute:\"expr91\",selector:\"[expr91]\",expressions:[{type:t.TEXT,childNodeIndex:0,evaluate:function(e){return e.day.getDate()}},{type:t.ATTRIBUTE,name:\"class\",evaluate:function(e){return[\"ui button \",e.isToday(e.day)?\"today\":\"\",\" \",e.isActive(e.day)?\"primary\":\"non-active\",\" \",e.day.getMonth()!=e.getCurrentMonth()||e.disabled?\"disabled\":\"\"].join(\"\")}},{type:t.EVENT,name:\"onclick\",evaluate:function(e){return()=>e.clickDay(e.day)}}]}]),redundantAttribute:\"expr90\",selector:\"[expr90]\",itemName:\"day\",indexName:null,evaluate:function(e){return e.week.days}}]),redundantAttribute:\"expr89\",selector:\"[expr89]\",itemName:\"week\",indexName:null,evaluate:function(e){return e.weeks}}])},{type:n.IF,evaluate:function(e){return!e.yearSelecting&&!e.monthSelecting},redundantAttribute:\"expr92\",selector:\"[expr92]\",template:e('<div class=\"ui two column grid\"><div class=\"column dp-clear\"><button expr93=\"expr93\" type=\"button\"><i class=\"times icon\"></i></button></div><div class=\"column dp-today\"><button expr94=\"expr94\" type=\"button\"><i class=\"calendar check icon\"></i></button></div></div>',[{redundantAttribute:\"expr93\",selector:\"[expr93]\",expressions:[{type:t.ATTRIBUTE,name:\"class\",evaluate:function(e){return[\"ui icon fluid button \",e.disabled].join(\"\")}},{type:t.EVENT,name:\"onclick\",evaluate:function(e){return e.clickClear}}]},{redundantAttribute:\"expr94\",selector:\"[expr94]\",expressions:[{type:t.ATTRIBUTE,name:\"class\",evaluate:function(e){return[\"ui icon fluid button \",e.disabled].join(\"\")}},{type:t.EVENT,name:\"onclick\",evaluate:function(e){return e.clickToday}}]}])},{type:n.IF,evaluate:function(e){return e.monthSelecting},redundantAttribute:\"expr95\",selector:\"[expr95]\",template:e('<div expr96=\"expr96\" class=\"dp-wrapper\"></div>',[{type:n.EACH,getKey:null,condition:null,template:e('<div expr97=\"expr97\" class=\"dp-month\"></div>',[{type:n.EACH,getKey:null,condition:null,template:e('<button expr98=\"expr98\" type=\"button\"> </button>',[{redundantAttribute:\"expr98\",selector:\"[expr98]\",expressions:[{type:t.TEXT,childNodeIndex:0,evaluate:function(e){return e.month.label}},{type:t.ATTRIBUTE,name:\"class\",evaluate:function(e){return[\"ui button \",e.disabled].join(\"\")}},{type:t.EVENT,name:\"onclick\",evaluate:function(e){return()=>e.clickMonth(e.month)}}]}]),redundantAttribute:\"expr97\",selector:\"[expr97]\",itemName:\"month\",indexName:null,evaluate:function(e){return e.element}}]),redundantAttribute:\"expr96\",selector:\"[expr96]\",itemName:\"element\",indexName:null,evaluate:function(e){return e.state.months}}])},{type:n.IF,evaluate:function(e){return e.yearSelecting},redundantAttribute:\"expr99\",selector:\"[expr99]\",template:e('<div expr100=\"expr100\" class=\"dp-wrapper\"></div>',[{type:n.EACH,getKey:null,condition:null,template:e('<div expr101=\"expr101\" class=\"dp-month\"></div>',[{type:n.EACH,getKey:null,condition:null,template:e('<button expr102=\"expr102\" type=\"button\"> </button>',[{redundantAttribute:\"expr102\",selector:\"[expr102]\",expressions:[{type:t.TEXT,childNodeIndex:0,evaluate:function(e){return e.year}},{type:t.ATTRIBUTE,name:\"class\",evaluate:function(e){return[\"ui button \",e.disabled].join(\"\")}},{type:t.EVENT,name:\"onclick\",evaluate:function(e){return()=>e.clickYear(e.year)}}]}]),redundantAttribute:\"expr101\",selector:\"[expr101]\",itemName:\"year\",indexName:null,evaluate:function(e){return e.element}}]),redundantAttribute:\"expr100\",selector:\"[expr100]\",itemName:\"element\",indexName:null,evaluate:function(e){return e.state.years}}])}])},name:\"su-datepicker\"};let B=0;const R=13,j=27,C=38,U=40,V=[\"ui\",\"selection\",\"dropdown\",\"search\",\"multiple\",\"active\",\"visible\",\"upward\"];function Y(e){e.openning||e.closing||e.visibleFlg||e.readonly||e.disabled||(e.openning=!0,_(e,\"\"),e.upward=function(e){if(\"upward\"==e.props.direction)return!0;if(\"downward\"==e.props.direction)return!1;const t=e.root.getBoundingClientRect(),n=document.documentElement.offsetHeight||document.body.offsetHeight,r=e.root.querySelector(\".menu\").getBoundingClientRect().height,i=r<=t.top,a=n>=t.top+t.height+r;if(a)return!1;if(!a&&!i)return!1;return!0}(e),e.state.transitionStatus=`visible animating in slide ${e.upward?\"up\":\"down\"}`,e.props.items.forEach(e=>e.active=!1),setTimeout(()=>{e.openning=!1,e.visibleFlg=!0,e.state.transitionStatus=\"visible\",e.update()},300),e.props.search&&e.$(\".search\").focus(),e.update(),H(e),e.dispatch(\"open\"))}function F(e){!e.closing&&e.visibleFlg&&(e.closing=!0,e.state.transitionStatus=`visible animating out slide ${e.upward?\"up\":\"down\"}`,setTimeout(()=>{e.closing=!1,e.visibleFlg=!1,e.state.transitionStatus=\"hidden\",e.update()},300),e.props.search&&(e.$(\".search\").blur(),e.filtered&&e.filteredItems.length>0?$(e,e.filteredItems[0]):(e.$(\".search\").value=\"\",e.filtered=!1)),e.update(),e.dispatch(\"close\"))}function $(e,t,n){e.state.value!=t.value||e.state.label!=t.label||e.state.defaultFlg!=t.default?(e.state.value=t.value,e.state.label=t.label,e.state.defaultFlg=t.default,e.props.search&&(e.$(\".search\").value=\"\",e.filtered=!1),n||(e.update(),X(e),e.dispatch(\"select\",t),e.dispatch(\"change\",t))):n||e.dispatch(\"select\",t)}function P(e,t){JSON.stringify(e.state.value)!=JSON.stringify(e.props.items.filter(e=>e.selected).map(e=>e.value))||e.state.selectedFlg!=e.props.items.some(e=>e.selected)?(e.state.value=e.props.items.filter(e=>e.selected).map(e=>e.value),e.state.selectedFlg=e.props.items.some(e=>e.selected),t||(e.update(),X(e),e.dispatch(\"select\",e.props.items.filter(e=>e.selected)),e.dispatch(\"change\",e.props.items.filter(e=>e.selected)))):t||e.dispatch(\"select\",e.props.items.filter(e=>e.selected))}function _(e,t){e.props.items.forEach(e=>{e.searched=e.label&&e.label.toLowerCase().indexOf(t)>=0}),e.filteredItems=e.props.items.filter(e=>e.searched),e.update(),e.dispatch(\"search\")}function H(e){const t=e.root.querySelector(\".menu\"),n=e.root.querySelector(\".item.hover\");if(t&&n){const e=t.scrollTop,r=n.offsetTop,i=parseInt(document.defaultView.getComputedStyle(n,null).height.replace(\"px\",\"\")),a=e+parseInt(document.defaultView.getComputedStyle(t,null).height.replace(\"px\",\"\"))<r+i;(r<e||a)&&(t.scrollTop=r)}}function X(e){e.obs.trigger(`${e.props.suParentId}-update`)}function L(e){return e.searched&&!e.header&&!e.divider}var z={css:'su-dropdown.ui.dropdown .menu>.item.default,[is=\"su-dropdown\"].ui.dropdown .menu>.item.default{ color: rgba(0, 0, 0, 0.4) } su-dropdown.ui.dropdown .menu>.item.hover,[is=\"su-dropdown\"].ui.dropdown .menu>.item.hover{ background: rgba(0, 0, 0, .05); color: rgba(0, 0, 0, .95); } su-dropdown.ui.dropdown .menu,[is=\"su-dropdown\"].ui.dropdown .menu{ display: block; }',exports:{state:{defaultValue:\"\",filtered:!1,label:\"\",selectedFlg:!1,transitionStatus:\"hidden\",value:\"\",classes:\"\"},lastPropValue:\"\",changed:!1,visibleFlg:!1,onBeforeMount:function(e,t){this.su_id=`su-dropdown-${B++}`,e.items&&e.items.length>0&&(t.label=e.items[0].label,t.value=e.items[0].value,t.defaultFlg=e.items[0].default)},onMounted:function(e,t){void 0!==e.value&&(t.value=e.value,this.lastPropValue=e.value),e.multiple&&(e.items.forEach(e=>e.selected=!1),e.items.filter(e=>t.value&&t.value.indexOf(e.value)>=0).forEach(e=>e.selected=!0),t.value=this.props.items.filter(e=>e.selected).map(e=>e.value),this.state.selectedFlg=this.props.items.some(e=>e.selected)),t.defaultValue=t.value,this.update()},onBeforeUpdate:function(e,t){var n,r,i;if(this.lastPropValue!==e.value&&(t.value=e.value,this.lastPropValue=e.value),t.classes=function(e){const t=e.props.class?e.props.class.split(\" \").filter(e=>!V.includes(e)):[];e.props.search&&t.push(\"search\");e.props.multiple&&t.push(\"multiple\");(function(e){if(e.closing)return!1;return e.openning||e.visibleFlg})(e)&&t.push(\"active visible\");e.upward&&t.push(\"upward\");return t.join(\" \")}(this),n=e.items,r=this.value,i=this.filtered,n.forEach(e=>{const t=[];L(e)&&t.push(\"item\"),e.header&&!i&&t.push(\"header\"),e.divider&&!i&&t.push(\"divider\"),e.default&&t.push(\"default\"),e.active&&t.push(\"hover\"),e.value==r&&t.push(\"active selected\"),e.disabled&&t.push(\"disabled\"),e.classes=t.join(\" \")}),this.readonly=this.root.classList.contains(\"read-only\"),this.disabled=this.root.classList.contains(\"disabled\"),this.tabindex=e.tabindex||\"0\",e.multiple)e.items.forEach(e=>e.selected=!1),e.items.filter(e=>t.value&&t.value.indexOf(e.value)>=0).forEach(e=>e.selected=!0),P(this,!0),this.viewValue=t.value.join(\",\");else if(e.items){const n=e.items.filter(e=>e.value==t.value);if(n&&n.length>0){const e=n[0];t.label!==e.label&&$(this,e,!0)}else e.items&&e.items.length>0&&(t.value!==e.items[0].value&&(t.value=e.items[0].value,t.defaultFlg=e.items[0].default),t.label!=e.items[0].label&&(t.label=e.items[0].label))}if(e.multiple){const e=t.value?t.value:[],n=t.defaultValue?t.defaultValue:[];this.changed=e.toString()!==n.toString()}else this.changed=t.value!==t.defaultValue},onBlur:function(){this.itemActivated||F(this)},onFocus:function(){Y(this)},onInput:function(e){const t=e.target.value.toLowerCase();this.filtered=t.length>0,_(this,t)},onItemClick:function(e,t){if(e.stopPropagation(),this.isItem(t)){if(this.props.multiple)return t.default||(t.selected=!0),void P(this);$(this,t),F(this)}},onKeydown:function(e){const t=e.keyCode;if(t==j&&F(this),t==U&&Y(this),t!=C&&t!=U)return!0;e.preventDefault();const n=this.props.items.filter(e=>!(this.props.search&&!e.searched)&&(!this.props.multiple||!e.default&&!e.selected));if(0==n.length)return!0;if(n.every(e=>!e.active))return n[0].active=!0,this.update(),!0;const r=parseInt(n.map((e,t)=>e.active?t:-1).filter(e=>e>=0));if(t==C){const e=n.filter((e,t)=>t<r&&!e.header&&!e.divider);e.length>0&&(n[r].active=!1,e[e.length-1].active=!0)}else if(t==U){const e=n.filter((e,t)=>t>r&&!e.header&&!e.divider);e.length>0&&(n[r].active=!1,e[0].active=!0)}this.update(),H(this)},onKeyup:function(e){if(e.keyCode!=R)return;const t=this.props.items.filter(e=>e.searched&&!e.selected),n=parseInt(t.map((e,t)=>e.active?t:-1).filter(e=>e>=0)),r=t[n];r&&(this.props.multiple?(r.selected=!0,r.active=!1,n<t.length-1?t[n+1].active=!0:n>0&&(t[n-1].active=!0),P(this)):(r.active=!1,$(this,r),F(this)))},onMousedown:function(){this.itemActivated=!0},onMouseup:function(){this.itemActivated=!1},onToggle:function(){this.visibleFlg?F(this):Y(this)},onUnselect:function(e,t){e.stopPropagation(),t.selected=!1,P(this)},stopPropagation:function(e){e.stopPropagation()},isItem:L,isVisible:function(e){return(!this.props.multiple||!e.default)&&(!e.selected&&(e.searched||e.divider||e.header))}},template:function(e,t,n,r){return e('<i class=\"dropdown icon\"></i><input expr103=\"expr103\" class=\"search\" autocomplete=\"off\"/><a expr104=\"expr104\" class=\"ui label transition visible\" style=\"display: inline-block !important;\"></a><div expr106=\"expr106\"></div><div expr107=\"expr107\" tabindex=\"-1\"><div expr108=\"expr108\"></div><div expr113=\"expr113\" class=\"message\"></div></div>',[{expressions:[{type:t.ATTRIBUTE,name:\"class\",evaluate:function(e){return[\"ui selection dropdown \",e.state.classes].join(\"\")}},{type:t.EVENT,name:\"onclick\",evaluate:function(e){return e.onToggle}},{type:t.EVENT,name:\"onfocus\",evaluate:function(e){return e.onFocus}},{type:t.EVENT,name:\"onmousedown\",evaluate:function(e){return e.onMousedown}},{type:t.EVENT,name:\"onmouseup\",evaluate:function(e){return e.onMouseup}},{type:t.EVENT,name:\"onblur\",evaluate:function(e){return e.onBlur}},{type:t.EVENT,name:\"onkeydown\",evaluate:function(e){return e.onKeydown}},{type:t.EVENT,name:\"onkeyup\",evaluate:function(e){return e.onKeyup}},{type:t.ATTRIBUTE,name:\"tabindex\",evaluate:function(e){return e.props.search?-1:e.tabindex}},{type:t.ATTRIBUTE,name:\"value\",evaluate:function(e){return e.props.multiple?e.viewValue:e.state.value}},{type:t.ATTRIBUTE,name:\"label\",evaluate:function(e){return e.state.label}},{type:t.ATTRIBUTE,name:\"changed\",evaluate:function(e){return e.changed}},{type:t.ATTRIBUTE,name:\"id\",evaluate:function(e){return e.su_id}}]},{type:n.IF,evaluate:function(e){return e.props.search},redundantAttribute:\"expr103\",selector:\"[expr103]\",template:e(null,[{expressions:[{type:t.ATTRIBUTE,name:\"tabindex\",evaluate:function(e){return e.tabindex}},{type:t.EVENT,name:\"oninput\",evaluate:function(e){return e.onInput}},{type:t.EVENT,name:\"onclick\",evaluate:function(e){return e.stopPropagation}},{type:t.EVENT,name:\"onfocus\",evaluate:function(e){return e.onFocus}},{type:t.EVENT,name:\"onblur\",evaluate:function(e){return e.onBlur}},{type:t.ATTRIBUTE,name:\"readonly\",evaluate:function(e){return e.readonly}}]}])},{type:n.EACH,getKey:null,condition:function(e){return e.item.selected},template:e(' <i expr105=\"expr105\" class=\"delete icon\"></i>',[{expressions:[{type:t.TEXT,childNodeIndex:0,evaluate:function(e){return[e.item.label].join(\"\")}},{type:t.EVENT,name:\"onclick\",evaluate:function(e){return e.stopPropagation}}]},{redundantAttribute:\"expr105\",selector:\"[expr105]\",expressions:[{type:t.EVENT,name:\"onclick\",evaluate:function(e){return t=>e.onUnselect(t,e.item)}}]}]),redundantAttribute:\"expr104\",selector:\"[expr104]\",itemName:\"item\",indexName:null,evaluate:function(e){return e.props.items}},{type:n.IF,evaluate:function(e){return!e.props.multiple||!e.state.selectedFlg},redundantAttribute:\"expr106\",selector:\"[expr106]\",template:e(\" \",[{expressions:[{type:t.TEXT,childNodeIndex:0,evaluate:function(e){return[e.state.label].join(\"\")}},{type:t.ATTRIBUTE,name:\"class\",evaluate:function(e){return[e.state.defaultFlg&&\"default\",\" text \",e.filtered&&\"filtered\"].join(\"\")}}]}])},{redundantAttribute:\"expr107\",selector:\"[expr107]\",expressions:[{type:t.ATTRIBUTE,name:\"class\",evaluate:function(e){return[\"menu transition \",e.state.transitionStatus].join(\"\")}},{type:t.EVENT,name:\"onmousedown\",evaluate:function(e){return e.onMousedown}},{type:t.EVENT,name:\"onmouseup\",evaluate:function(e){return e.onMouseup}},{type:t.EVENT,name:\"onblur\",evaluate:function(e){return e.onBlur}}]},{type:n.EACH,getKey:null,condition:function(e){return e.isVisible(e.item)},template:e('<i expr109=\"expr109\"></i><img expr110=\"expr110\" class=\"ui avatar image\"/><span expr111=\"expr111\" class=\"description\"></span><span expr112=\"expr112\" class=\"text\"> </span>',[{expressions:[{type:t.ATTRIBUTE,name:\"value\",evaluate:function(e){return e.item.value}},{type:t.ATTRIBUTE,name:\"default\",evaluate:function(e){return e.item.default}},{type:t.EVENT,name:\"onmousedown\",evaluate:function(e){return e.onMousedown}},{type:t.EVENT,name:\"onmouseup\",evaluate:function(e){return e.onMouseup}},{type:t.ATTRIBUTE,name:\"class\",evaluate:function(e){return e.item.classes}},{type:t.EVENT,name:\"onclick\",evaluate:function(e){return t=>e.onItemClick(t,e.item)}}]},{type:n.IF,evaluate:function(e){return e.item.icon},redundantAttribute:\"expr109\",selector:\"[expr109]\",template:e(null,[{expressions:[{type:t.ATTRIBUTE,name:\"class\",evaluate:function(e){return[e.item.icon,\" icon\"].join(\"\")}}]}])},{type:n.IF,evaluate:function(e){return e.item.image},redundantAttribute:\"expr110\",selector:\"[expr110]\",template:e(null,[{expressions:[{type:t.ATTRIBUTE,name:\"src\",evaluate:function(e){return e.item.image}}]}])},{type:n.IF,evaluate:function(e){return e.item.description},redundantAttribute:\"expr111\",selector:\"[expr111]\",template:e(\" \",[{expressions:[{type:t.TEXT,childNodeIndex:0,evaluate:function(e){return e.item.description}}]}])},{redundantAttribute:\"expr112\",selector:\"[expr112]\",expressions:[{type:t.TEXT,childNodeIndex:0,evaluate:function(e){return e.item.label}}]}]),redundantAttribute:\"expr108\",selector:\"[expr108]\",itemName:\"item\",indexName:null,evaluate:function(e){return e.props.items}},{type:n.IF,evaluate:function(e){return e.filtered&&0==e.filteredItems.length},redundantAttribute:\"expr113\",selector:\"[expr113]\",template:e(\"No results found.\",[])}])},name:\"su-dropdown\"};let W=0;function K(e,t,n){let r;if(e.state.items.some(e=>e.value==t||e.label==t))r=e.state.items.filter(e=>e.value==t||e.label==t)[0],e.state.label=r.label,e.state.value=r.value,e.state.default=r.default;else{const n=Q(e.state.items.filter(e=>e.items),e=>e.items);n.some(e=>e.value==t||e.label==t)&&(r=n.filter(e=>e.value==t||e.label==t)[0],e.state.label=r.label,e.state.value=r.value,e.state.default=r.default)}n||(e.update(),e.dispatch(\"change\",r))}function Q(e,t){return e.reduce((function(e,n){return e.concat(t(n))}),[])}var G={css:'su-select.ui.selection.dropdown,[is=\"su-select\"].ui.selection.dropdown{ padding: 0; } su-select.ui.selection.dropdown>select:focus,[is=\"su-select\"].ui.selection.dropdown>select:focus{ outline: 0; border-color: #96c8da; } su-select.ui.selection.dropdown>select,[is=\"su-select\"].ui.selection.dropdown>select{ display: block !important; padding: .78571429em 2.1em .78571429em 1em; background: 0 0 !important; position: relative; overflow: hidden; white-space: nowrap; text-overflow: ellipsis; -webkit-appearance: none; -moz-appearance: none; -webkit-box-sizing: border-box; box-sizing: border-box; border: none; width: 100%; z-index: 2; font-family: Lato, \\'Helvetica Neue\\', Arial, Helvetica, sans-serif; } su-select.ui.selection.dropdown>.dropdown.icon,[is=\"su-select\"].ui.selection.dropdown>.dropdown.icon{ z-index: 1; }',exports:{state:{defaultValue:\"\",value:\"\",label:\"\"},lastPropsValue:\"\",lastValue:\"\",onBeforeMount:function(e,t){this.su_id=`su-dropdown-${W++}`,this.obs.on(`${this.su_id}-reset`,()=>{var e;(e=this).update({value:e.state.defaultValue})}),e.items&&e.items.length>0&&(t.label=e.items[0].label,t.value=e.items[0].value,t.default=e.items[0].default)},onMounted:function(e,t){void 0!==e.value&&(t.value=e.value),this.lastPropsValue=e.value,this.lastValue=e.value,t.defaultValue=t.value,this.update()},onBeforeUpdate:function(e,t){t.items=e.items||[],this.lastPropsValue!=e.value&&(t.value=e.value,this.lastPropsValue=e.value,this.lastValue=e.value);let n=t.items.filter(e=>e.value===t.value);if(!n||0==n.length){n=Q(t.items.filter(e=>e.items),e=>e.items).filter(e=>e.value==t.value)}if(n&&n.length>0){const e=n[0];t.label!==e.label&&K(this,t.value,!0)}else t.items.length>0&&(t.value!=t.items[0].value&&(t.value=t.items[0].value),t.label!=t.items[0].label&&(t.label=t.items[0].label,t.default=t.items[0].default));this.changed=t.value!==t.defaultValue},onBlur:function(){this.dispatch(\"blur\")},onChange:function(e){K(this,this.$(\"select\").value)}},template:function(e,t,n,r){return e('<select expr16=\"expr16\"><option expr17=\"expr17\"></option><optgroup expr18=\"expr18\"></optgroup></select><i class=\"dropdown icon\"></i>',[{expressions:[{type:t.ATTRIBUTE,name:\"class\",evaluate:function(e){return\"ui selection dropdown\"}},{type:t.ATTRIBUTE,name:\"value\",evaluate:function(e){return e.state.value}},{type:t.ATTRIBUTE,name:\"label\",evaluate:function(e){return e.state.label}},{type:t.ATTRIBUTE,name:\"changed\",evaluate:function(e){return e.changed}},{type:t.ATTRIBUTE,name:\"id\",evaluate:function(e){return e.su_id}}]},{redundantAttribute:\"expr16\",selector:\"[expr16]\",expressions:[{type:t.EVENT,name:\"onchange\",evaluate:function(e){return e.onChange}},{type:t.EVENT,name:\"onblur\",evaluate:function(e){return e.onBlur}},{type:t.ATTRIBUTE,name:\"class\",evaluate:function(e){return[e.state.default?\"default\":\"\",\" text\"].join(\"\")}}]},{type:n.EACH,getKey:null,condition:function(e){return!e.item.items},template:e(\" \",[{expressions:[{type:t.TEXT,childNodeIndex:0,evaluate:function(e){return[e.item.label].join(\"\")}},{type:t.ATTRIBUTE,name:\"value\",evaluate:function(e){return e.item.value}}]}]),redundantAttribute:\"expr17\",selector:\"[expr17]\",itemName:\"item\",indexName:null,evaluate:function(e){return e.state.items}},{type:n.EACH,getKey:null,condition:function(e){return e.item.items},template:e('<option expr19=\"expr19\"></option>',[{expressions:[{type:t.ATTRIBUTE,name:\"label\",evaluate:function(e){return e.item.label}}]},{type:n.EACH,getKey:null,condition:null,template:e(\" \",[{expressions:[{type:t.TEXT,childNodeIndex:0,evaluate:function(e){return[e.child.label].join(\"\")}},{type:t.ATTRIBUTE,name:\"value\",evaluate:function(e){return e.child.value}}]}]),redundantAttribute:\"expr19\",selector:\"[expr19]\",itemName:\"child\",indexName:null,evaluate:function(e){return e.item.items}}]),redundantAttribute:\"expr18\",selector:\"[expr18]\",itemName:\"item\",indexName:null,evaluate:function(e){return e.state.items}}])},name:\"su-select\"};var q={css:'su-loading .ui.dimmer,[is=\"su-loading\"] .ui.dimmer{ z-index: 20000 }',exports:{counter:0,onMounted:function(e,t){this.obs&&this.obs.on(\"su-loading\",e=>{!function(e,t){t?e.counter++:e.counter--;e.update()}(this,e)})}},template:function(e,t,n,r){return e('<div expr15=\"expr15\"><div class=\"ui huge text loader\">Loading</div></div>',[{redundantAttribute:\"expr15\",selector:\"[expr15]\",expressions:[{type:t.ATTRIBUTE,name:\"class\",evaluate:function(e){return[\"ui page dimmer inverted \",e.counter>0?\"active\":\"\"].join(\"\")}}]}])},name:\"su-loading\"};function J(e){e.openning||e.closing||!e.visible||(e.closing=!0,e.update({transition:\"animating fade out visible active\"}),e.dispatch(\"hide\"),e.update(),setTimeout(()=>{e.closing=!1,e.visible=!1,e.update({transition:\"\"})},300))}var Z={css:'su-modal .ui.dimmer.visible.transition,[is=\"su-modal\"] .ui.dimmer.visible.transition{ display: flex !important; align-items: center; justify-content: center; } su-modal .ui.modal,[is=\"su-modal\"] .ui.modal{ top: auto; left: auto; position: relative; margin: 0 !important; } su-modal .ui.fullscreen.modal,[is=\"su-modal\"] .ui.fullscreen.modal{ left: 0 !important; } @media only screen and (min-width: 768px) { su-modal .ui.modal>.close,[is=\"su-modal\"] .ui.modal>.close{ display: none; } su-modal .ui.fullscreen.modal>.close,[is=\"su-modal\"] .ui.fullscreen.modal>.close{ display: inline; } }',exports:{state:{transition:\"\"},image_content:!1,openning:!1,closing:!1,closable:!0,visible:!1,onBeforeUpdate:function(e,t){this.basic=this.root.classList.contains(\"basic\"),this.contentClass=function(e){const t=[];e.$(\"img\")&&t.push(\"image\");e.root.classList.contains(\"scrolling\")&&t.push(\"scrolling\");return t.join(\" \")}(this),e.modal&&(this.closable=void 0===e.modal.closable||e.modal.closable,e.modal.header&&(this.header=e.modal.header,this.headerClass=e.modal.header.icon?\"icon\":\"\",this.title=e.modal.header.text?e.modal.header.text:e.modal.header),this.buttons=e.modal.buttons,this.buttons&&this.buttons.forEach(e=>{const t=[];e.icon&&e.text&&t.push(\"labeled\"),e.icon&&t.push(\"icon\"),this.basic&&t.push(\"inverted\"),e.disabled&&t.push(\"disabled\"),e.class=t.join(\" \")})),e.show!=this.lastShow&&(this.lastShow=e.show,e.show?function(e){if(e.openning||e.closing||e.visible)return;e.openning=!0,e.state.transition=\"animating fade in visible\",e.dispatch(\"show\"),e.update(),function(e){if(!e.buttons||0==e.buttons.length)return;if(e.buttons.some(e=>e.default)){const t=e.buttons.filter(e=>e.default)[0].text;e.$(`[name='button_${t}']`).focus()}}(e),setTimeout(()=>{e.openning=!1,e.visible=!0,e.update({transition:\"visible active\"})},500)}(this):J(this))},onClickModal:function(e){e.stopPropagation()},onClickButton:function(e){this.dispatch(e.action||e.text),(void 0===e.closable||e.closable)&&J(this)},onClickHide:function(){J(this)},onClickDimmer:function(){this.closable&&!this.basic&&J(this)}},template:function(e,t,n,r){return e('<div expr20=\"expr20\"><div expr21=\"expr21\"><i expr22=\"expr22\" class=\"close icon\"></i><div expr23=\"expr23\"></div><div expr25=\"expr25\"><slot expr26=\"expr26\"></slot></div><div class=\"actions\"><button expr27=\"expr27\" type=\"button\"></button></div></div></div>',[{expressions:[{type:t.EVENT,name:\"onclick\",evaluate:function(e){return e.onClickDimmer}},{type:t.ATTRIBUTE,name:\"id\",evaluate:function(e){return e.su_id}},{type:t.ATTRIBUTE,name:\"class\",evaluate:function(e){return e.props.class}}]},{redundantAttribute:\"expr20\",selector:\"[expr20]\",expressions:[{type:t.ATTRIBUTE,name:\"class\",evaluate:function(e){return[\"ui dimmer modals page transition \",e.state.transition].join(\"\")}}]},{redundantAttribute:\"expr21\",selector:\"[expr21]\",expressions:[{type:t.ATTRIBUTE,name:\"class\",evaluate:function(e){return[\"ui modal transition visible active \",e.props.class].join(\"\")}},{type:t.EVENT,name:\"onclick\",evaluate:function(e){return e.onClickModal}}]},{type:n.IF,evaluate:function(e){return e.closable&&!e.basic},redundantAttribute:\"expr22\",selector:\"[expr22]\",template:e(null,[{expressions:[{type:t.EVENT,name:\"onclick\",evaluate:function(e){return e.onClickHide}}]}])},{type:n.IF,evaluate:function(e){return e.header},redundantAttribute:\"expr23\",selector:\"[expr23]\",template:e('<i expr24=\"expr24\"></i> ',[{expressions:[{type:t.TEXT,childNodeIndex:1,evaluate:function(e){return[e.title].join(\"\")}},{type:t.ATTRIBUTE,name:\"class\",evaluate:function(e){return[\"ui header \",e.headerClass].join(\"\")}}]},{type:n.IF,evaluate:function(e){return e.header.icon},redundantAttribute:\"expr24\",selector:\"[expr24]\",template:e(null,[{expressions:[{type:t.ATTRIBUTE,name:\"class\",evaluate:function(e){return[\"icon \",e.header.icon].join(\"\")}}]}])}])},{redundantAttribute:\"expr25\",selector:\"[expr25]\",expressions:[{type:t.ATTRIBUTE,name:\"class\",evaluate:function(e){return[\"content \",e.contentClass].join(\"\")}}]},{type:n.SLOT,attributes:[],name:\"default\",redundantAttribute:\"expr26\",selector:\"[expr26]\"},{type:n.EACH,getKey:null,condition:null,template:e(' <i expr28=\"expr28\"></i>',[{expressions:[{type:t.TEXT,childNodeIndex:0,evaluate:function(e){return[e.button.text].join(\"\")}},{type:t.EVENT,name:\"onclick\",evaluate:function(e){return()=>e.onClickButton(e.button)}},{type:t.ATTRIBUTE,name:\"name\",evaluate:function(e){return[\"button_\",e.button.text].join(\"\")}},{type:t.ATTRIBUTE,name:\"class\",evaluate:function(e){return[\"ui button \",e.button.type,\" \",e.button.class].join(\"\")}}]},{type:n.IF,evaluate:function(e){return e.button.icon},redundantAttribute:\"expr28\",selector:\"[expr28]\",template:e(null,[{expressions:[{type:t.ATTRIBUTE,name:\"class\",evaluate:function(e){return[\"icon \",e.button.icon].join(\"\")}}]}])}]),redundantAttribute:\"expr27\",selector:\"[expr27]\",itemName:\"button\",indexName:null,evaluate:function(e){return e.buttons}}])},name:\"su-modal\"};var ee={css:null,exports:{state:{activePage:1,pages:[],totalPage:1},lastpropsTotalPage:null,lastpropsActivePage:null,lastActivePage:null,onMounted:function(){this.update({pages:[]})},onUpdated:function(e,t){let n=!1;e.activePage!=this.lastpropsActivePage&&(t.activePage=parseInt(e.activePage||1),this.lastpropsActivePage=t.activePage,n=!0),t.activePage!=this.lastActivePage&&(this.lastActivePage=t.activePage,n=!0),e.totalPage!=this.lastpropsTotalPage&&(t.totalPage=parseInt(e.totalPage||1),this.lastpropsTotalPage=t.totalPage,n=!0),n&&function(e){e.state.pages=[];const t=e.state.activePage,n=e.state.totalPage,r=function(e=7,t=1){return(e=parseInt(e))<t?e:t}(e.props.pageSize,n),i=function(e,t,n){const r=(n-n%2)/2;if(e+r>t)return t-n+1;if(e>r)return e-r;return 1}(t,n,r);if(r<1)return void e.update();for(let n=0;n<r;n++)e.state.pages.push({number:n+i,active:n+i==t});e.state.pages[0].number=1,e.state.pages[r-1].number=n,r>1&&(e.state.pages[1].disabled=1!=i);r>2&&(e.state.pages[r-2].disabled=i!=n-r+1);e.update()}(this)},onClickPage:function(e,t){e.preventDefault(),t<1||t>this.state.totalPage||(this.update({activePage:t}),this.dispatch(\"change\",t))}},template:function(e,t,n,r){return e('<div expr29=\"expr29\"><a expr30=\"expr30\"><i aria-hidden=\"true\" class=\"angle double left icon\"></i></a><a expr31=\"expr31\"><i class=\"angle left icon\"></i></a><template expr32=\"expr32\"></template><a expr36=\"expr36\"><i class=\"angle right icon\"></i></a><a expr37=\"expr37\"><i aria-hidden=\"true\" class=\"angle double right icon\"></i></a></div>',[{redundantAttribute:\"expr29\",selector:\"[expr29]\",expressions:[{type:t.ATTRIBUTE,name:\"class\",evaluate:function(e){return[\"ui pagination menu \",e.props.class].join(\"\")}}]},{redundantAttribute:\"expr30\",selector:\"[expr30]\",expressions:[{type:t.ATTRIBUTE,name:\"class\",evaluate:function(e){return[\"angle icon item \",e.state.activePage<=1?\"disabled\":\"\"].join(\"\")}},{type:t.EVENT,name:\"onclick\",evaluate:function(e){return t=>e.onClickPage(t,1)}}]},{redundantAttribute:\"expr31\",selector:\"[expr31]\",expressions:[{type:t.ATTRIBUTE,name:\"class\",evaluate:function(e){return[\"angle icon item \",e.state.activePage<=1?\"disabled\":\"\"].join(\"\")}},{type:t.EVENT,name:\"onclick\",evaluate:function(e){return t=>e.onClickPage(t,e.state.activePage-1)}}]},{type:n.EACH,getKey:null,condition:null,template:e('<a expr33=\"expr33\" class=\"item\"></a><a expr34=\"expr34\" class=\"active item\"></a><div expr35=\"expr35\" class=\"disabled icon item\"></div>',[{type:n.IF,evaluate:function(e){return!e.page.active&&!e.page.disabled},redundantAttribute:\"expr33\",selector:\"[expr33]\",template:e(\" \",[{expressions:[{type:t.TEXT,childNodeIndex:0,evaluate:function(e){return[e.page.number].join(\"\")}},{type:t.EVENT,name:\"onclick\",evaluate:function(e){return t=>e.onClickPage(t,e.page.number)}}]}])},{type:n.IF,evaluate:function(e){return e.page.active},redundantAttribute:\"expr34\",selector:\"[expr34]\",template:e(\" \",[{expressions:[{type:t.TEXT,childNodeIndex:0,evaluate:function(e){return e.page.number}}]}])},{type:n.IF,evaluate:function(e){return e.page.disabled},redundantAttribute:\"expr35\",selector:\"[expr35]\",template:e('<i class=\"ellipsis horizontal icon\"></i>',[])}]),redundantAttribute:\"expr32\",selector:\"[expr32]\",itemName:\"page\",indexName:null,evaluate:function(e){return e.state.pages}},{redundantAttribute:\"expr36\",selector:\"[expr36]\",expressions:[{type:t.ATTRIBUTE,name:\"class\",evaluate:function(e){return[\"angle icon item \",e.state.activePage>=e.state.totalPage?\"disabled\":\"\"].join(\"\")}},{type:t.EVENT,name:\"onclick\",evaluate:function(e){return t=>e.onClickPage(t,e.state.activePage+1)}}]},{redundantAttribute:\"expr37\",selector:\"[expr37]\",expressions:[{type:t.ATTRIBUTE,name:\"class\",evaluate:function(e){return[\"angle icon item \",e.state.activePage>=e.state.totalPage?\"disabled\":\"\"].join(\"\")}},{type:t.EVENT,name:\"onclick\",evaluate:function(e){return t=>e.onClickPage(t,e.state.totalPage)}}]}])},name:\"su-pagination\"};let te=0;var ne={css:'su-popup,[is=\"su-popup\"]{ position: relative; } su-popup .ui.popup,[is=\"su-popup\"] .ui.popup{ position: absolute; } su-popup .ui.popup.nowrap,[is=\"su-popup\"] .ui.popup.nowrap{ white-space: nowrap; } su-popup .ui.popup.wide,[is=\"su-popup\"] .ui.popup.wide{ width: 350px; } su-popup .ui.popup.very.wide,[is=\"su-popup\"] .ui.popup.very.wide{ width: 550px; } su-popup .ui.popup.top.left,[is=\"su-popup\"] .ui.popup.top.left{ top: auto; bottom: 100%; left: 1em; right: auto; margin-left: -1rem; } su-popup .ui.popup.bottom.left,[is=\"su-popup\"] .ui.popup.bottom.left{ top: 100%; bottom: auto; left: 1em; right: auto; margin-left: -1rem; } su-popup .ui.popup.top.center,[is=\"su-popup\"] .ui.popup.top.center{ top: auto; bottom: 100%; left: 50%; right: auto; -webkit-transform: translateX(-50%); transform: translateX(-50%); } su-popup .ui.popup.bottom.center,[is=\"su-popup\"] .ui.popup.bottom.center{ top: 100%; bottom: auto; left: 50%; right: auto; -webkit-transform: translateX(-50%); transform: translateX(-50%); } su-popup .ui.popup.top.center.scale.transition.in,[is=\"su-popup\"] .ui.popup.top.center.scale.transition.in,su-popup .ui.popup.bottom.center.scale.transition.in,[is=\"su-popup\"] .ui.popup.bottom.center.scale.transition.in{ animation-name: xScaleIn } su-popup .ui.popup.top.right,[is=\"su-popup\"] .ui.popup.top.right{ top: auto; bottom: 100%; left: auto; right: 1em; margin-right: -1rem; } su-popup .ui.popup.bottom.right,[is=\"su-popup\"] .ui.popup.bottom.right{ top: 100%; bottom: auto; left: auto; right: 1em; margin-right: -1rem; } su-popup .ui.popup.left.center,[is=\"su-popup\"] .ui.popup.left.center{ left: auto; right: 100%; top: 50%; -webkit-transform: translateY(-50%); transform: translateY(-50%); } su-popup .ui.popup.right.center,[is=\"su-popup\"] .ui.popup.right.center{ left: 100%; right: auto; top: 50%; -webkit-transform: translateY(-50%); transform: translateY(-50%); } su-popup .ui.popup.left.center.scale.transition.in,[is=\"su-popup\"] .ui.popup.left.center.scale.transition.in,su-popup .ui.popup.right.center.scale.transition.in,[is=\"su-popup\"] .ui.popup.right.center.scale.transition.in{ animation-name: yScaleIn } @-webkit-keyframes xScaleIn { 0% { opacity: 0; -webkit-transform: scale(0.8) translateX(-50%); transform: scale(0.8) translateX(-50%); } 100% { opacity: 1; -webkit-transform: scale(1) translateX(-50%); transform: scale(1) translateX(-50%); } } @keyframes xScaleIn { 0% { opacity: 0; -webkit-transform: scale(0.8) translateX(-50%); transform: scale(0.8) translateX(-50%); } 100% { opacity: 1; -webkit-transform: scale(1) translateX(-50%); transform: scale(1) translateX(-50%); } } @-webkit-keyframes yScaleIn { 0% { opacity: 0; -webkit-transform: scale(0.8) translateY(-50%); transform: scale(0.8) translateY(-50%); } 100% { opacity: 1; -webkit-transform: scale(1) translateY(-50%); transform: scale(1) translateY(-50%); } } @keyframes yScaleIn { 0% { opacity: 0; -webkit-transform: scale(0.8) translateY(-50%); transform: scale(0.8) translateY(-50%); } 100% { opacity: 1; -webkit-transform: scale(1) translateY(-50%); transform: scale(1) translateY(-50%); } }',exports:{state:{dataVariation:\"\",content:\"\"},onMounted:function(e,t){this.su_id=`su-popup-${te++}`,e.tooltip?t.content=e.tooltip:this.$(\"su-popup-content\")&&(t.content=this.$(\"su-popup-content\").innerHTML,this.root.removeChild(this.$(\"su-popup-content\"))),this.update(),this.$(\".content\").innerHTML=t.content},onBeforeUpdate:function(e,t){t.dataVariation=e.dataVariation||\"\",t.nowrap=t.dataVariation.indexOf(\"wide\")<0?\"nowrap\":\"\",t.position=e.position||\"top left\"},onMouseOver:function(){this.update({transitionStatus:\"scale in visible\"}),this.dispatch(\"mouseover\")},onMouseOut:function(){this.update({transitionStatus:\"hidden\"}),this.dispatch(\"mouseout\")}},template:function(e,t,n,r){return e('<div expr38=\"expr38\"><div expr39=\"expr39\" class=\"header\"></div><div class=\"content\"></div></div><slot expr40=\"expr40\"></slot>',[{redundantAttribute:\"expr38\",selector:\"[expr38]\",expressions:[{type:t.ATTRIBUTE,name:\"id\",evaluate:function(e){return e.su_id}},{type:t.EVENT,name:\"onmouseover\",evaluate:function(e){return e.onMouseOver}},{type:t.EVENT,name:\"onmouseout\",evaluate:function(e){return e.onMouseOut}},{type:t.ATTRIBUTE,name:\"class\",evaluate:function(e){return[\"ui popup \",e.state.position,\" \",e.state.dataVariation,\" transition \",e.state.transitionStatus,\" \",e.state.nowrap].join(\"\")}}]},{type:n.IF,evaluate:function(e){return e.props.dataTitle},redundantAttribute:\"expr39\",selector:\"[expr39]\",template:e(\" \",[{expressions:[{type:t.TEXT,childNodeIndex:0,evaluate:function(e){return e.props.dataTitle}}]}])},{type:n.SLOT,attributes:[],name:\"default\",redundantAttribute:\"expr40\",selector:\"[expr40]\"}])},name:\"su-popup\"};function re(e){return parseInt(e.state.value/e.total*100)+\"\"}function ie(e,t){return e.root.classList.contains(t)}var ae={css:'su-progress .ui.progress:last-child,[is=\"su-progress\"] .ui.progress:last-child{ margin: 0 0 2.5em; } su-progress.attached,[is=\"su-progress\"].attached{ display: block; height: 0.2rem; padding: 0px; overflow: hidden; border-radius: 0em 0em 0.28571429rem 0.28571429rem; position: absolute; left: 0; width: 100%; } su-progress.top.attached,[is=\"su-progress\"].top.attached{ top: 0px; bottom: 100%; border-radius: 0.28571429rem 0.28571429rem 0em 0em; } su-progress.bottom.attached,[is=\"su-progress\"].bottom.attached{ top: 100%; bottom: auto; }',exports:{state:{value:null},lastPropsValue:null,lastValue:null,total:100,onMounted:function(e,t){this.state.value=e.value||0,e.total>0&&(this.total=e.total),this.percent=re(this),this.lastValue=this.state.value,this.lastPropsValue=e.value,this.update()},onBeforeUpdate:function(e,t){let n=!1;this.state.value>=this.total&&(this.state.value=this.total),this.state.value<=0&&(this.state.value=0);let r=e.value;r>=this.total&&(r=this.total),r<=0&&(r=0),this.lastValue!=this.state.value?(this.lastValue=this.state.value,n=!0):this.lastPropsValue!=r&&(this.state.value=r,this.lastPropsValue=r,this.lastValue=r,n=!0),n&&(this.percent=re(this))},getClass:function(){const e=[\"progress\",\"active\"];return Array.apply(null,this.root.classList).filter(t=>!e.some(e=>e==t)).join(\" \")},getStates:function(){return 100==this.percent?\"success\":function(e){return ie(e,\"active\")&&e.percent>0&&e.percent<100}(this)?\"active\":void 0},isProgress:function(){return ie(this,\"progress\")},isIndicating:function(){return ie(this,\"indicating\")}},template:function(e,t,n,r){return e('<div expr41=\"expr41\"><div expr42=\"expr42\" class=\"bar\"><div expr43=\"expr43\" class=\"progress\"></div></div><div class=\"label\"><template expr44=\"expr44\"></template><slot expr45=\"expr45\"></slot></div></div>',[{expressions:[{type:t.ATTRIBUTE,name:\"class\",evaluate:function(e){return e.props.class}},{type:t.ATTRIBUTE,name:\"percent\",evaluate:function(e){return e.percent}},{type:t.ATTRIBUTE,name:\"value\",evaluate:function(e){return e.state.value}}]},{redundantAttribute:\"expr41\",selector:\"[expr41]\",expressions:[{type:t.ATTRIBUTE,name:\"class\",evaluate:function(e){return[\"ui progress \",e.getClass(),\" \",e.getStates()].join(\"\")}},{type:t.ATTRIBUTE,name:\"data-percent\",evaluate:function(e){return e.percent}}]},{redundantAttribute:\"expr42\",selector:\"[expr42]\",expressions:[{type:t.ATTRIBUTE,name:\"style\",evaluate:function(e){return[\"transition-duration: 300ms; width: \",e.percent,\"%;\"].join(\"\")}}]},{type:n.IF,evaluate:function(e){return e.isProgress()},redundantAttribute:\"expr43\",selector:\"[expr43]\",template:e(\" \",[{expressions:[{type:t.TEXT,childNodeIndex:0,evaluate:function(e){return[e.percent,\"%\"].join(\"\")}}]}])},{type:n.IF,evaluate:function(e){return e.isIndicating()},redundantAttribute:\"expr44\",selector:\"[expr44]\",template:e(\" \",[{expressions:[{type:t.TEXT,childNodeIndex:0,evaluate:function(e){return[e.percent,\"%\"].join(\"\")}}]}])},{type:n.SLOT,attributes:[],name:\"default\",redundantAttribute:\"expr45\",selector:\"[expr45]\"}])},name:\"su-progress\"};let oe=0;function se(e,t){e.setAttribute(\"name\",`${t}-radio`)}var ue={css:null,exports:{state:{value:\"\",lastValue:\"\",lastOptsValue:\"\"},changed:!1,defaultValue:\"\",onBeforeUpdate:function(e,t){this.changed=t.value!==this.defaultValue,t.lastOptsValue!=e.value&&(t.value=e.value,t.lastOptsValue=e.value)},onMounted:function(e,t){this.su_id=`su-radio-group-${oe++}`,this.obs.on(`${this.su_id}-reset`,()=>{var e;(e=this).update({value:e.defaultValue})}),t.value||(t.value=e.value),t.lastValue=t.value,t.lastOptsValue=t.value,this.$$(\"su-radio\").forEach(e=>{se(e,this.su_id)}),this.obs.on(`${this.su_id}-radio-click`,e=>{this.update({value:e})}),this.defaultValue=t.value,this.update()},onUpdated:function(e,t){let n=!1;t.lastValue!=t.value&&(t.lastValue=t.value,n=!0);const r=this.$$(\"su-radio\");r.forEach(e=>{se(e,this.su_id)}),n&&(r.forEach(e=>{!function(e,t){if(void 0===e.getAttribute(\"value\")||void 0===t)return;e[Object.getOwnPropertySymbols(e).find(e=>\"Symbol(riot-component)\"===e.toString())].state.checked=t==e.getAttribute(\"value\")}(e,t.value)}),this.dispatch(\"change\",t.value),this.obs.trigger(`${e.suParentId}-update`),this.update())}},template:function(e,t,n,r){return e('<slot expr46=\"expr46\"></slot>',[{expressions:[{type:t.ATTRIBUTE,name:\"value\",evaluate:function(e){return e.state.value}},{type:t.ATTRIBUTE,name:\"changed\",evaluate:function(e){return e.changed}},{type:t.ATTRIBUTE,name:\"id\",evaluate:function(e){return e.su_id}}]},{type:n.SLOT,attributes:[],name:\"default\",redundantAttribute:\"expr46\",selector:\"[expr46]\"}])},name:\"su-radio-group\"};let le=0;function ce(e){return!0===e||\"checked\"===e||\"true\"===e}var pe={css:'su-radio.ui.checkbox label,[is=\"su-radio\"].ui.checkbox label{ cursor: pointer; } su-radio.ui.read-only input[type=\"radio\"],[is=\"su-radio\"].ui.read-only input[type=\"radio\"],su-radio.ui.disabled input[type=\"radio\"],[is=\"su-radio\"].ui.disabled input[type=\"radio\"]{ cursor: default !important; }',exports:{state:{checked:!1,lastChecked:!1,lastOptsChecked:!1},radio:\"radio\",onMounted:function(e,t){this.su_id=`su-radio-${le++}`,t.checked=ce(e.checked),t.lastChecked=t.checked,t.lastOptsChecked=t.checked,this.update()},onBeforeUpdate:function(e,t){this.readOnly=this.root.classList.contains(\"read-only\"),this.disabled=this.root.classList.contains(\"disabled\"),this.radio=this.root.classList.contains(\"slider\")?\"\":\"radio\",this.radioName=this.root.getAttribute(\"name\"),t.lastOptsChecked!=ce(e.checked)&&(t.checked=ce(e.checked),t.lastOptsChecked=t.checked)},onUpdated:function(e,t){t.lastChecked!=t.checked&&(t.lastChecked=ce(e.checked))},onClick:function(e){this.readOnly||this.disabled?e.preventDefault():(this.update({checked:e.target.checked}),this.dispatch(\"click\",e.target.value),this.obs&&this.root.getAttribute(\"name\")&&this.obs.trigger(`${this.root.getAttribute(\"name\")}-click`,this.props.value))}},template:function(e,t,n,r){return e('<input expr47=\"expr47\" type=\"radio\"/><label expr48=\"expr48\"></label><label expr50=\"expr50\"></label>',[{expressions:[{type:t.ATTRIBUTE,name:\"class\",evaluate:function(e){return[\"ui \",e.radio,\" checkbox \",e.props.class].join(\"\")}},{type:t.ATTRIBUTE,name:\"checked\",evaluate:function(e){return e.state.checked}}]},{redundantAttribute:\"expr47\",selector:\"[expr47]\",expressions:[{type:t.ATTRIBUTE,name:\"name\",evaluate:function(e){return e.radioName}},{type:t.VALUE,evaluate:function(e){return e.value}},{type:t.ATTRIBUTE,name:\"checked\",evaluate:function(e){return e.state.checked}},{type:t.EVENT,name:\"onclick\",evaluate:function(e){return e.onClick}},{type:t.ATTRIBUTE,name:\"id\",evaluate:function(e){return e.su_id}}]},{type:n.IF,evaluate:function(e){return!e.props.label},redundantAttribute:\"expr48\",selector:\"[expr48]\",template:e('<slot expr49=\"expr49\"></slot>',[{expressions:[{type:t.ATTRIBUTE,name:\"for\",evaluate:function(e){return e.su_id}}]},{type:n.SLOT,attributes:[],name:\"default\",redundantAttribute:\"expr49\",selector:\"[expr49]\"}])},{type:n.IF,evaluate:function(e){return e.props.label},redundantAttribute:\"expr50\",selector:\"[expr50]\",template:e(\" \",[{expressions:[{type:t.TEXT,childNodeIndex:0,evaluate:function(e){return e.props.label}},{type:t.ATTRIBUTE,name:\"for\",evaluate:function(e){return e.su_id}}]}])}])},name:\"su-radio\"};let de=0;function fe(e){e.state.items.forEach(t=>{t.active=t.value<=e.state.value})}var he={css:null,exports:{state:{items:[],value:null,lastValue:null,defaultValue:null},changed:!1,onBeforeMount:function(e,t){!function(e,t=5,n=0){e.lastValue=n,e.state.value=n,e.state.defaultValue=n,e.state.items.length=0;for(let n=0;n<t;n++)e.state.items[n]={value:n+1,active:!1,selected:!1};fe(e)}(this,e.max,e.value),this.su_id=`su-rating-${de++}`,this.obs.on(`${this.su_id}-reset`,()=>{var e;(e=this).update({value:e.state.defaultValue})})},onMounted:function(e,t){this.update()},onBeforeUpdate:function(e,t){this.state.lastValue!=e.value&&(this.state.lastValue=e.value,this.state.value=e.value),this.readOnly=this.root.classList.contains(\"read-only\"),this.changed=t.value!=t.defaultValue,fe(this)},onClick:function(e){if(this.readOnly)return;let t,n=!1;this.state.value!=e.value&&(t=this.state.value,n=!0),this.state.value=e.value,fe(this),this.update(),this.dispatch(\"click\",e.value),n&&this.dispatch(\"change\",{value:this.state.value,beforeValue:t})},onMouseover:function(e){this.readOnly||(this.state.items.forEach(t=>{t.selected=t.value<=e.value}),this.update())},onMouseout:function(){this.readOnly||(this.state.items.forEach(e=>{e.selected=!1}),this.update())}},template:function(e,t,n,r){return e('<i expr51=\"expr51\"></i>',[{expressions:[{type:t.ATTRIBUTE,name:\"class\",evaluate:function(e){return[\"ui rating \",e.props.class].join(\"\")}},{type:t.ATTRIBUTE,name:\"value\",evaluate:function(e){return e.state.value}},{type:t.ATTRIBUTE,name:\"changed\",evaluate:function(e){return e.changed}},{type:t.ATTRIBUTE,name:\"id\",evaluate:function(e){return e.su_id}}]},{type:n.EACH,getKey:null,condition:null,template:e(null,[{expressions:[{type:t.ATTRIBUTE,name:\"class\",evaluate:function(e){return[\"icon \",e.item.active?\"active\":\"\",\" \",e.item.selected?\"selected\":\"\"].join(\"\")}},{type:t.EVENT,name:\"onclick\",evaluate:function(e){return()=>e.onClick(e.item)}},{type:t.EVENT,name:\"onmouseover\",evaluate:function(e){return()=>e.onMouseover(e.item)}},{type:t.EVENT,name:\"onmouseout\",evaluate:function(e){return e.onMouseout}}]}]),redundantAttribute:\"expr51\",selector:\"[expr51]\",itemName:\"item\",indexName:null,evaluate:function(e){return e.state.items}}])},name:\"su-rating\"};let me=0;var ve={css:null,exports:{onMounted:function(e,t){this.su_id=`su-tab-header-${me++}`,this.obs.on(`${this.su_id}-add-class`,e=>{this.update({classes:e})})}},template:function(e,t,n,r){return e('<slot expr52=\"expr52\"></slot>',[{expressions:[{type:t.ATTRIBUTE,name:\"class\",evaluate:function(e){return[\"ui \",e.state.classes,\" menu\"].join(\"\")}},{type:t.ATTRIBUTE,name:\"id\",evaluate:function(e){return e.su_id}}]},{type:n.SLOT,attributes:[],name:\"default\",redundantAttribute:\"expr52\",selector:\"[expr52]\"}])},name:\"su-tab-header\"};let ge=0;var xe={css:null,exports:{state:{active:!1},onMounted:function(e,t){this.su_id=`su-tab-title-${ge++}`,this.update(),this.obs.on(`${this.su_id}-toggle-active`,e=>{this.update({active:e})}),this.obs.on(`${this.su_id}-add-tabset-id`,e=>{this.suTabsetId=e})},onClick:function(){this.obs.trigger(`${this.suTabsetId}-title-clicked`,this.$(\"a.item\").innerText.trim())}},template:function(e,t,n,r){return e('<a expr53=\"expr53\"><slot expr54=\"expr54\"></slot></a>',[{expressions:[{type:t.ATTRIBUTE,name:\"id\",evaluate:function(e){return e.su_id}}]},{redundantAttribute:\"expr53\",selector:\"[expr53]\",expressions:[{type:t.ATTRIBUTE,name:\"class\",evaluate:function(e){return[e.props.class,\" \",e.state.active&&\"active\",\" item\"].join(\"\")}},{type:t.EVENT,name:\"onclick\",evaluate:function(e){return e.onClick}}]},{type:n.SLOT,attributes:[],name:\"default\",redundantAttribute:\"expr54\",selector:\"[expr54]\"}])},name:\"su-tab-title\"};let be=0;var ye={css:'su-tab.ui.segment,[is=\"su-tab\"].ui.segment{ margin-top: 0; margin-bottom: 0; } su-tab.ui.segment.top.attached,[is=\"su-tab\"].ui.segment.top.attached{ margin-top: 0 } su-tab.ui.segment.bottom.attached,[is=\"su-tab\"].ui.segment.bottom.attached{ margin-bottom: 0 }',exports:{state:{active:!1,mounted:!1},onMounted:function(e,t){this.su_id=`su-tab-${be++}`,this.update({classes:e.class,active:e.active}),this.obs.on(`${this.su_id}-toggle-active`,e=>{this.update({active:e})}),this.obs.on(`${this.su_id}-add-class`,e=>{this.update({classes:e})}),this.obs.on(`${this.su_id}-mount`,()=>{this.update({mounted:!0})})},onBeforeUpdate:function(e,t){t.active&&!t.mounted&&(t.mounted=!0)}},template:function(e,t,n,r){return e('<span expr55=\"expr55\"></span>',[{expressions:[{type:t.ATTRIBUTE,name:\"class\",evaluate:function(e){return[\"ui \",e.state.classes,\" \",e.state.active?\"active\":\"\",\" tab\"].join(\"\")}},{type:t.ATTRIBUTE,name:\"id\",evaluate:function(e){return e.su_id}}]},{type:n.IF,evaluate:function(e){return e.state.mounted},redundantAttribute:\"expr55\",selector:\"[expr55]\",template:e('<slot expr56=\"expr56\"></slot>',[{type:n.SLOT,attributes:[],name:\"default\",redundantAttribute:\"expr56\",selector:\"[expr56]\"}])}])},name:\"su-tab\"};let Te=0;function ke(e){return!!e.$(\"su-tab-header\")&&e.$$(\"su-tab-header su-tab-title\")}function Ee(e,t){return e.root.classList.contains(t)}var we={css:null,exports:{state:{active:!1},lastOptsActive:null,lastActive:null,onMounted:function(e,t){this.su_id=`su-tabset-${Te++}`;const n=this.$(\"su-tab-header\");if(n&&this.obs.trigger(`${n.id}-add-class`,function(e){const t=[];(Ee(e,\"left\")||Ee(e,\"right\"))&&(t.push(\"vertical\"),t.push(\"fluid\"));Ee(e,\"left\")&&t.push(\"left\");Ee(e,\"right\")&&t.push(\"right\");Ee(e,\"tabular\")&&t.push(\"tabular\");return t.join(\" \")}(this)),this.$$(\"su-tab-title\").forEach(e=>{this.obs.trigger(`${e.id}-add-tabset-id`,this.su_id)}),this.obs.on(`${this.su_id}-title-clicked`,e=>{!function(e,t){e.state.active=t,e.update(),e.dispatch(\"click\",e.state.active)}(this,e)}),this.tabs=this.$$(\"su-tab\"),0!=this.tabs.length){if(void 0===e.active){const e=ke(this);e.length>0?t.active=e[0].innerText.trim():t.active=this.tabs[0].getAttribute(\"label\")}this.tabs.forEach(e=>{!function(e,t){e.props.lazyMount||e.obs.trigger(`${t.id}-mount`);if(Array.from(t.classList.values()).some(e=>\"ui\"!=e&&\"tab\"!=e&&\"active\"!=e))return;let n=Ee(e,\"no-segment\")?[]:[\"segment\"];Ee(e,\"tabular\")&&n.push(\"tabular\");!Ee(e,\"attached\")&&!Ee(e,\"tabular\")||Ee(e,\"left\")||Ee(e,\"right\")||(Ee(e,\"bottom\")?n.push(\"top\"):n.push(\"bottom\"),n.push(\"attached\"));e.obs.trigger(`${t.id}-add-class`,n.join(\" \"))}(this,e)}),this.update()}},onUpdated:function(e,t){let n=!1;if(this.lastOptsActive!=e.active&&(this.lastOptsActive=e.active,t.active=e.active,n=!0),this.lastActive!=t.active&&(this.lastActive=t.$$,n=!0),n){const e=ke(this);if(e.length>0){let n;e.forEach((e,r)=>{this.obs.trigger(`${e.id}-toggle-active`,!1),e.innerText.trim()===t.active.trim()&&(this.obs.trigger(`${e.id}-toggle-active`,!0),n=r)}),n||(this.obs.trigger(`${e[0].id}-toggle-active`,!0),n=0),this.tabs.forEach((e,t)=>{this.obs.trigger(`${e.id}-toggle-active`,n==t)})}else this.tabs.forEach(e=>{this.obs.trigger(`${e.id}-toggle-active`,e.getAttribute(\"label\")==t.active)}),this.tabs.some(e=>e.classList.contains(\"active\"))||this.obs.trigger(`${this.tabs[0].id}-toggle-active`,!0)}},onClick:function(e){this.state.active=e.getAttribute(\"label\"),this.update(),this.dispatch(\"click\",this.state.active)},getClass:function(){if(Ee(this,\"tabular\")&&!Ee(this,\"attached\"))return\"attached\"},showMenu:function(){return!ke(this)},isBottom:function(){return Ee(this,\"bottom\")}},template:function(e,t,n,r){return e('<div expr58=\"expr58\"></div><slot expr60=\"expr60\"></slot><div expr61=\"expr61\"></div>',[{expressions:[{type:t.ATTRIBUTE,name:\"id\",evaluate:function(e){return e.su_id}}]},{type:n.IF,evaluate:function(e){return!e.isBottom()&&e.showMenu()},redundantAttribute:\"expr58\",selector:\"[expr58]\",template:e('<a expr59=\"expr59\"></a>',[{expressions:[{type:t.ATTRIBUTE,name:\"class\",evaluate:function(e){return[\"ui \",e.props.class,\" \",e.getClass(),\" menu\"].join(\"\")}}]},{type:n.EACH,getKey:null,condition:null,template:e(\" \",[{expressions:[{type:t.TEXT,childNodeIndex:0,evaluate:function(e){return e.tab.getAttribute(\"label\")}},{type:t.ATTRIBUTE,name:\"class\",evaluate:function(e){return[e.tab.getAttribute(\"title-class\"),\" \",e.tab.getAttribute(\"label\")==e.state.active?\"active\":\"\",\" item\"].join(\"\")}},{type:t.EVENT,name:\"onclick\",evaluate:function(e){return()=>e.onClick(e.tab)}}]}]),redundantAttribute:\"expr59\",selector:\"[expr59]\",itemName:\"tab\",indexName:null,evaluate:function(e){return e.tabs}}])},{type:n.SLOT,attributes:[],name:\"default\",redundantAttribute:\"expr60\",selector:\"[expr60]\"},{type:n.IF,evaluate:function(e){return e.isBottom()&&e.showMenu()},redundantAttribute:\"expr61\",selector:\"[expr61]\",template:e('<a expr62=\"expr62\"></a>',[{expressions:[{type:t.ATTRIBUTE,name:\"class\",evaluate:function(e){return[\"ui \",e.props.class,\" \",e.getClass(),\" menu\"].join(\"\")}}]},{type:n.EACH,getKey:null,condition:null,template:e(\" \",[{expressions:[{type:t.TEXT,childNodeIndex:0,evaluate:function(e){return e.tab.getAttribute(\"label\")}},{type:t.ATTRIBUTE,name:\"class\",evaluate:function(e){return[e.tab.getAttribute(\"title-class\"),\" \",e.tab.getAttribute(\"label\")==e.state.active?\"active\":\"\",\" item\"].join(\"\")}},{type:t.EVENT,name:\"onclick\",evaluate:function(e){return()=>e.onClick(e.tab)}}]}]),redundantAttribute:\"expr62\",selector:\"[expr62]\",itemName:\"tab\",indexName:null,evaluate:function(e){return e.tabs}}])}])},name:\"su-tabset\"};function Ae(e,t){!function(e){e.props.data.forEach((t,n)=>{void 0===t[e.state.suTableIndex]&&(t[e.state.suTableIndex]=n)})}(e);const n=function(e,t,n){t.field===e?t.reverse?(t.reverse=!1,t.field=n):t.reverse=!0:(t.reverse=!1,t.field=e);return t}(t,e.lastCondition,e.state.suTableIndex);e.props.data.sort(function(e,t){const n=e.field,r=e.reverse?-1:1,i=t.props.nullsFirst?-1:1;return(e,a)=>{const o=e[n],s=a[n];return null==o?r*i:null==s?r*i*-1:o<s?-1*r:o>s?r:e[t.state.suTableIndex]-a[t.state.suTableIndex]}}(n,e)),e.lastCondition=n}var Ie={css:null,exports:{state:{suTableIndex:\"su-table-index\"},lastData:{},lastCondition:{},headers:[],onBeforeMount:function(e,t){this.lastData={},this.lastCondition={}},onMounted:function(e,t){this.headers=this.$$('su-th, [is=\"su-th\"]'),this.headers.forEach(e=>{this.obs.on(`${e.id}-click`,e=>{Ae(this,e),this.headers.forEach(e=>{this.obs.trigger(`${e.id}-set-condition`,this.lastCondition)}),this.update()})}),this.update()},onUpdated:function(e,t){JSON.stringify(this.lastData)!=JSON.stringify(e.data)&&(this.lastData=e.data,this.lastCondition={field:t.suTableIndex,reverse:!1},e.defaultSortField&&(e.defaultSortReverse&&(this.lastCondition.field=e.defaultSortField,this.lastCondition.reverse=!1),Ae(this,e.defaultSortField),this.headers.forEach(e=>{this.obs.trigger(`${e.id}-set-condition`,this.lastCondition)})))}},template:function(e,t,n,r){return e('<slot expr57=\"expr57\"></slot>',[{type:n.SLOT,attributes:[],name:\"default\",redundantAttribute:\"expr57\",selector:\"[expr57]\"}])},name:\"su-table\"};let Me=0;var De={css:null,exports:{state:{sorted:!1,reverse:!1},clazz:\"\",onMounted:function(e,t){this.su_id=`su-th-${Me++}`,this.update(),this.obs.on(`${this.su_id}-set-condition`,t=>{this.update({sorted:e.field==t.field,reverse:t.reverse})})},onBeforeUpdate:function(e,t){const n=[];t.sorted&&(n.push(\"sorted \"),n.push(t.reverse?\"descending\":\"ascending\")),this.clazz=n.join(\" \"),t.field=e.field},onClick:function(){this.obs.trigger(`${this.su_id}-click`,this.state.field)}},template:function(e,t,n,r){return e('<slot expr63=\"expr63\"></slot>',[{expressions:[{type:t.EVENT,name:\"onclick\",evaluate:function(e){return e.onClick}},{type:t.ATTRIBUTE,name:\"class\",evaluate:function(e){return e.clazz}},{type:t.ATTRIBUTE,name:\"id\",evaluate:function(e){return e.su_id}}]},{type:n.SLOT,attributes:[],name:\"default\",redundantAttribute:\"expr63\",selector:\"[expr63]\"}])},name:\"su-th\"};var Oe={css:'su-toast,[is=\"su-toast\"]{ position: fixed; padding: 1rem; z-index: 3000; } su-toast.right,[is=\"su-toast\"].right{ right: 0; } su-toast.left,[is=\"su-toast\"].left{ left: 0; } su-toast.top,[is=\"su-toast\"].top{ top: 0; } su-toast.bottom,[is=\"su-toast\"].bottom{ bottom: 0; } su-toast.middle,[is=\"su-toast\"].middle{ top: 50%; margin-top: -35px; } su-toast.center,[is=\"su-toast\"].center{ left: 50%; margin-left: 150px; } su-toast .ui.message,[is=\"su-toast\"] .ui.message{ min-width: 20rem; position: relative; padding-right: 2.5rem; } su-toast .ui.icon.message,[is=\"su-toast\"] .ui.icon.message{ width: auto !important; }',exports:{state:{items:[],position:\"\"},onBeforeMount:function(e,t){t.items=[]},onMounted:function(){this.update(),this.obs&&(this.obs.off(\"su-toast-show\"),this.obs.on(\"su-toast-show\",e=>{!function(e,t){const n={title:null,message:null,icon:null,progress:null,class:null};\"string\"==typeof t?n.message=t:t&&Object.assign(n,t);n.messages=Array.isArray(n.message)?n.message:[n.message],e.state.items.push(n),e.update(),setTimeout(()=>{e.state.items.shift(),e.update()},5e3)}(this,e)}))},onBeforeUpdate:function(e,t){t.position=e.position||\"bottom right\"}},template:function(e,t,n,r){return e('<div class=\"ui list\"><su-toast-item expr72=\"expr72\"></su-toast-item></div>',[{expressions:[{type:t.ATTRIBUTE,name:\"class\",evaluate:function(e){return e.state.position}}]},{type:n.EACH,getKey:null,condition:null,template:e(null,[{type:n.TAG,getComponent:r,evaluate:function(e){return\"su-toast-item\"},slots:[],attributes:[{type:t.ATTRIBUTE,name:\"icon\",evaluate:function(e){return e.item.icon}},{type:t.ATTRIBUTE,name:\"progress\",evaluate:function(e){return e.item.progress}},{type:t.ATTRIBUTE,name:\"class-name\",evaluate:function(e){return e.item.class}},{type:t.ATTRIBUTE,name:\"title\",evaluate:function(e){return e.item.title}},{type:t.ATTRIBUTE,name:\"messages\",evaluate:function(e){return e.item.messages}},{type:t.ATTRIBUTE,name:\"position\",evaluate:function(e){return e.state.position}}]}]),redundantAttribute:\"expr72\",selector:\"[expr72]\",itemName:\"item\",indexName:null,evaluate:function(e){return e.state.items}}])},name:\"su-toast\"};var Se={css:'su-toast-item .ui.message,[is=\"su-toast-item\"] .ui.message{ margin: 0 } @-webkit-keyframes progress-active { 0% { -webkit-transform: scale(0, 1); transform: scale(0, 1); } 100% { -webkit-transform: scale(1); transform: scale(1); } } @keyframes progress-active { 0% { -webkit-transform: scale(0, 1); transform: scale(0, 1); } 100% { -webkit-transform: scale(1); transform: scale(1); } } su-toast-item .attached.progress,[is=\"su-toast-item\"] .attached.progress{ z-index: 1; } su-toast-item .attached.progress .bar,[is=\"su-toast-item\"] .attached.progress .bar{ min-width: 0%; width: 100%; } su-toast-item .active.progress .bar:after,[is=\"su-toast-item\"] .active.progress .bar:after,su-toast-item .ui.progress.success .bar:after,[is=\"su-toast-item\"] .ui.progress.success .bar:after,su-toast-item .ui.progress.warning .bar:after,[is=\"su-toast-item\"] .ui.progress.warning .bar:after,su-toast-item .ui.progress.error .bar:after,[is=\"su-toast-item\"] .ui.progress.error .bar:after{ animation: progress-active 3.5s infinite !important; -webkit-transform-origin: left; transform-origin: left; opacity: 0.3 !important; } su-toast-item .bottom.attached.progress,[is=\"su-toast-item\"] .bottom.attached.progress{ margin: -3px 0 6px; } su-toast-item .top.attached.progress,[is=\"su-toast-item\"] .top.attached.progress{ margin: 6px 0 -3px; }',exports:{onMounted:function(e){const t=(e.position||\"\").indexOf(\"right\")>=0,n=t?\"left\":\"right\";this.position=t?\"right\":\"left\",this.transition=`transition animating in fade ${n}`,this.icon=e.icon,this.progress=e.progress,this.className=e.className,this.title=e.title,this.messages=e.messages,this.update(),setTimeout(()=>{this.transition=\"\",this.update()},300),setTimeout(()=>{this.transition=`transition animating out fade ${n}`,this.update()},3e3),setTimeout(()=>{this.transition=\"transition hidden\",this.hide=!0,this.update()},3500)},onClose:function(){this.hide=!0,this.update()}},template:function(e,t,n,r){return e('<div expr64=\"expr64\"></div>',[{expressions:[{type:t.ATTRIBUTE,name:\"class\",evaluate:function(e){return[\"item \",e.transition].join(\"\")}}]},{type:n.IF,evaluate:function(e){return!e.hide},redundantAttribute:\"expr64\",selector:\"[expr64]\",template:e('<div expr65=\"expr65\"></div><div expr66=\"expr66\"><i expr67=\"expr67\" class=\"close icon\"></i><i expr68=\"expr68\"></i><div class=\"content\"><div expr69=\"expr69\" class=\"header\"></div><p expr70=\"expr70\"></p></div></div><div expr71=\"expr71\"></div>',[{expressions:[{type:t.ATTRIBUTE,name:\"class\",evaluate:function(e){return[\" \",e.position,\" floated\"].join(\"\")}}]},{type:n.IF,evaluate:function(e){return\"top\"==e.progress},redundantAttribute:\"expr65\",selector:\"[expr65]\",template:e('<div class=\"bar\"></div>',[{expressions:[{type:t.ATTRIBUTE,name:\"class\",evaluate:function(e){return[\"ui attached active progress \",e.className,\" top\"].join(\"\")}}]}])},{redundantAttribute:\"expr66\",selector:\"[expr66]\",expressions:[{type:t.ATTRIBUTE,name:\"class\",evaluate:function(e){return[\"ui \",e.icon?\"icon\":\"\",\" \",e.className,\" floating compact message\"].join(\"\")}}]},{redundantAttribute:\"expr67\",selector:\"[expr67]\",expressions:[{type:t.EVENT,name:\"onclick\",evaluate:function(e){return e.onClose}}]},{type:n.IF,evaluate:function(e){return e.icon},redundantAttribute:\"expr68\",selector:\"[expr68]\",template:e(null,[{expressions:[{type:t.ATTRIBUTE,name:\"class\",evaluate:function(e){return[e.icon,\" icon\"].join(\"\")}}]}])},{type:n.IF,evaluate:function(e){return e.title},redundantAttribute:\"expr69\",selector:\"[expr69]\",template:e(\" \",[{expressions:[{type:t.TEXT,childNodeIndex:0,evaluate:function(e){return[e.title].join(\"\")}}]}])},{type:n.EACH,getKey:null,condition:null,template:e(\" \",[{expressions:[{type:t.TEXT,childNodeIndex:0,evaluate:function(e){return e.message}}]}]),redundantAttribute:\"expr70\",selector:\"[expr70]\",itemName:\"message\",indexName:null,evaluate:function(e){return e.messages}},{type:n.IF,evaluate:function(e){return\"bottom\"==e.progress},redundantAttribute:\"expr71\",selector:\"[expr71]\",template:e('<div class=\"bar\"></div>',[{expressions:[{type:t.ATTRIBUTE,name:\"class\",evaluate:function(e){return[\"ui attached active progress \",e.className,\" bottom\"].join(\"\")}}]}])}])}])},name:\"su-toast-item\"};var Ne={css:'su-validation-error.ui.error.message,[is=\"su-validation-error\"].ui.error.message{ display: block !important; }',exports:{state:{errors:{}},onMounted:function(e,t){this.update()},onBeforeUpdate:function(e,t){t.errors=e.errors||{},t.blockMessage=Object.keys(t.errors).length>0&&!e.name}},template:function(e,t,n,r){return e('<div expr73=\"expr73\" class=\"ui basic pointing prompt label transition visible\"></div><ul expr75=\"expr75\" class=\"list\"></ul>',[{expressions:[{type:t.ATTRIBUTE,name:\"class\",evaluate:function(e){return e.state.blockMessage?\"ui error message\":\"\"}}]},{type:n.IF,evaluate:function(e){return e.state.errors[e.props.name]},redundantAttribute:\"expr73\",selector:\"[expr73]\",template:e('<div expr74=\"expr74\"></div>',[{type:n.EACH,getKey:null,condition:null,template:e(\" \",[{expressions:[{type:t.TEXT,childNodeIndex:0,evaluate:function(e){return e.message}}]}]),redundantAttribute:\"expr74\",selector:\"[expr74]\",itemName:\"message\",indexName:null,evaluate:function(e){return e.state.errors[e.props.name]}}])},{type:n.IF,evaluate:function(e){return e.state.blockMessage},redundantAttribute:\"expr75\",selector:\"[expr75]\",template:e('<template expr76=\"expr76\"></template>',[{type:n.EACH,getKey:null,condition:null,template:e('<li expr77=\"expr77\"></li>',[{type:n.EACH,getKey:null,condition:null,template:e(\" \",[{expressions:[{type:t.TEXT,childNodeIndex:0,evaluate:function(e){return e.message}}]}]),redundantAttribute:\"expr77\",selector:\"[expr77]\",itemName:\"message\",indexName:null,evaluate:function(e){return e.errors}}]),redundantAttribute:\"expr76\",selector:\"[expr76]\",itemName:\"errors\",indexName:null,evaluate:function(e){return Object.values(e.state.errors)}}])}])},name:\"su-validation-error\"},Be=\"undefined\"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||\"undefined\"!=typeof msCrypto&&\"function\"==typeof msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto),Re=new Uint8Array(16);function je(){if(!Be)throw new Error(\"crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported\");return Be(Re)}for(var Ce=[],Ue=0;Ue<256;++Ue)Ce[Ue]=(Ue+256).toString(16).substr(1);var Ve,Ye,Fe=function(e,t){var n=t||0,r=Ce;return[r[e[n++]],r[e[n++]],r[e[n++]],r[e[n++]],\"-\",r[e[n++]],r[e[n++]],\"-\",r[e[n++]],r[e[n++]],\"-\",r[e[n++]],r[e[n++]],\"-\",r[e[n++]],r[e[n++]],r[e[n++]],r[e[n++]],r[e[n++]],r[e[n++]]].join(\"\")},$e=0,Pe=0;var _e=function(e,t,n){var r=t&&n||0,i=t||[],a=(e=e||{}).node||Ve,o=void 0!==e.clockseq?e.clockseq:Ye;if(null==a||null==o){var s=e.random||(e.rng||je)();null==a&&(a=Ve=[1|s[0],s[1],s[2],s[3],s[4],s[5]]),null==o&&(o=Ye=16383&(s[6]<<8|s[7]))}var u=void 0!==e.msecs?e.msecs:(new Date).getTime(),l=void 0!==e.nsecs?e.nsecs:Pe+1,c=u-$e+(l-Pe)/1e4;if(c<0&&void 0===e.clockseq&&(o=o+1&16383),(c<0||u>$e)&&void 0===e.nsecs&&(l=0),l>=1e4)throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");$e=u,Pe=l,Ye=o;var p=(1e4*(268435455&(u+=122192928e5))+l)%4294967296;i[r++]=p>>>24&255,i[r++]=p>>>16&255,i[r++]=p>>>8&255,i[r++]=255&p;var d=u/4294967296*1e4&268435455;i[r++]=d>>>8&255,i[r++]=255&d,i[r++]=d>>>24&15|16,i[r++]=d>>>16&255,i[r++]=o>>>8|128,i[r++]=255&o;for(var f=0;f<6;++f)i[r+f]=a[f];return t||Fe(i)};r.register(\"su-accordion\",l),r.register(\"su-accordionset\",c),r.register(\"su-alert\",p),r.register(\"su-checkbox\",h),r.register(\"su-checkbox-group\",b),r.register(\"su-confirm\",y),r.register(\"su-datepicker\",N),r.register(\"su-dropdown\",z),r.register(\"su-select\",G),r.register(\"su-loading\",q),r.register(\"su-modal\",Z),r.register(\"su-pagination\",ee),r.register(\"su-popup\",ne),r.register(\"su-progress\",ae),r.register(\"su-radio-group\",ue),r.register(\"su-radio\",pe),r.register(\"su-rating\",he),r.register(\"su-tab-header\",ve),r.register(\"su-tab-title\",xe),r.register(\"su-tab\",ye),r.register(\"su-tabset\",we),r.register(\"su-table\",Ie),r.register(\"su-th\",De),r.register(\"su-toast\",Oe),r.register(\"su-toast-item\",Se),r.register(\"su-validation-error\",Ne);t.default=function(e){He.locale=e.locale,He.pattern=e.pattern,He.alert=e.alert,He.confirm=e.confirm};const He={},Xe=a()();r.install((function(e){e.suUuid=_e(),e.obs=Xe,e.defaultOptions=He,e.Q={Promise:s.a.Promise},e.dispatch=(t,n)=>{const r=`on${t.replace(/[- ](.)/g,(e,t)=>t.toUpperCase())}`,i=e.props[r];i&&i(n)},e.suAlert=t=>new Promise(n=>{e.obs.trigger(\"su-alert-show\",t),e.obs.on(\"su-alert-close\",()=>n())}),e.suConfirm=t=>s.a.Promise((n,r)=>{e.obs.trigger(\"su-confirm-show\",t),e.obs.on(\"su-confirm-close\",e=>e?n():r())}),e.suToast=t=>{e.obs.trigger(\"su-toast-show\",t)},e.suLoading=t=>{e.obs.trigger(\"su-loading\",t)}}))}])}));","const errorMessages = {\n    username: ['The username field is required.'],\n    password: ['The password field is required.']\n}\n\nexport default {\n  'css': `login,[is=\"login\"]{ max-width: 80%; height: 100vh; margin: 0 auto; text-align: center; display: flex; justify-content: center; align-items: center; } login h2,[is=\"login\"] h2{ font-size: 2rem; } login .ui.card,[is=\"login\"] .ui.card{ padding: 3rem; width: 50%; } @media(max-width: 375px) { login .ui.card,[is=\"login\"] .ui.card{ width: 100%; } }`,\n\n  'exports': {\n    onBeforeMount() {\n    },\n\n    errors: {\n        username: '',\n        password: ''\n    },\n\n    handleInputUsername(e) {\n        if(e.target.value.length > 0)\n            this.errors.username = \"\"\n        else\n            this.errors.username = errorMessages.username\n        this.update()\n    },\n\n    handleInputPassword(e) {\n        if(e.target.value.length > 0)\n            this.errors.password = \"\"\n        else\n            this.errors.password = errorMessages.password\n        this.update()\n    },\n\n    handleSubmit(e) {\n        e.preventDefault()\n\n        const inputUsername = e.target.username.value\n        const inputPassword = e.target.password.value\n\n        if(inputUsername.length > 0 && inputPassword.length > 0) {\n            this.service.login()\n        } else {\n            if(e.target.username.value.length === 0)\n                this.errors.username = errorMessages.username\n            if(e.target.password.value.length === 0)\n                this.errors.password = errorMessages.password\n            this.update()\n        }\n    }\n  },\n\n  'template': function(template, expressionTypes, bindingTypes, getComponent) {\n    return template(\n      '<div class=\"ui card\"><h2>login</h2><div class=\"ui form\"><form expr7=\"expr7\"><div expr8=\"expr8\"><div class=\"ui left icon input\"><i class=\"user icon\"></i><input expr9=\"expr9\" type=\"text\" name=\"username\" placeholder=\"Enter Username\"/></div><su-validation-error expr10=\"expr10\" name=\"username\"></su-validation-error></div><div expr11=\"expr11\"><div class=\"ui left icon input\"><i class=\"lock icon\"></i><input expr12=\"expr12\" type=\"password\" name=\"password\" placeholder=\"Enter Password\"/></div><su-validation-error expr13=\"expr13\" name=\"password\"></su-validation-error></div><div class=\"inline field\"><su-checkbox expr14=\"expr14\"></su-checkbox></div><div class=\"inline field\"><button class=\"ui teal button\">Login</button></div></form></div></div>',\n      [{\n        'redundantAttribute': 'expr7',\n        'selector': '[expr7]',\n\n        'expressions': [{\n          'type': expressionTypes.EVENT,\n          'name': 'onsubmit',\n\n          'evaluate': function(scope) {\n            return scope.handleSubmit;\n          }\n        }]\n      }, {\n        'redundantAttribute': 'expr8',\n        'selector': '[expr8]',\n\n        'expressions': [{\n          'type': expressionTypes.ATTRIBUTE,\n          'name': 'class',\n\n          'evaluate': function(scope) {\n            return ['field ', scope.errors.username && 'error'].join('');\n          }\n        }]\n      }, {\n        'redundantAttribute': 'expr9',\n        'selector': '[expr9]',\n\n        'expressions': [{\n          'type': expressionTypes.EVENT,\n          'name': 'oninput',\n\n          'evaluate': function(scope) {\n            return scope.handleInputUsername;\n          }\n        }]\n      }, {\n        'type': bindingTypes.TAG,\n        'getComponent': getComponent,\n\n        'evaluate': function(scope) {\n          return 'su-validation-error';\n        },\n\n        'slots': [],\n\n        'attributes': [{\n          'type': expressionTypes.ATTRIBUTE,\n          'name': 'errors',\n\n          'evaluate': function(scope) {\n            return scope.errors;\n          }\n        }],\n\n        'redundantAttribute': 'expr10',\n        'selector': '[expr10]'\n      }, {\n        'redundantAttribute': 'expr11',\n        'selector': '[expr11]',\n\n        'expressions': [{\n          'type': expressionTypes.ATTRIBUTE,\n          'name': 'class',\n\n          'evaluate': function(scope) {\n            return ['field ', scope.errors.password && 'error'].join('');\n          }\n        }]\n      }, {\n        'redundantAttribute': 'expr12',\n        'selector': '[expr12]',\n\n        'expressions': [{\n          'type': expressionTypes.EVENT,\n          'name': 'oninput',\n\n          'evaluate': function(scope) {\n            return scope.handleInputPassword;\n          }\n        }]\n      }, {\n        'type': bindingTypes.TAG,\n        'getComponent': getComponent,\n\n        'evaluate': function(scope) {\n          return 'su-validation-error';\n        },\n\n        'slots': [],\n\n        'attributes': [{\n          'type': expressionTypes.ATTRIBUTE,\n          'name': 'errors',\n\n          'evaluate': function(scope) {\n            return scope.errors;\n          }\n        }],\n\n        'redundantAttribute': 'expr13',\n        'selector': '[expr13]'\n      }, {\n        'type': bindingTypes.TAG,\n        'getComponent': getComponent,\n\n        'evaluate': function(scope) {\n          return 'su-checkbox';\n        },\n\n        'slots': [{\n          'id': 'default',\n          'html': 'Remember Me',\n          'bindings': []\n        }],\n\n        'attributes': [],\n        'redundantAttribute': 'expr14',\n        'selector': '[expr14]'\n      }]\n    );\n  },\n\n  'name': 'login'\n};","export default {\n  'css': `sidebar a.icon,[is=\"sidebar\"] a.icon{ color: #fff; } sidebar .ui.sidebar.menu,[is=\"sidebar\"] .ui.sidebar.menu{ width: 15%; transition: width .2s; } sidebar .sidebar.menu:hover,[is=\"sidebar\"] .sidebar.menu:hover{ width: 16%; } sidebar i.user.icon,[is=\"sidebar\"] i.user.icon{ font-size: 3rem; } sidebar .ui.menu .item.sidebar-head,[is=\"sidebar\"] .ui.menu .item.sidebar-head{ text-align: center; font-weight: 900; padding: 2rem 1rem; border-bottom: 1px solid #666; } sidebar .ui.menu .ui.list > item a,[is=\"sidebar\"] .ui.menu .ui.list > item a{ padding: 2rem .5rem; font-size: 1rem; display: block; } sidebar .ui.inverted.menu .item > a:hover,[is=\"sidebar\"] .ui.inverted.menu .item > a:hover{ color: #00b5ad; } sidebar .ui.inverted.menu .item.logout,[is=\"sidebar\"] .ui.inverted.menu .item.logout{ cursor: pointer; padding: 2rem; border-top: 1px solid #666; }`,\n\n  'exports': {\n    handleLogout() {\n        this.service.logout()\n    }\n  },\n\n  'template': function(template, expressionTypes, bindingTypes, getComponent) {\n    return template('<navigation expr0=\"expr0\"></navigation>', [{\n      'type': bindingTypes.TAG,\n      'getComponent': getComponent,\n\n      'evaluate': function(scope) {\n        return 'navigation';\n      },\n\n      'slots': [{\n        'id': 'default',\n        'html': '<div class=\"ui visible sidebar inverted vertical menu\"><div class=\"item sidebar-head\"><a class=\"ui logo icon image\" href=\"/\"><i class=\"user icon\"></i></a><a href=\"/\">\\n                    ADMIN\\n                </a></div><div class=\"item\"><div class=\"ui list\"><div class=\"item\"><a href=\"/dashboard\"><i class=\"home icon\"></i>\\n                            Dashboard\\n                        </a></div><div class=\"item\"><a href=\"/profile\"><i class=\"info circle icon\"></i>\\n                            Profile\\n                        </a></div><div class=\"item\"><a href=\"/members\"><i class=\"users icon\"></i>\\n                            Members\\n                        </a></div><div class=\"item\"><a href=\"/stats\"><i class=\"chart line icon\"></i>\\n                            Stats\\n                        </a></div></div></div><div class=\"item logout\"><a expr1=\"expr1\"><i class=\"sign-out icon\"></i>\\n                    Logout\\n                </a></div></div>',\n\n        'bindings': [{\n          'redundantAttribute': 'expr1',\n          'selector': '[expr1]',\n\n          'expressions': [{\n            'type': expressionTypes.EVENT,\n            'name': 'onclick',\n\n            'evaluate': function(scope) {\n              return scope.handleLogout;\n            }\n          }]\n        }]\n      }],\n\n      'attributes': [],\n      'redundantAttribute': 'expr0',\n      'selector': '[expr0]'\n    }]);\n  },\n\n  'name': 'sidebar'\n};","import { router } from '@riotjs/route'\n\nexport default {\n  'css': `app-header .ui.bock.header,[is=\"app-header\"] .ui.bock.header{ background: #1794a5; color: #fff; border: none; border-radius: unset; }`,\n\n  'exports': {\n    dropdownItems: [\n        {\n            label: 'Welcome',\n            value: null,\n            header: true,\n            default: true\n        },\n        {\n            label: 'Profile',\n            icon: 'user',\n            value: 1\n        },\n        {\n            label: 'Logout',\n            icon: 'sign-out',\n            value: 2\n        }\n    ],\n\n    handleChange(e) {\n        if(e.value === '/profile')\n            router.push(e.value)\n        else\n            this.service.logout()\n    }\n  },\n\n  'template': function(template, expressionTypes, bindingTypes, getComponent) {\n    return template(\n      '<div class=\"ui secondary pointing menu\"><h2 class=\"item\">\\n            MY CMS\\n        </h2><div class=\"right menu\"><su-dropdown expr17=\"expr17\"></su-dropdown></div></div>',\n      [{\n        'type': bindingTypes.TAG,\n        'getComponent': getComponent,\n\n        'evaluate': function(scope) {\n          return 'su-dropdown';\n        },\n\n        'slots': [],\n\n        'attributes': [{\n          'type': expressionTypes.ATTRIBUTE,\n          'name': 'items',\n\n          'evaluate': function(scope) {\n            return scope.dropdownItems;\n          }\n        }, {\n          'type': expressionTypes.EVENT,\n          'name': 'onchange',\n\n          'evaluate': function(scope) {\n            return scope.handleChange;\n          }\n        }],\n\n        'redundantAttribute': 'expr17',\n        'selector': '[expr17]'\n      }]\n    );\n  },\n\n  'name': 'app-header'\n};","export default {\n  'css': `app-footer .ui.vertical.footer.segment,[is=\"app-footer\"] .ui.vertical.footer.segment{ padding: 0; background: #1794a5; color: #fff; } app-footer .ui.center.aligned.container p,[is=\"app-footer\"] .ui.center.aligned.container p{ border-top: 1px solid #ccc; padding: 1.2rem 0; }`,\n  'exports': null,\n\n  'template': function(template, expressionTypes, bindingTypes, getComponent) {\n    return template(\n      '<div class=\"ui vertical footer segment\"><div class=\"ui center aligned container\"><p>©️ 2020 My CMS by @yamanaka</p></div></div>',\n      []\n    );\n  },\n\n  'name': 'app-footer'\n};","export default {\n  'css': `dashboard .ui.raised.segment,[is=\"dashboard\"] .ui.raised.segment{ border-left: 5px solid #008080; min-height: 128px; } dashboard h2.ui.label,[is=\"dashboard\"] h2.ui.label{ margin-bottom: 1rem; } dashboard h3,[is=\"dashboard\"] h3{ color: #008080; } dashboard li:not(:last-child),[is=\"dashboard\"] li:not(:last-child){ margin: 3px auto; } dashboard span.large,[is=\"dashboard\"] span.large{ font-size: 1.5rem; }`,\n  'exports': null,\n\n  'template': function(template, expressionTypes, bindingTypes, getComponent) {\n    return template(\n      '<h2 class=\"ui teal tag label\">Dashboard Page</h2><div class=\"ui two column stackable grid\"><div class=\"column\"><div class=\"ui raised segment\"><h3><i class=\"users icon\"></i>\\n                    MEMBERS\\n                </h3><div>\\n                    Total: <span class=\"large\">87</span> people\\n                </div></div></div><div class=\"column\"><div class=\"ui raised segment\"><h3><i class=\"envelope icon\"></i>\\n                    MAILS\\n                </h3><div><ul><li>recevied: <span class=\"large\">37</span></li><li>unread: <span class=\"large\">5</span></li></ul></div></div></div><div class=\"column\"><div class=\"ui raised segment\"><h3><i class=\"chart bar icon\"></i>\\n                    PROGRESS\\n                </h3><div><su-progress expr26=\"expr26\" class=\"indicating\" name=\"progress\" value=\"70\"></su-progress></div></div></div><div class=\"column\"><div class=\"ui raised segment\"><h3><i class=\"twitter icon\"></i>\\n                    SNS\\n                </h3><div><ul><li><i class=\"thumbs up outline icon\"></i><span class=\"large\">128</span></li><li><i class=\"retweet icon\"></i><span class=\"large\">45</span></li></ul></div></div></div></div>',\n      [{\n        'type': bindingTypes.TAG,\n        'getComponent': getComponent,\n\n        'evaluate': function(scope) {\n          return 'su-progress';\n        },\n\n        'slots': [{\n          'id': 'default',\n          'html': ' Completed',\n          'bindings': []\n        }],\n\n        'attributes': [],\n        'redundantAttribute': 'expr26',\n        'selector': '[expr26]'\n      }]\n    );\n  },\n\n  'name': 'dashboard'\n};","export default {\n  'css': `members .ui.sortable.table thead th,[is=\"members\"] .ui.sortable.table thead th,members .ui.sortable.table thead th.sorted,[is=\"members\"] .ui.sortable.table thead th.sorted{ background: #1794a5; color: #fff; } members .ui.sortable.table thead th:hover .ui.sortable.table thead th.sorted:hover,[is=\"members\"] .ui.sortable.table thead th:hover .ui.sortable.table thead th.sorted:hover{ background: #1cc88a; color: #fff; }`,\n\n  'exports': {\n    tableData: [\n        { name: 'John', age: 15, gender: 'Male' },\n        { name: 'Amber', age: 40, gender: 'Female' },\n        { name: 'Leslie', age: 25 },\n        { name: 'Michel', age: 37, gender: 'Male' },\n        { name: 'Nicholas', age: 29, gender: 'neutral' },\n        { name: 'Ben', gender: 'Male' }\n    ]\n  },\n\n  'template': function(template, expressionTypes, bindingTypes, getComponent) {\n    return template(\n      '<h2 class=\"ui teal tag label\">Members Page</h2><table expr27=\"expr27\" is=\"su-table\" class=\"ui sortable celled table\" default-sort-field=\"age\"></table><p>❇︎Click the header if you want to sort.</p>',\n      [{\n        'type': bindingTypes.TAG,\n        'getComponent': getComponent,\n\n        'evaluate': function(scope) {\n          return 'su-table';\n        },\n\n        'slots': [{\n          'id': 'default',\n          'html': '<thead><tr><th expr28=\"expr28\" is=\"su-th\" field=\"name\"></th><th expr29=\"expr29\" is=\"su-th\" field=\"age\"></th><th expr30=\"expr30\" is=\"su-th\" field=\"gender\"></th></tr></thead><tbody><tr expr31=\"expr31\"></tr></tbody>',\n\n          'bindings': [{\n            'type': bindingTypes.TAG,\n            'getComponent': getComponent,\n\n            'evaluate': function(scope) {\n              return 'su-th';\n            },\n\n            'slots': [{\n              'id': 'default',\n              'html': 'NAME',\n              'bindings': []\n            }],\n\n            'attributes': [],\n            'redundantAttribute': 'expr28',\n            'selector': '[expr28]'\n          }, {\n            'type': bindingTypes.TAG,\n            'getComponent': getComponent,\n\n            'evaluate': function(scope) {\n              return 'su-th';\n            },\n\n            'slots': [{\n              'id': 'default',\n              'html': 'AGE',\n              'bindings': []\n            }],\n\n            'attributes': [],\n            'redundantAttribute': 'expr29',\n            'selector': '[expr29]'\n          }, {\n            'type': bindingTypes.TAG,\n            'getComponent': getComponent,\n\n            'evaluate': function(scope) {\n              return 'su-th';\n            },\n\n            'slots': [{\n              'id': 'default',\n              'html': 'GENDER',\n              'bindings': []\n            }],\n\n            'attributes': [],\n            'redundantAttribute': 'expr30',\n            'selector': '[expr30]'\n          }, {\n            'type': bindingTypes.EACH,\n            'getKey': null,\n            'condition': null,\n\n            'template': template(\n              '<td expr32=\"expr32\"> </td><td expr33=\"expr33\"> </td><td expr34=\"expr34\"> </td>',\n              [{\n                'redundantAttribute': 'expr32',\n                'selector': '[expr32]',\n\n                'expressions': [{\n                  'type': expressionTypes.TEXT,\n                  'childNodeIndex': 0,\n\n                  'evaluate': function(scope) {\n                    return scope.item.name;\n                  }\n                }]\n              }, {\n                'redundantAttribute': 'expr33',\n                'selector': '[expr33]',\n\n                'expressions': [{\n                  'type': expressionTypes.TEXT,\n                  'childNodeIndex': 0,\n\n                  'evaluate': function(scope) {\n                    return scope.item.age;\n                  }\n                }]\n              }, {\n                'redundantAttribute': 'expr34',\n                'selector': '[expr34]',\n\n                'expressions': [{\n                  'type': expressionTypes.TEXT,\n                  'childNodeIndex': 0,\n\n                  'evaluate': function(scope) {\n                    return scope.item.gender;\n                  }\n                }]\n              }]\n            ),\n\n            'redundantAttribute': 'expr31',\n            'selector': '[expr31]',\n            'itemName': 'item',\n            'indexName': null,\n\n            'evaluate': function(scope) {\n              return scope.tableData;\n            }\n          }]\n        }],\n\n        'attributes': [{\n          'type': expressionTypes.ATTRIBUTE,\n          'name': 'data',\n\n          'evaluate': function(scope) {\n            return scope.tableData;\n          }\n        }, {\n          'type': expressionTypes.ATTRIBUTE,\n          'name': 'nulls-first',\n\n          'evaluate': function(scope) {\n            return true;\n          }\n        }],\n\n        'redundantAttribute': 'expr27',\n        'selector': '[expr27]'\n      }]\n    );\n  },\n\n  'name': 'members'\n};","export default {\n  'css': `profile .ui.card,[is=\"profile\"] .ui.card{ padding: 1rem; } profile .ui.violet.label,[is=\"profile\"] .ui.violet.label{ min-width: 120px; padding: .5rem .7rem; margin-right: 2rem; } profile .ui.divided.selection.list .item,[is=\"profile\"] .ui.divided.selection.list .item{ padding: 2rem 1rem; }`,\n  'exports': null,\n\n  'template': function(template, expressionTypes, bindingTypes, getComponent) {\n    return template(\n      '<h2 class=\"ui teal tag label\">Profile Page</h2><div class=\"ui segment\"><div class=\"ui divided selection list\"><div class=\"item\"><div class=\"ui violet horizontal label\"><i class=\"user icon\"></i>\\n                    User name\\n                </div>\\n                kkeeth\\n            </div><div class=\"item\"><div class=\"ui violet horizontal label\"><i class=\"address card icon\"></i>\\n                    Email\\n                </div>\\n                test@example.com\\n            </div><div class=\"item\"><div class=\"ui violet horizontal label\"><i class=\"twitter icon\"></i>\\n                    Twitter\\n                </div>\\n                @test_acount\\n            </div><div class=\"item\"><div class=\"ui violet horizontal label\"><i class=\"github icon\"></i>\\n                    Github\\n                </div>\\n                @test_github\\n            </div></div></div>',\n      []\n    );\n  },\n\n  'name': 'profile'\n};","export default {\n  'css': `stats .ui.grid,[is=\"stats\"] .ui.grid{ margin-top: 0; } stats .ui.segments > .segment,[is=\"stats\"] .ui.segments > .segment{ padding: 1.2rem 1rem; }`,\n\n  'exports': {\n    progressBars: [\n        { name: \"Team A\", value: 70 },\n        { name: \"Team B\", value: 30 },\n        { name: \"Team C\", value: 20 },\n        { name: \"Team D\", value: 60 },\n        { name: \"Team E\", value: 100 }\n    ],\n\n    ratings: {\n        total: 500,\n        max: 5,\n        scores: [\n            { rate: 5, score: 151 },\n            { rate: 4, score: 89 },\n            { rate: 3, score: 63 },\n            { rate: 2, score: 71 },\n            { rate: 1, score: 126 }\n        ]\n    }\n  },\n\n  'template': function(template, expressionTypes, bindingTypes, getComponent) {\n    return template(\n      '<h2 class=\"ui teal tag label\">Stats Page</h2><div class=\"ui two column stackable grid\"><div class=\"column\"><div class=\"ui raised segments\"><div expr2=\"expr2\" class=\"ui segment\"></div></div></div><div class=\"column\"><div class=\"ui raised segments\"><div expr5=\"expr5\" class=\"ui segment\"></div></div><div class=\"ui raised segments\"><div expr8=\"expr8\" class=\"ui segment\"></div></div></div></div>',\n      [{\n        'type': bindingTypes.EACH,\n        'getKey': null,\n        'condition': null,\n\n        'template': template(\n          '<p expr3=\"expr3\"> </p><div><su-progress expr4=\"expr4\" class=\"indicating\" name=\"progress\"></su-progress></div>',\n          [{\n            'redundantAttribute': 'expr3',\n            'selector': '[expr3]',\n\n            'expressions': [{\n              'type': expressionTypes.TEXT,\n              'childNodeIndex': 0,\n\n              'evaluate': function(scope) {\n                return scope.bar.name;\n              }\n            }]\n          }, {\n            'type': bindingTypes.TAG,\n            'getComponent': getComponent,\n\n            'evaluate': function(scope) {\n              return 'su-progress';\n            },\n\n            'slots': [{\n              'id': 'default',\n              'html': 'Completed ',\n              'bindings': []\n            }],\n\n            'attributes': [{\n              'type': expressionTypes.ATTRIBUTE,\n              'name': 'value',\n\n              'evaluate': function(scope) {\n                return scope.bar.value;\n              }\n            }],\n\n            'redundantAttribute': 'expr4',\n            'selector': '[expr4]'\n          }]\n        ),\n\n        'redundantAttribute': 'expr2',\n        'selector': '[expr2]',\n        'itemName': 'bar',\n        'indexName': null,\n\n        'evaluate': function(scope) {\n          return scope.progressBars;\n        }\n      }, {\n        'type': bindingTypes.EACH,\n        'getKey': null,\n        'condition': null,\n\n        'template': template(\n          '<div expr6=\"expr6\" class=\"ui horizontal large label\"> </div><su-rating expr7=\"expr7\" class=\"star\"></su-rating>',\n          [{\n            'redundantAttribute': 'expr6',\n            'selector': '[expr6]',\n\n            'expressions': [{\n              'type': expressionTypes.TEXT,\n              'childNodeIndex': 0,\n\n              'evaluate': function(scope) {\n                return [scope.rating.score, '/', scope.ratings.total, ':'].join('');\n              }\n            }]\n          }, {\n            'type': bindingTypes.TAG,\n            'getComponent': getComponent,\n\n            'evaluate': function(scope) {\n              return 'su-rating';\n            },\n\n            'slots': [],\n\n            'attributes': [{\n              'type': expressionTypes.ATTRIBUTE,\n              'name': 'value',\n\n              'evaluate': function(scope) {\n                return scope.rating.rate;\n              }\n            }, {\n              'type': expressionTypes.ATTRIBUTE,\n              'name': 'max',\n\n              'evaluate': function(scope) {\n                return scope.ratings.max;\n              }\n            }],\n\n            'redundantAttribute': 'expr7',\n            'selector': '[expr7]'\n          }]\n        ),\n\n        'redundantAttribute': 'expr5',\n        'selector': '[expr5]',\n        'itemName': 'rating',\n        'indexName': null,\n\n        'evaluate': function(scope) {\n          return scope.ratings.scores;\n        }\n      }, {\n        'type': bindingTypes.EACH,\n        'getKey': null,\n        'condition': null,\n\n        'template': template(\n          '<div expr9=\"expr9\" class=\"ui horizontal large label\"> </div><su-rating expr10=\"expr10\" class=\"heart\"></su-rating>',\n          [{\n            'redundantAttribute': 'expr9',\n            'selector': '[expr9]',\n\n            'expressions': [{\n              'type': expressionTypes.TEXT,\n              'childNodeIndex': 0,\n\n              'evaluate': function(scope) {\n                return [scope.rating.score, '/', scope.ratings.total, ':'].join('');\n              }\n            }]\n          }, {\n            'type': bindingTypes.TAG,\n            'getComponent': getComponent,\n\n            'evaluate': function(scope) {\n              return 'su-rating';\n            },\n\n            'slots': [],\n\n            'attributes': [{\n              'type': expressionTypes.ATTRIBUTE,\n              'name': 'value',\n\n              'evaluate': function(scope) {\n                return scope.rating.rate;\n              }\n            }, {\n              'type': expressionTypes.ATTRIBUTE,\n              'name': 'max',\n\n              'evaluate': function(scope) {\n                return scope.ratings.max;\n              }\n            }],\n\n            'redundantAttribute': 'expr10',\n            'selector': '[expr10]'\n          }]\n        ),\n\n        'redundantAttribute': 'expr8',\n        'selector': '[expr8]',\n        'itemName': 'rating',\n        'indexName': null,\n\n        'evaluate': function(scope) {\n          return scope.ratings.scores;\n        }\n      }]\n    );\n  },\n\n  'name': 'stats'\n};","import Dashboard from '../pages/dashboard.riot'\nimport Members from '../pages/members.riot'\nimport Profile from '../pages/profile.riot'\nimport Stats from '../pages/stats.riot'\n\nexport default {\n  'css': null,\n\n  'exports': {\n    components: {\n        Dashboard,\n        Members,\n        Profile,\n        Stats\n    }\n  },\n\n  'template': function(template, expressionTypes, bindingTypes, getComponent) {\n    return template(\n      '<route expr18=\"expr18\" path=\"/\"></route><route expr20=\"expr20\" path=\"/dashboard\"></route><route expr22=\"expr22\" path=\"/members\"></route><route expr24=\"expr24\" path=\"/profile\"></route><route expr26=\"expr26\" path=\"/stats\"></route>',\n      [{\n        'type': bindingTypes.TAG,\n        'getComponent': getComponent,\n\n        'evaluate': function(scope) {\n          return 'route';\n        },\n\n        'slots': [{\n          'id': 'default',\n          'html': '<dashboard expr19=\"expr19\"></dashboard>',\n\n          'bindings': [{\n            'type': bindingTypes.TAG,\n            'getComponent': getComponent,\n\n            'evaluate': function(scope) {\n              return 'dashboard';\n            },\n\n            'slots': [],\n            'attributes': [],\n            'redundantAttribute': 'expr19',\n            'selector': '[expr19]'\n          }]\n        }],\n\n        'attributes': [],\n        'redundantAttribute': 'expr18',\n        'selector': '[expr18]'\n      }, {\n        'type': bindingTypes.TAG,\n        'getComponent': getComponent,\n\n        'evaluate': function(scope) {\n          return 'route';\n        },\n\n        'slots': [{\n          'id': 'default',\n          'html': '<dashboard expr21=\"expr21\"></dashboard>',\n\n          'bindings': [{\n            'type': bindingTypes.TAG,\n            'getComponent': getComponent,\n\n            'evaluate': function(scope) {\n              return 'dashboard';\n            },\n\n            'slots': [],\n            'attributes': [],\n            'redundantAttribute': 'expr21',\n            'selector': '[expr21]'\n          }]\n        }],\n\n        'attributes': [],\n        'redundantAttribute': 'expr20',\n        'selector': '[expr20]'\n      }, {\n        'type': bindingTypes.TAG,\n        'getComponent': getComponent,\n\n        'evaluate': function(scope) {\n          return 'route';\n        },\n\n        'slots': [{\n          'id': 'default',\n          'html': '<members expr23=\"expr23\"></members>',\n\n          'bindings': [{\n            'type': bindingTypes.TAG,\n            'getComponent': getComponent,\n\n            'evaluate': function(scope) {\n              return 'members';\n            },\n\n            'slots': [],\n            'attributes': [],\n            'redundantAttribute': 'expr23',\n            'selector': '[expr23]'\n          }]\n        }],\n\n        'attributes': [],\n        'redundantAttribute': 'expr22',\n        'selector': '[expr22]'\n      }, {\n        'type': bindingTypes.TAG,\n        'getComponent': getComponent,\n\n        'evaluate': function(scope) {\n          return 'route';\n        },\n\n        'slots': [{\n          'id': 'default',\n          'html': '<profile expr25=\"expr25\"></profile>',\n\n          'bindings': [{\n            'type': bindingTypes.TAG,\n            'getComponent': getComponent,\n\n            'evaluate': function(scope) {\n              return 'profile';\n            },\n\n            'slots': [],\n            'attributes': [],\n            'redundantAttribute': 'expr25',\n            'selector': '[expr25]'\n          }]\n        }],\n\n        'attributes': [],\n        'redundantAttribute': 'expr24',\n        'selector': '[expr24]'\n      }, {\n        'type': bindingTypes.TAG,\n        'getComponent': getComponent,\n\n        'evaluate': function(scope) {\n          return 'route';\n        },\n\n        'slots': [{\n          'id': 'default',\n          'html': '<stats expr27=\"expr27\"></stats>',\n\n          'bindings': [{\n            'type': bindingTypes.TAG,\n            'getComponent': getComponent,\n\n            'evaluate': function(scope) {\n              return 'stats';\n            },\n\n            'slots': [],\n            'attributes': [],\n            'redundantAttribute': 'expr27',\n            'selector': '[expr27]'\n          }]\n        }],\n\n        'attributes': [],\n        'redundantAttribute': 'expr26',\n        'selector': '[expr26]'\n      }]\n    );\n  },\n\n  'name': 'app-route'\n};","import Login from './pages/login.riot'\nimport Sidebar from './components/sidebar.riot'\nimport AppHeader from './components/app-header.riot'\nimport AppFooter from './components/app-footer.riot'\nimport AppRoute from './components/app-route.riot'\n\nexport default {\n  'css': `app,[is=\"app\"]{ font-family: Futura; height: 100%; } app #wrapper,[is=\"app\"] #wrapper{ margin-left: 15%; min-height: 100%; display: flex; flex-direction: column; } app #container,[is=\"app\"] #container{ flex: 1; background: #eee; padding: 2rem; } app h2.ui.label,[is=\"app\"] h2.ui.label{ font-size: 1.5rem; }`,\n\n  'exports': {\n    components: {\n        Login,\n        Sidebar,\n        AppHeader,\n        AppFooter,\n        AppRoute\n    },\n\n    state: {\n        isLoggedIn: false\n    },\n\n    onBeforeMount(props, state) {\n    },\n\n    onMounted() {\n        this.query.select('isLoggedIn').subscribe(val => {\n            this.update({ isLoggedIn: val })\n        })\n    },\n\n    base: `${window.location.protocol}//${window.location.host}`\n  },\n\n  'template': function(template, expressionTypes, bindingTypes, getComponent) {\n    return template('<login expr0=\"expr0\"></login><div expr1=\"expr1\" id=\"wrapper\"></div>', [{\n      'type': bindingTypes.IF,\n\n      'evaluate': function(scope) {\n        return !scope.state.isLoggedIn;\n      },\n\n      'redundantAttribute': 'expr0',\n      'selector': '[expr0]',\n\n      'template': template(null, [{\n        'type': bindingTypes.TAG,\n        'getComponent': getComponent,\n\n        'evaluate': function(scope) {\n          return 'login';\n        },\n\n        'slots': [],\n        'attributes': []\n      }])\n    }, {\n      'type': bindingTypes.IF,\n\n      'evaluate': function(scope) {\n        return scope.state.isLoggedIn;\n      },\n\n      'redundantAttribute': 'expr1',\n      'selector': '[expr1]',\n\n      'template': template('<router expr2=\"expr2\"></router>', [{\n        'type': bindingTypes.TAG,\n        'getComponent': getComponent,\n\n        'evaluate': function(scope) {\n          return 'router';\n        },\n\n        'slots': [{\n          'id': 'default',\n          'html': '<sidebar expr3=\"expr3\"></sidebar><app-header expr4=\"expr4\"></app-header><div id=\"container\"><app-route expr5=\"expr5\"></app-route></div><app-footer expr6=\"expr6\"></app-footer>',\n\n          'bindings': [{\n            'type': bindingTypes.TAG,\n            'getComponent': getComponent,\n\n            'evaluate': function(scope) {\n              return 'sidebar';\n            },\n\n            'slots': [],\n            'attributes': [],\n            'redundantAttribute': 'expr3',\n            'selector': '[expr3]'\n          }, {\n            'type': bindingTypes.TAG,\n            'getComponent': getComponent,\n\n            'evaluate': function(scope) {\n              return 'app-header';\n            },\n\n            'slots': [],\n            'attributes': [],\n            'redundantAttribute': 'expr4',\n            'selector': '[expr4]'\n          }, {\n            'type': bindingTypes.TAG,\n            'getComponent': getComponent,\n\n            'evaluate': function(scope) {\n              return 'app-route';\n            },\n\n            'slots': [],\n            'attributes': [],\n            'redundantAttribute': 'expr5',\n            'selector': '[expr5]'\n          }, {\n            'type': bindingTypes.TAG,\n            'getComponent': getComponent,\n\n            'evaluate': function(scope) {\n              return 'app-footer';\n            },\n\n            'slots': [],\n            'attributes': [],\n            'redundantAttribute': 'expr6',\n            'selector': '[expr6]'\n          }]\n        }],\n\n        'attributes': [{\n          'type': expressionTypes.ATTRIBUTE,\n          'name': 'base',\n\n          'evaluate': function(scope) {\n            return scope.base;\n          }\n        }],\n\n        'redundantAttribute': 'expr2',\n        'selector': '[expr2]'\n      }])\n    }]);\n  },\n\n  'name': 'app'\n};","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","export function isFunction(x: any): x is Function {\n  return typeof x === 'function';\n}\n","let _enable_super_gross_mode_that_will_cause_bad_things = false;\n\n/**\n * The global configuration object for RxJS, used to configure things\n * like what Promise contructor should used to create Promises\n */\nexport const config = {\n  /**\n   * The promise constructor used by default for methods such as\n   * {@link toPromise} and {@link forEach}\n   */\n  Promise: undefined as PromiseConstructorLike,\n\n  /**\n   * If true, turns on synchronous error rethrowing, which is a deprecated behavior\n   * in v6 and higher. This behavior enables bad patterns like wrapping a subscribe\n   * call in a try/catch block. It also enables producer interference, a nasty bug\n   * where a multicast can be broken for all observers by a downstream consumer with\n   * an unhandled error. DO NOT USE THIS FLAG UNLESS IT'S NEEDED TO BY TIME\n   * FOR MIGRATION REASONS.\n   */\n  set useDeprecatedSynchronousErrorHandling(value: boolean) {\n    if (value) {\n      const error = new Error();\n      console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \\n' + error.stack);\n    } else if (_enable_super_gross_mode_that_will_cause_bad_things) {\n      console.log('RxJS: Back to a better error behavior. Thank you. <3');\n    }\n    _enable_super_gross_mode_that_will_cause_bad_things = value;\n  },\n\n  get useDeprecatedSynchronousErrorHandling() {\n    return _enable_super_gross_mode_that_will_cause_bad_things;\n  },\n};\n","/**\n * Throws an error on another job so that it's picked up by the runtime's\n * uncaught error handling mechanism.\n * @param err the error to throw\n */\nexport function hostReportError(err: any) {\n  setTimeout(() => { throw err; });\n}","import { Observer } from './types';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\n\nexport const empty: Observer<any> = {\n  closed: true,\n  next(value: any): void { /* noop */},\n  error(err: any): void {\n    if (config.useDeprecatedSynchronousErrorHandling) {\n      throw err;\n    } else {\n      hostReportError(err);\n    }\n  },\n  complete(): void { /*noop*/ }\n};\n","export const isArray = Array.isArray || (<T>(x: any): x is T[] => x && typeof x.length === 'number');\n","export function isObject(x: any): x is Object {\n  return x != null && typeof x === 'object';\n}\n","// typeof any so that it we don't have to cast when comparing a result to the error object\nexport const errorObject: any = { e: {} };","import { errorObject } from './errorObject';\n\nlet tryCatchTarget: Function;\n\nfunction tryCatcher(this: any): any {\n  try {\n    return tryCatchTarget.apply(this, arguments);\n  } catch (e) {\n    errorObject.e = e;\n    return errorObject;\n  }\n}\n\nexport function tryCatch<T extends Function>(fn: T): T {\n  tryCatchTarget = fn;\n  return <any>tryCatcher;\n}\n","export interface UnsubscriptionError extends Error {\n  readonly errors: any[];\n}\n\nexport interface UnsubscriptionErrorCtor {\n  new(errors: any[]): UnsubscriptionError;\n}\n\nfunction UnsubscriptionErrorImpl(this: any, errors: any[]) {\n  Error.call(this);\n  this.message = errors ?\n  `${errors.length} errors occurred during unsubscription:\n${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}` : '';\n  this.name = 'UnsubscriptionError';\n  this.errors = errors;\n  return this;\n}\n\nUnsubscriptionErrorImpl.prototype = Object.create(Error.prototype);\n\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport const UnsubscriptionError: UnsubscriptionErrorCtor = UnsubscriptionErrorImpl as any;","import { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { tryCatch } from './util/tryCatch';\nimport { errorObject } from './util/errorObject';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { SubscriptionLike, TeardownLogic } from './types';\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements SubscriptionLike {\n  /** @nocollapse */\n  public static EMPTY: Subscription = (function(empty: any) {\n    empty.closed = true;\n    return empty;\n  }(new Subscription()));\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   * @type {boolean}\n   */\n  public closed: boolean = false;\n\n  /** @internal */\n  protected _parent: Subscription = null;\n  /** @internal */\n  protected _parents: Subscription[] = null;\n  /** @internal */\n  private _subscriptions: SubscriptionLike[] = null;\n\n  /**\n   * @param {function(): void} [unsubscribe] A function describing how to\n   * perform the disposal of resources when the `unsubscribe` method is called.\n   */\n  constructor(unsubscribe?: () => void) {\n    if (unsubscribe) {\n      (<any> this)._unsubscribe = unsubscribe;\n    }\n  }\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let hasErrors = false;\n    let errors: any[];\n\n    if (this.closed) {\n      return;\n    }\n\n    let { _parent, _parents, _unsubscribe, _subscriptions } = (<any> this);\n\n    this.closed = true;\n    this._parent = null;\n    this._parents = null;\n    // null out _subscriptions first so any child subscriptions that attempt\n    // to remove themselves from this subscription will noop\n    this._subscriptions = null;\n\n    let index = -1;\n    let len = _parents ? _parents.length : 0;\n\n    // if this._parent is null, then so is this._parents, and we\n    // don't have to remove ourselves from any parent subscriptions.\n    while (_parent) {\n      _parent.remove(this);\n      // if this._parents is null or index >= len,\n      // then _parent is set to null, and the loop exits\n      _parent = ++index < len && _parents[index] || null;\n    }\n\n    if (isFunction(_unsubscribe)) {\n      let trial = tryCatch(_unsubscribe).call(this);\n      if (trial === errorObject) {\n        hasErrors = true;\n        errors = errors || (\n          errorObject.e instanceof UnsubscriptionError ?\n            flattenUnsubscriptionErrors(errorObject.e.errors) : [errorObject.e]\n        );\n      }\n    }\n\n    if (isArray(_subscriptions)) {\n\n      index = -1;\n      len = _subscriptions.length;\n\n      while (++index < len) {\n        const sub = _subscriptions[index];\n        if (isObject(sub)) {\n          let trial = tryCatch(sub.unsubscribe).call(sub);\n          if (trial === errorObject) {\n            hasErrors = true;\n            errors = errors || [];\n            let err = errorObject.e;\n            if (err instanceof UnsubscriptionError) {\n              errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n            } else {\n              errors.push(err);\n            }\n          }\n        }\n      }\n    }\n\n    if (hasErrors) {\n      throw new UnsubscriptionError(errors);\n    }\n  }\n\n  /**\n   * Adds a tear down to be called during the unsubscribe() of this\n   * Subscription.\n   *\n   * If the tear down being added is a subscription that is already\n   * unsubscribed, is the same reference `add` is being called on, or is\n   * `Subscription.EMPTY`, it will not be added.\n   *\n   * If this subscription is already in an `closed` state, the passed\n   * tear down logic will be executed immediately.\n   *\n   * @param {TeardownLogic} teardown The additional logic to execute on\n   * teardown.\n   * @return {Subscription} Returns the Subscription used or created to be\n   * added to the inner subscriptions list. This Subscription can be used with\n   * `remove()` to remove the passed teardown logic from the inner subscriptions\n   * list.\n   */\n  add(teardown: TeardownLogic): Subscription {\n    if (!teardown || (teardown === Subscription.EMPTY)) {\n      return Subscription.EMPTY;\n    }\n\n    if (teardown === this) {\n      return this;\n    }\n\n    let subscription = (<Subscription> teardown);\n\n    switch (typeof teardown) {\n      case 'function':\n        subscription = new Subscription(<(() => void) > teardown);\n      case 'object':\n        if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n          return subscription;\n        } else if (this.closed) {\n          subscription.unsubscribe();\n          return subscription;\n        } else if (typeof subscription._addParent !== 'function' /* quack quack */) {\n          const tmp = subscription;\n          subscription = new Subscription();\n          subscription._subscriptions = [tmp];\n        }\n        break;\n      default:\n        throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n    }\n\n    const subscriptions = this._subscriptions || (this._subscriptions = []);\n\n    subscriptions.push(subscription);\n    subscription._addParent(this);\n\n    return subscription;\n  }\n\n  /**\n   * Removes a Subscription from the internal list of subscriptions that will\n   * unsubscribe during the unsubscribe process of this Subscription.\n   * @param {Subscription} subscription The subscription to remove.\n   * @return {void}\n   */\n  remove(subscription: Subscription): void {\n    const subscriptions = this._subscriptions;\n    if (subscriptions) {\n      const subscriptionIndex = subscriptions.indexOf(subscription);\n      if (subscriptionIndex !== -1) {\n        subscriptions.splice(subscriptionIndex, 1);\n      }\n    }\n  }\n\n  /** @internal */\n  private _addParent(parent: Subscription) {\n    let { _parent, _parents } = this;\n    if (!_parent || _parent === parent) {\n      // If we don't have a parent, or the new parent is the same as the\n      // current parent, then set this._parent to the new parent.\n      this._parent = parent;\n    } else if (!_parents) {\n      // If there's already one parent, but not multiple, allocate an Array to\n      // store the rest of the parent Subscriptions.\n      this._parents = [parent];\n    } else if (_parents.indexOf(parent) === -1) {\n      // Only add the new parent to the _parents list if it's not already there.\n      _parents.push(parent);\n    }\n  }\n}\n\nfunction flattenUnsubscriptionErrors(errors: any[]) {\n return errors.reduce((errs, err) => errs.concat((err instanceof UnsubscriptionError) ? err.errors : err), []);\n}\n","/** @deprecated do not use, this is no longer checked by RxJS internals */\nexport const rxSubscriber =\n  typeof Symbol === 'function'\n    ? Symbol('rxSubscriber')\n    : '@@rxSubscriber_' + Math.random();\n\n/**\n * @deprecated use rxSubscriber instead\n */\nexport const $$rxSubscriber = rxSubscriber;\n","import { isFunction } from './util/isFunction';\nimport { empty as emptyObserver } from './Observer';\nimport { Observer, PartialObserver, TeardownLogic } from './types';\nimport { Subscription } from './Subscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n\n  [rxSubscriberSymbol]() { return this; }\n\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   * @nocollapse\n   */\n  static create<T>(next?: (x?: T) => void,\n                   error?: (e?: any) => void,\n                   complete?: () => void): Subscriber<T> {\n    const subscriber = new Subscriber(next, error, complete);\n    subscriber.syncErrorThrowable = false;\n    return subscriber;\n  }\n\n  /** @internal */ syncErrorValue: any = null;\n  /** @internal */ syncErrorThrown: boolean = false;\n  /** @internal */ syncErrorThrowable: boolean = false;\n\n  protected isStopped: boolean = false;\n  protected destination: PartialObserver<any> | Subscriber<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  private _parentSubscription: Subscription | null = null;\n\n  /**\n   * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n   * defined Observer or a `next` callback function.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   */\n  constructor(destinationOrNext?: PartialObserver<any> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    switch (arguments.length) {\n      case 0:\n        this.destination = emptyObserver;\n        break;\n      case 1:\n        if (!destinationOrNext) {\n          this.destination = emptyObserver;\n          break;\n        }\n        if (typeof destinationOrNext === 'object') {\n          if (destinationOrNext instanceof Subscriber) {\n            this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;\n            this.destination = destinationOrNext;\n            destinationOrNext.add(this);\n          } else {\n            this.syncErrorThrowable = true;\n            this.destination = new SafeSubscriber<T>(this, <PartialObserver<any>> destinationOrNext);\n          }\n          break;\n        }\n      default:\n        this.syncErrorThrowable = true;\n        this.destination = new SafeSubscriber<T>(this, <((value: T) => void)> destinationOrNext, error, complete);\n        break;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (!this.isStopped) {\n      this._next(value);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached `Error`. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (this.closed) {\n      return;\n    }\n    this.isStopped = true;\n    super.unsubscribe();\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.destination.error(err);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.destination.complete();\n    this.unsubscribe();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribeAndRecycle(): Subscriber<T> {\n    const { _parent, _parents } = this;\n    this._parent = null;\n    this._parents = null;\n    this.unsubscribe();\n    this.closed = false;\n    this.isStopped = false;\n    this._parent = _parent;\n    this._parents = _parents;\n    this._parentSubscription = null;\n    return this;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SafeSubscriber<T> extends Subscriber<T> {\n\n  private _context: any;\n\n  constructor(private _parentSubscriber: Subscriber<T>,\n              observerOrNext?: PartialObserver<T> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    let next: ((value: T) => void);\n    let context: any = this;\n\n    if (isFunction(observerOrNext)) {\n      next = (<((value: T) => void)> observerOrNext);\n    } else if (observerOrNext) {\n      next = (<PartialObserver<T>> observerOrNext).next;\n      error = (<PartialObserver<T>> observerOrNext).error;\n      complete = (<PartialObserver<T>> observerOrNext).complete;\n      if (observerOrNext !== emptyObserver) {\n        context = Object.create(observerOrNext);\n        if (isFunction(context.unsubscribe)) {\n          this.add(<() => void> context.unsubscribe.bind(context));\n        }\n        context.unsubscribe = this.unsubscribe.bind(this);\n      }\n    }\n\n    this._context = context;\n    this._next = next;\n    this._error = error;\n    this._complete = complete;\n  }\n\n  next(value?: T): void {\n    if (!this.isStopped && this._next) {\n      const { _parentSubscriber } = this;\n      if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n        this.__tryOrUnsub(this._next, value);\n      } else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  error(err?: any): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      const { useDeprecatedSynchronousErrorHandling } = config;\n      if (this._error) {\n        if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(this._error, err);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, this._error, err);\n          this.unsubscribe();\n        }\n      } else if (!_parentSubscriber.syncErrorThrowable) {\n        this.unsubscribe();\n        if (useDeprecatedSynchronousErrorHandling) {\n          throw err;\n        }\n        hostReportError(err);\n      } else {\n        if (useDeprecatedSynchronousErrorHandling) {\n          _parentSubscriber.syncErrorValue = err;\n          _parentSubscriber.syncErrorThrown = true;\n        } else {\n          hostReportError(err);\n        }\n        this.unsubscribe();\n      }\n    }\n  }\n\n  complete(): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      if (this._complete) {\n        const wrappedComplete = () => this._complete.call(this._context);\n\n        if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(wrappedComplete);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n          this.unsubscribe();\n        }\n      } else {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  private __tryOrUnsub(fn: Function, value?: any): void {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      this.unsubscribe();\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        throw err;\n      } else {\n        hostReportError(err);\n      }\n    }\n  }\n\n  private __tryOrSetError(parent: Subscriber<T>, fn: Function, value?: any): boolean {\n    if (!config.useDeprecatedSynchronousErrorHandling) {\n      throw new Error('bad call');\n    }\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        parent.syncErrorValue = err;\n        parent.syncErrorThrown = true;\n        return true;\n      } else {\n        hostReportError(err);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /** @internal This is an internal implementation detail, do not use. */\n  _unsubscribe(): void {\n    const { _parentSubscriber } = this;\n    this._context = null;\n    this._parentSubscriber = null;\n    _parentSubscriber.unsubscribe();\n  }\n}\n","import { Subscriber } from '../Subscriber';\nimport { Subject } from '../Subject';\n\n/**\n * Determines whether the ErrorObserver is closed or stopped or has a\n * destination that is closed or stopped - in which case errors will\n * need to be reported via a different mechanism.\n * @param observer the observer\n */\nexport function canReportError(observer: Subscriber<any> | Subject<any>): boolean {\n  while (observer) {\n    const { closed, destination, isStopped } = observer as any;\n    if (closed || isStopped) {\n      return false;\n    } else if (destination && destination instanceof Subscriber) {\n      observer = destination;\n    } else {\n      observer = null;\n    }\n  }\n  return true;\n}\n","import { Subscriber } from '../Subscriber';\nimport { rxSubscriber as rxSubscriberSymbol } from '../symbol/rxSubscriber';\nimport { empty as emptyObserver } from '../Observer';\nimport { PartialObserver } from '../types';\n\nexport function toSubscriber<T>(\n  nextOrObserver?: PartialObserver<T> | ((value: T) => void),\n  error?: (error: any) => void,\n  complete?: () => void): Subscriber<T> {\n\n  if (nextOrObserver) {\n    if (nextOrObserver instanceof Subscriber) {\n      return (<Subscriber<T>> nextOrObserver);\n    }\n\n    if (nextOrObserver[rxSubscriberSymbol]) {\n      return nextOrObserver[rxSubscriberSymbol]();\n    }\n  }\n\n  if (!nextOrObserver && !error && !complete) {\n    return new Subscriber(emptyObserver);\n  }\n\n  return new Subscriber(nextOrObserver, error, complete);\n}\n","import { root } from '../util/root';\n\n/** Symbol.observable addition */\n/* Note: This will add Symbol.observable globally for all TypeScript users,\n  however, we are no longer polyfilling Symbol.observable */\ndeclare global {\n  interface SymbolConstructor {\n    readonly observable: symbol;\n  }\n}\n\n/** Symbol.observable or a string \"@@observable\". Used for interop */\nexport const observable = typeof Symbol === 'function' && Symbol.observable || '@@observable';\n","/* tslint:disable:no-empty */\nexport function noop() { }\n","import { noop } from './noop';\nimport { UnaryFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function pipe<T>(): UnaryFunction<T, T>;\nexport function pipe<T, A>(fn1: UnaryFunction<T, A>): UnaryFunction<T, A>;\nexport function pipe<T, A, B>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>): UnaryFunction<T, B>;\nexport function pipe<T, A, B, C>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>): UnaryFunction<T, C>;\nexport function pipe<T, A, B, C, D>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>): UnaryFunction<T, D>;\nexport function pipe<T, A, B, C, D, E>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>): UnaryFunction<T, E>;\nexport function pipe<T, A, B, C, D, E, F>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>): UnaryFunction<T, F>;\nexport function pipe<T, A, B, C, D, E, F, G>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>): UnaryFunction<T, G>;\nexport function pipe<T, A, B, C, D, E, F, G, H>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>): UnaryFunction<T, H>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>, fn9: UnaryFunction<H, I>): UnaryFunction<T, I>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>, fn9: UnaryFunction<H, I>, ...fns: UnaryFunction<any, any>[]): UnaryFunction<T, {}>;\n/* tslint:enable:max-line-length */\n\nexport function pipe(...fns: Array<UnaryFunction<any, any>>): UnaryFunction<any, any> {\n  return pipeFromArray(fns);\n}\n\n/** @internal */\nexport function pipeFromArray<T, R>(fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  if (!fns) {\n    return noop as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input as any);\n  };\n}\n","import { Operator } from './Operator';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { TeardownLogic, OperatorFunction, PartialObserver, Subscribable } from './types';\nimport { canReportError } from './util/canReportError';\nimport { toSubscriber } from './util/toSubscriber';\nimport { iif } from './observable/iif';\nimport { throwError } from './observable/throwError';\nimport { observable as Symbol_observable } from '../internal/symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n\n  /** Internal implementation detail, do not use directly. */\n  public _isScalar: boolean = false;\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  source: Observable<any>;\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  operator: Operator<any, T>;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new cold Observable by calling the Observable constructor\n   * @static true\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new cold observable\n   * @nocollapse\n   */\n  static create: Function = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  }\n\n  /**\n   * Creates a new Observable, with this Observable as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param {Operator} operator the operator defining the operation to take on the observable\n   * @return {Observable} a new observable with the Operator applied\n   */\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  subscribe(observer?: PartialObserver<T>): Subscription;\n  subscribe(next?: (value: T) => void, error?: (error: any) => void, complete?: () => void): Subscription;\n  /**\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n   *\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n   *\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n   * might be for example a function that you passed to Observable's constructor, but most of the time it is\n   * a library implementation, which defines what will be emitted by an Observable, and when it be will emitted. This means\n   * that calling `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n   * the thought.\n   *\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n   * of the following ways.\n   *\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n   * do anything, you can simply omit it. Note however, if the `error` method is not provided, all errors will\n   * be left uncaught.\n   *\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n   * This means you can provide three functions as arguments to `subscribe`, where the first function is equivalent\n   * of a `next` method, the second of an `error` method and the third of a `complete` method. Just as in case of Observer,\n   * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n   * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n   *\n   * Whichever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n   * This object allows you to call `unsubscribe` on it, which in turn will stop the work that an Observable does and will clean\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n   *\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\n   * by default emits all its values synchronously. Always check documentation for how given Observable\n   * will behave when subscribed and if its default behavior can be modified with a `scheduler`.\n   *\n   * ## Example\n   * ### Subscribe with an Observer\n   * ```javascript\n   * const sumObserver = {\n   *   sum: 0,\n   *   next(value) {\n   *     console.log('Adding: ' + value);\n   *     this.sum = this.sum + value;\n   *   },\n   *   error() { // We actually could just remove this method,\n   *   },        // since we do not really care about errors right now.\n   *   complete() {\n   *     console.log('Sum equals: ' + this.sum);\n   *   }\n   * };\n   *\n   * Rx.Observable.of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n   * .subscribe(sumObserver);\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   * ```\n   *\n   * ### Subscribe with functions\n   * ```javascript\n   * let sum = 0;\n   *\n   * Rx.Observable.of(1, 2, 3)\n   * .subscribe(\n   *   function(value) {\n   *     console.log('Adding: ' + value);\n   *     sum = sum + value;\n   *   },\n   *   undefined,\n   *   function() {\n   *     console.log('Sum equals: ' + sum);\n   *   }\n   * );\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   * ```\n   *\n   * ### Cancel a subscription\n   * ```javascript\n   * const subscription = Rx.Observable.interval(1000).subscribe(\n   *   num => console.log(num),\n   *   undefined,\n   *   () => console.log('completed!') // Will not be called, even\n   * );                                // when cancelling subscription\n   *\n   *\n   * setTimeout(() => {\n   *   subscription.unsubscribe();\n   *   console.log('unsubscribed!');\n   * }, 2500);\n   *\n   * // Logs:\n   * // 0 after 1s\n   * // 1 after 2s\n   * // \"unsubscribed!\" after 2.5s\n   * ```\n   *\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n   *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n   *  Observable.\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n   *  the error will be thrown as unhandled.\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n   * @return {ISubscription} a subscription reference to the registered handlers\n   * @method subscribe\n   */\n  subscribe(observerOrNext?: PartialObserver<T> | ((value: T) => void),\n            error?: (error: any) => void,\n            complete?: () => void): Subscription {\n\n    const { operator } = this;\n    const sink = toSubscriber(observerOrNext, error, complete);\n\n    if (operator) {\n      operator.call(sink, this.source);\n    } else {\n      sink.add(\n        this.source || (config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable) ?\n        this._subscribe(sink) :\n        this._trySubscribe(sink)\n      );\n    }\n\n    if (config.useDeprecatedSynchronousErrorHandling) {\n      if (sink.syncErrorThrowable) {\n        sink.syncErrorThrowable = false;\n        if (sink.syncErrorThrown) {\n          throw sink.syncErrorValue;\n        }\n      }\n    }\n\n    return sink;\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        sink.syncErrorThrown = true;\n        sink.syncErrorValue = err;\n      }\n      if (canReportError(sink)) {\n        sink.error(err);\n      } else {\n        console.warn(err);\n      }\n    }\n  }\n\n  /**\n   * @method forEach\n   * @param {Function} next a handler for each value emitted by the observable\n   * @param {PromiseConstructor} [promiseCtor] a constructor function used to instantiate the Promise\n   * @return {Promise} a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void, promiseCtor?: PromiseConstructorLike): Promise<void> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor<void>((resolve, reject) => {\n      // Must be declared in a separate statement to avoid a RefernceError when\n      // accessing subscription below in the closure due to Temporal Dead Zone.\n      let subscription: Subscription;\n      subscription = this.subscribe((value) => {\n        try {\n          next(value);\n        } catch (err) {\n          reject(err);\n          if (subscription) {\n            subscription.unsubscribe();\n          }\n        }\n      }, reject, resolve);\n    }) as Promise<void>;\n  }\n\n  /** @internal This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    const { source } = this;\n    return source && source.subscribe(subscriber);\n  }\n\n  // `if` and `throw` are special snow flakes, the compiler sees them as reserved words. Deprecated in\n  // favor of iif and throwError functions.\n  /**\n   * @nocollapse\n   * @deprecated In favor of iif creation function: import { iif } from 'rxjs';\n   */\n  static if: typeof iif;\n  /**\n   * @nocollapse\n   * @deprecated In favor of throwError creation function: import { throwError } from 'rxjs';\n   */\n  static throw: typeof throwError;\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [Symbol_observable]() {\n    return this;\n  }\n\n  /* tslint:disable:max-line-length */\n  pipe(): Observable<T>;\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>;\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>;\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>;\n  pipe<A, B, C, D>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>): Observable<D>;\n  pipe<A, B, C, D, E>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>): Observable<E>;\n  pipe<A, B, C, D, E, F>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>): Observable<F>;\n  pipe<A, B, C, D, E, F, G>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>): Observable<G>;\n  pipe<A, B, C, D, E, F, G, H>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>): Observable<H>;\n  pipe<A, B, C, D, E, F, G, H, I>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>, op9: OperatorFunction<H, I>): Observable<I>;\n  pipe<A, B, C, D, E, F, G, H, I>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>, op9: OperatorFunction<H, I>, ...operations: OperatorFunction<any, any>[]): Observable<{}>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Used to stitch together functional operators into a chain.\n   * @method pipe\n   * @return {Observable} the Observable result of all of the operators having\n   * been called in the order they were passed in.\n   *\n   * ### Example\n   * ```javascript\n   * import { map, filter, scan } from 'rxjs/operators';\n   *\n   * Rx.Observable.interval(1000)\n   *   .pipe(\n   *     filter(x => x % 2 === 0),\n   *     map(x => x + x),\n   *     scan((acc, x) => acc + x)\n   *   )\n   *   .subscribe(x => console.log(x))\n   * ```\n   */\n  pipe(...operations: OperatorFunction<any, any>[]): Observable<any> {\n    if (operations.length === 0) {\n      return this as any;\n    }\n\n    return pipeFromArray(operations)(this);\n  }\n\n  /* tslint:disable:max-line-length */\n  toPromise<T>(this: Observable<T>): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: typeof Promise): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: PromiseConstructorLike): Promise<T>;\n  /* tslint:enable:max-line-length */\n\n  toPromise(promiseCtor?: PromiseConstructorLike): Promise<T> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor((resolve, reject) => {\n      let value: any;\n      this.subscribe((x: T) => value = x, (err: any) => reject(err), () => resolve(value));\n    }) as Promise<T>;\n  }\n}\n\n/**\n * Decides between a passed promise constructor from consuming code,\n * A default configured promise constructor, and the native promise\n * constructor and returns it. If nothing can be found, it will throw\n * an error.\n * @param promiseCtor The optional promise constructor to passed by consuming code\n */\nfunction getPromiseCtor(promiseCtor: PromiseConstructorLike | undefined) {\n  if (!promiseCtor) {\n    promiseCtor = config.Promise || Promise;\n  }\n\n  if (!promiseCtor) {\n    throw new Error('no Promise impl found');\n  }\n\n  return promiseCtor;\n}\n","export interface ObjectUnsubscribedError extends Error {\n}\n\nexport interface ObjectUnsubscribedErrorCtor {\n  new(): ObjectUnsubscribedError;\n}\n\nfunction ObjectUnsubscribedErrorImpl(this: any) {\n  Error.call(this);\n  this.message = 'object unsubscribed';\n  this.name = 'ObjectUnsubscribedError';\n  return this;\n}\n\nObjectUnsubscribedErrorImpl.prototype = Object.create(Error.prototype);\n\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport const ObjectUnsubscribedError: ObjectUnsubscribedErrorCtor = ObjectUnsubscribedErrorImpl as any;","import { Subject } from './Subject';\nimport { Observer } from './types';\nimport { Subscription } from './Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SubjectSubscription<T> extends Subscription {\n  closed: boolean = false;\n\n  constructor(public subject: Subject<T>, public subscriber: Observer<T>) {\n    super();\n  }\n\n  unsubscribe() {\n    if (this.closed) {\n      return;\n    }\n\n    this.closed = true;\n\n    const subject = this.subject;\n    const observers = subject.observers;\n\n    this.subject = null;\n\n    if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n      return;\n    }\n\n    const subscriberIndex = observers.indexOf(this.subscriber);\n\n    if (subscriberIndex !== -1) {\n      observers.splice(subscriberIndex, 1);\n    }\n  }\n}\n","import { Operator } from './Operator';\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { Observer, SubscriptionLike, TeardownLogic } from './types';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\n\n/**\n * @class SubjectSubscriber<T>\n */\nexport class SubjectSubscriber<T> extends Subscriber<T> {\n  constructor(protected destination: Subject<T>) {\n    super(destination);\n  }\n}\n\n/**\n * A Subject is a special type of Observable that allows values to be\n * multicasted to many Observables. Subjects are like EventEmitters.\n *\n * Every Subject is an Observable and an Observer. You can subscribe to a\n * Subject, and you can call next to feed values as well as error and complete.\n *\n * @class Subject<T>\n */\nexport class Subject<T> extends Observable<T> implements SubscriptionLike {\n\n  [rxSubscriberSymbol]() {\n    return new SubjectSubscriber(this);\n  }\n\n  observers: Observer<T>[] = [];\n\n  closed = false;\n\n  isStopped = false;\n\n  hasError = false;\n\n  thrownError: any = null;\n\n  constructor() {\n    super();\n  }\n\n  /**@nocollapse */\n  static create: Function = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {\n    return new AnonymousSubject<T>(destination, source);\n  }\n\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const subject = new AnonymousSubject(this, this);\n    subject.operator = <any>operator;\n    return <any>subject;\n  }\n\n  next(value?: T) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    if (!this.isStopped) {\n      const { observers } = this;\n      const len = observers.length;\n      const copy = observers.slice();\n      for (let i = 0; i < len; i++) {\n        copy[i].next(value);\n      }\n    }\n  }\n\n  error(err: any) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.hasError = true;\n    this.thrownError = err;\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].error(err);\n    }\n    this.observers.length = 0;\n  }\n\n  complete() {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].complete();\n    }\n    this.observers.length = 0;\n  }\n\n  unsubscribe() {\n    this.isStopped = true;\n    this.closed = true;\n    this.observers = null;\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _trySubscribe(subscriber: Subscriber<T>): TeardownLogic {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return super._trySubscribe(subscriber);\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else if (this.hasError) {\n      subscriber.error(this.thrownError);\n      return Subscription.EMPTY;\n    } else if (this.isStopped) {\n      subscriber.complete();\n      return Subscription.EMPTY;\n    } else {\n      this.observers.push(subscriber);\n      return new SubjectSubscription(this, subscriber);\n    }\n  }\n\n  /**\n   * Creates a new Observable with this Subject as the source. You can do this\n   * to create customize Observer-side logic of the Subject and conceal it from\n   * code that uses the Observable.\n   * @return {Observable} Observable that the Subject casts to\n   */\n  asObservable(): Observable<T> {\n    const observable = new Observable<T>();\n    (<any>observable).source = this;\n    return observable;\n  }\n}\n\n/**\n * @class AnonymousSubject<T>\n */\nexport class AnonymousSubject<T> extends Subject<T> {\n  constructor(protected destination?: Observer<T>, source?: Observable<T>) {\n    super();\n    this.source = source;\n  }\n\n  next(value: T) {\n    const { destination } = this;\n    if (destination && destination.next) {\n      destination.next(value);\n    }\n  }\n\n  error(err: any) {\n    const { destination } = this;\n    if (destination && destination.error) {\n      this.destination.error(err);\n    }\n  }\n\n  complete() {\n    const { destination } = this;\n    if (destination && destination.complete) {\n      this.destination.complete();\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    const { source } = this;\n    if (source) {\n      return this.source.subscribe(subscriber);\n    } else {\n      return Subscription.EMPTY;\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { Observable } from '../Observable';\n\nexport function refCount<T>(): MonoTypeOperatorFunction<T> {\n  return function refCountOperatorFunction(source: ConnectableObservable<T>): Observable<T> {\n    return source.lift(new RefCountOperator(source));\n  } as MonoTypeOperatorFunction<T>;\n}\n\nclass RefCountOperator<T> implements Operator<T, T> {\n  constructor(private connectable: ConnectableObservable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n\n    const { connectable } = this;\n    (<any> connectable)._refCount++;\n\n    const refCounter = new RefCountSubscriber(subscriber, connectable);\n    const subscription = source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      (<any> refCounter).connection = connectable.connect();\n    }\n\n    return subscription;\n  }\n}\n\nclass RefCountSubscriber<T> extends Subscriber<T> {\n\n  private connection: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n\n  protected _unsubscribe() {\n\n    const { connectable } = this;\n    if (!connectable) {\n      this.connection = null;\n      return;\n    }\n\n    this.connectable = null;\n    const refCount = (<any> connectable)._refCount;\n    if (refCount <= 0) {\n      this.connection = null;\n      return;\n    }\n\n    (<any> connectable)._refCount = refCount - 1;\n    if (refCount > 1) {\n      this.connection = null;\n      return;\n    }\n\n    ///\n    // Compare the local RefCountSubscriber's connection Subscription to the\n    // connection Subscription on the shared ConnectableObservable. In cases\n    // where the ConnectableObservable source synchronously emits values, and\n    // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n    // execution continues to here before the RefCountOperator has a chance to\n    // supply the RefCountSubscriber with the shared connection Subscription.\n    // For example:\n    // ```\n    // range(0, 10).pipe(\n    //   publish(),\n    //   refCount(),\n    //   take(5),\n    // )\n    // .subscribe();\n    // ```\n    // In order to account for this case, RefCountSubscriber should only dispose\n    // the ConnectableObservable's shared connection Subscription if the\n    // connection Subscription exists, *and* either:\n    //   a. RefCountSubscriber doesn't have a reference to the shared connection\n    //      Subscription yet, or,\n    //   b. RefCountSubscriber's connection Subscription reference is identical\n    //      to the shared connection Subscription\n    ///\n    const { connection } = this;\n    const sharedConnection = (<any> connectable)._connection;\n    this.connection = null;\n\n    if (sharedConnection && (!connection || sharedConnection === connection)) {\n      sharedConnection.unsubscribe();\n    }\n  }\n}\n","import { Subject, SubjectSubscriber } from '../Subject';\nimport { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { TeardownLogic } from '../types';\nimport { refCount as higherOrderRefCount } from '../operators/refCount';\n\n/**\n * @class ConnectableObservable<T>\n */\nexport class ConnectableObservable<T> extends Observable<T> {\n\n  protected _subject: Subject<T>;\n  protected _refCount: number = 0;\n  protected _connection: Subscription;\n  /** @internal */\n  _isComplete = false;\n\n  constructor(public source: Observable<T>,\n              protected subjectFactory: () => Subject<T>) {\n    super();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>) {\n    return this.getSubject().subscribe(subscriber);\n  }\n\n  protected getSubject(): Subject<T> {\n    const subject = this._subject;\n    if (!subject || subject.isStopped) {\n      this._subject = this.subjectFactory();\n    }\n    return this._subject;\n  }\n\n  connect(): Subscription {\n    let connection = this._connection;\n    if (!connection) {\n      this._isComplete = false;\n      connection = this._connection = new Subscription();\n      connection.add(this.source\n        .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n      if (connection.closed) {\n        this._connection = null;\n        connection = Subscription.EMPTY;\n      } else {\n        this._connection = connection;\n      }\n    }\n    return connection;\n  }\n\n  refCount(): Observable<T> {\n    return higherOrderRefCount()(this) as Observable<T>;\n  }\n}\n\nconst connectableProto = <any>ConnectableObservable.prototype;\n\nexport const connectableObservableDescriptor: PropertyDescriptorMap = {\n  operator: { value: null },\n  _refCount: { value: 0, writable: true },\n  _subject: { value: null, writable: true },\n  _connection: { value: null, writable: true },\n  _subscribe: { value: connectableProto._subscribe },\n  _isComplete: { value: connectableProto._isComplete, writable: true },\n  getSubject: { value: connectableProto.getSubject },\n  connect: { value: connectableProto.connect },\n  refCount: { value: connectableProto.refCount }\n};\n\nclass ConnectableSubscriber<T> extends SubjectSubscriber<T> {\n  constructor(destination: Subject<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n  protected _error(err: any): void {\n    this._unsubscribe();\n    super._error(err);\n  }\n  protected _complete(): void {\n    this.connectable._isComplete = true;\n    this._unsubscribe();\n    super._complete();\n  }\n  protected _unsubscribe() {\n    const connectable = <any>this.connectable;\n    if (connectable) {\n      this.connectable = null;\n      const connection = connectable._connection;\n      connectable._refCount = 0;\n      connectable._subject = null;\n      connectable._connection = null;\n      if (connection) {\n        connection.unsubscribe();\n      }\n    }\n  }\n}\n\nclass RefCountOperator<T> implements Operator<T, T> {\n  constructor(private connectable: ConnectableObservable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n\n    const { connectable } = this;\n    (<any> connectable)._refCount++;\n\n    const refCounter = new RefCountSubscriber(subscriber, connectable);\n    const subscription = source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      (<any> refCounter).connection = connectable.connect();\n    }\n\n    return subscription;\n  }\n}\n\nclass RefCountSubscriber<T> extends Subscriber<T> {\n\n  private connection: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n\n  protected _unsubscribe() {\n\n    const { connectable } = this;\n    if (!connectable) {\n      this.connection = null;\n      return;\n    }\n\n    this.connectable = null;\n    const refCount = (<any> connectable)._refCount;\n    if (refCount <= 0) {\n      this.connection = null;\n      return;\n    }\n\n    (<any> connectable)._refCount = refCount - 1;\n    if (refCount > 1) {\n      this.connection = null;\n      return;\n    }\n\n    ///\n    // Compare the local RefCountSubscriber's connection Subscription to the\n    // connection Subscription on the shared ConnectableObservable. In cases\n    // where the ConnectableObservable source synchronously emits values, and\n    // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n    // execution continues to here before the RefCountOperator has a chance to\n    // supply the RefCountSubscriber with the shared connection Subscription.\n    // For example:\n    // ```\n    // range(0, 10).pipe(\n    //   publish(),\n    //   refCount(),\n    //   take(5),\n    // ).subscribe();\n    // ```\n    // In order to account for this case, RefCountSubscriber should only dispose\n    // the ConnectableObservable's shared connection Subscription if the\n    // connection Subscription exists, *and* either:\n    //   a. RefCountSubscriber doesn't have a reference to the shared connection\n    //      Subscription yet, or,\n    //   b. RefCountSubscriber's connection Subscription reference is identical\n    //      to the shared connection Subscription\n    ///\n    const { connection } = this;\n    const sharedConnection = (<any> connectable)._connection;\n    this.connection = null;\n\n    if (sharedConnection && (!connection || sharedConnection === connection)) {\n      sharedConnection.unsubscribe();\n    }\n  }\n}\n","import { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subject } from '../Subject';\nimport { OperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function groupBy<T, K>(keySelector: (value: T) => K): OperatorFunction<T, GroupedObservable<K, T>>;\nexport function groupBy<T, K>(keySelector: (value: T) => K, elementSelector: void, durationSelector: (grouped: GroupedObservable<K, T>) => Observable<any>): OperatorFunction<T, GroupedObservable<K, T>>;\nexport function groupBy<T, K, R>(keySelector: (value: T) => K, elementSelector?: (value: T) => R, durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>): OperatorFunction<T, GroupedObservable<K, R>>;\nexport function groupBy<T, K, R>(keySelector: (value: T) => K, elementSelector?: (value: T) => R, durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>, subjectSelector?: () => Subject<R>): OperatorFunction<T, GroupedObservable<K, R>>;\n/* tslint:enable:max-line-length */\n\n/**\n * Groups the items emitted by an Observable according to a specified criterion,\n * and emits these grouped items as `GroupedObservables`, one\n * {@link GroupedObservable} per group.\n *\n * ![](groupBy.png)\n *\n * When the Observable emits an item, a key is computed for this item with the keySelector function.\n *\n * If a {@link GroupedObservable} for this key exists, this {@link GroupedObservable} emits. Elsewhere, a new\n * {@link GroupedObservable} for this key is created and emits.\n *\n * A {@link GroupedObservable} represents values belonging to the same group represented by a common key. The common\n * key is available as the key field of a {@link GroupedObservable} instance.\n *\n * The elements emitted by {@link GroupedObservable}s are by default the items emitted by the Observable, or elements\n * returned by the elementSelector function.\n *\n * ## Examples\n * ### Group objects by id and return as array\n * ```javascript\n * import { mergeMap, groupBy } from 'rxjs/operators';\n * import { of } from 'rxjs/observable/of';\n *\n * interface Obj {\n *    id: number,\n *    name: string,\n * }\n *\n * of<Obj>(\n *   {id: 1, name: 'javascript'},\n *   {id: 2, name: 'parcel'},\n *   {id: 2, name: 'webpack'},\n *   {id: 1, name: 'typescript'},\n *   {id: 3, name: 'tslint'}\n * ).pipe(\n *   groupBy(p => p.id),\n *   mergeMap((group$) => group$.pipe(reduce((acc, cur) => [...acc, cur], []))),\n * )\n * .subscribe(p => console.log(p));\n *\n * // displays:\n * // [ { id: 1, name: 'javascript'},\n * //   { id: 1, name: 'typescript'} ]\n * //\n * // [ { id: 2, name: 'parcel'},\n * //   { id: 2, name: 'webpack'} ]\n * //\n * // [ { id: 3, name: 'tslint'} ]\n * ```\n *\n * ### Pivot data on the id field\n * ```javascript\n * import { mergeMap, groupBy, map } from 'rxjs/operators';\n * import { of } from 'rxjs/observable/of';\n *\n * of<Obj>(\n *   {id: 1, name: 'javascript'},\n *   {id: 2, name: 'parcel'},\n *   {id: 2, name: 'webpack'},\n *   {id: 1, name: 'typescript'}\n *   {id: 3, name: 'tslint'}\n * ).pipe(\n *   groupBy(p => p.id, p => p.name),\n *   mergeMap( (group$) => group$.pipe(reduce((acc, cur) => [...acc, cur], [\"\" + group$.key]))),\n *   map(arr => ({'id': parseInt(arr[0]), 'values': arr.slice(1)})),\n * )\n * .subscribe(p => console.log(p));\n *\n * // displays:\n * // { id: 1, values: [ 'javascript', 'typescript' ] }\n * // { id: 2, values: [ 'parcel', 'webpack' ] }\n * // { id: 3, values: [ 'tslint' ] }\n * ```\n *\n * @param {function(value: T): K} keySelector A function that extracts the key\n * for each item.\n * @param {function(value: T): R} [elementSelector] A function that extracts the\n * return element for each item.\n * @param {function(grouped: GroupedObservable<K,R>): Observable<any>} [durationSelector]\n * A function that returns an Observable to determine how long each group should\n * exist.\n * @return {Observable<GroupedObservable<K,R>>} An Observable that emits\n * GroupedObservables, each of which corresponds to a unique key value and each\n * of which emits those items from the source Observable that share that key\n * value.\n * @method groupBy\n * @owner Observable\n */\nexport function groupBy<T, K, R>(keySelector: (value: T) => K,\n                                 elementSelector?: ((value: T) => R) | void,\n                                 durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n                                 subjectSelector?: () => Subject<R>): OperatorFunction<T, GroupedObservable<K, R>> {\n  return (source: Observable<T>) =>\n    source.lift(new GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector));\n}\n\nexport interface RefCountSubscription {\n  count: number;\n  unsubscribe: () => void;\n  closed: boolean;\n  attemptedToUnsubscribe: boolean;\n}\n\nclass GroupByOperator<T, K, R> implements Operator<T, GroupedObservable<K, R>> {\n  constructor(private keySelector: (value: T) => K,\n              private elementSelector?: ((value: T) => R) | void,\n              private durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n              private subjectSelector?: () => Subject<R>) {\n  }\n\n  call(subscriber: Subscriber<GroupedObservable<K, R>>, source: any): any {\n    return source.subscribe(new GroupBySubscriber(\n      subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass GroupBySubscriber<T, K, R> extends Subscriber<T> implements RefCountSubscription {\n  private groups: Map<K, Subject<T | R>> = null;\n  public attemptedToUnsubscribe: boolean = false;\n  public count: number = 0;\n\n  constructor(destination: Subscriber<GroupedObservable<K, R>>,\n              private keySelector: (value: T) => K,\n              private elementSelector?: ((value: T) => R) | void,\n              private durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n              private subjectSelector?: () => Subject<R>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    let key: K;\n    try {\n      key = this.keySelector(value);\n    } catch (err) {\n      this.error(err);\n      return;\n    }\n\n    this._group(value, key);\n  }\n\n  private _group(value: T, key: K) {\n    let groups = this.groups;\n\n    if (!groups) {\n      groups = this.groups = new Map<K, Subject<T | R>>();\n    }\n\n    let group = groups.get(key);\n\n    let element: R;\n    if (this.elementSelector) {\n      try {\n        element = this.elementSelector(value);\n      } catch (err) {\n        this.error(err);\n      }\n    } else {\n      element = <any>value;\n    }\n\n    if (!group) {\n      group = (this.subjectSelector ? this.subjectSelector() : new Subject<R>()) as Subject<T | R>;\n      groups.set(key, group);\n      const groupedObservable = new GroupedObservable(key, group, this);\n      this.destination.next(groupedObservable);\n      if (this.durationSelector) {\n        let duration: any;\n        try {\n          duration = this.durationSelector(new GroupedObservable<K, R>(key, <Subject<R>>group));\n        } catch (err) {\n          this.error(err);\n          return;\n        }\n        this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));\n      }\n    }\n\n    if (!group.closed) {\n      group.next(element);\n    }\n  }\n\n  protected _error(err: any): void {\n    const groups = this.groups;\n    if (groups) {\n      groups.forEach((group, key) => {\n        group.error(err);\n      });\n\n      groups.clear();\n    }\n    this.destination.error(err);\n  }\n\n  protected _complete(): void {\n    const groups = this.groups;\n    if (groups) {\n      groups.forEach((group, key) => {\n        group.complete();\n      });\n\n      groups.clear();\n    }\n    this.destination.complete();\n  }\n\n  removeGroup(key: K): void {\n    this.groups.delete(key);\n  }\n\n  unsubscribe() {\n    if (!this.closed) {\n      this.attemptedToUnsubscribe = true;\n      if (this.count === 0) {\n        super.unsubscribe();\n      }\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass GroupDurationSubscriber<K, T> extends Subscriber<T> {\n  constructor(private key: K,\n              private group: Subject<T>,\n              private parent: GroupBySubscriber<any, K, T | any>) {\n    super(group);\n  }\n\n  protected _next(value: T): void {\n    this.complete();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    const { parent, key } = this;\n    this.key = this.parent = null;\n    if (parent) {\n      parent.removeGroup(key);\n    }\n  }\n}\n\n/**\n * An Observable representing values belonging to the same group represented by\n * a common key. The values emitted by a GroupedObservable come from the source\n * Observable. The common key is available as the field `key` on a\n * GroupedObservable instance.\n *\n * @class GroupedObservable<K, T>\n */\nexport class GroupedObservable<K, T> extends Observable<T> {\n  /** @deprecated Do not construct this type. Internal use only */\n  constructor(public key: K,\n              private groupSubject: Subject<T>,\n              private refCountSubscription?: RefCountSubscription) {\n    super();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>) {\n    const subscription = new Subscription();\n    const { refCountSubscription, groupSubject } = this;\n    if (refCountSubscription && !refCountSubscription.closed) {\n      subscription.add(new InnerRefCountSubscription(refCountSubscription));\n    }\n    subscription.add(groupSubject.subscribe(subscriber));\n    return subscription;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass InnerRefCountSubscription extends Subscription {\n  constructor(private parent: RefCountSubscription) {\n    super();\n    parent.count++;\n  }\n\n  unsubscribe() {\n    const parent = this.parent;\n    if (!parent.closed && !this.closed) {\n      super.unsubscribe();\n      parent.count -= 1;\n      if (parent.count === 0 && parent.attemptedToUnsubscribe) {\n        parent.unsubscribe();\n      }\n    }\n  }\n}\n","import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { SubscriptionLike } from './types';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\n\n/**\n * A variant of Subject that requires an initial value and emits its current\n * value whenever it is subscribed to.\n *\n * @class BehaviorSubject<T>\n */\nexport class BehaviorSubject<T> extends Subject<T> {\n\n  constructor(private _value: T) {\n    super();\n  }\n\n  get value(): T {\n    return this.getValue();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    const subscription = super._subscribe(subscriber);\n    if (subscription && !(<SubscriptionLike>subscription).closed) {\n      subscriber.next(this._value);\n    }\n    return subscription;\n  }\n\n  getValue(): T {\n    if (this.hasError) {\n      throw this.thrownError;\n    } else if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return this._value;\n    }\n  }\n\n  next(value: T): void {\n    super.next(this._value = value);\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { Subscription } from '../Subscription';\nimport { SchedulerAction } from '../types';\n\n/**\n * A unit of work to be executed in a `scheduler`. An action is typically\n * created from within a {@link SchedulerLike} and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nexport class Action<T> extends Subscription {\n  constructor(scheduler: Scheduler, work: (this: SchedulerAction<T>, state?: T) => void) {\n    super();\n  }\n  /**\n   * Schedules this action on its parent {@link SchedulerLike} for execution. May be passed\n   * some context object, `state`. May happen at some point in the future,\n   * according to the `delay` parameter, if specified.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler.\n   * @return {void}\n   */\n  public schedule(state?: T, delay: number = 0): Subscription {\n    return this;\n  }\n}\n","import { Action } from './Action';\nimport { SchedulerAction } from '../types';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AsyncAction<T> extends Action<T> {\n\n  public id: any;\n  public state: T;\n  public delay: number;\n  protected pending: boolean = false;\n\n  constructor(protected scheduler: AsyncScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n\n    if (this.closed) {\n      return this;\n    }\n\n    // Always replace the current state with the new state.\n    this.state = state;\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n\n    //\n    // Important implementation note:\n    //\n    // Actions only execute once by default, unless rescheduled from within the\n    // scheduled callback. This allows us to implement single and repeat\n    // actions via the same code path, without adding API surface area, as well\n    // as mimic traditional recursion but across asynchronous boundaries.\n    //\n    // However, JS runtimes and timers distinguish between intervals achieved by\n    // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n    // serial `setTimeout` calls can be individually delayed, which delays\n    // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n    // guarantee the interval callback will be invoked more precisely to the\n    // interval period, regardless of load.\n    //\n    // Therefore, we use `setInterval` to schedule single and repeat actions.\n    // If the action reschedules itself with the same delay, the interval is not\n    // canceled. If the action doesn't reschedule, or reschedules with a\n    // different delay, the interval will be canceled after scheduled callback\n    // execution.\n    //\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, delay);\n    }\n\n    // Set the pending flag indicating that this action has been scheduled, or\n    // has recursively rescheduled itself.\n    this.pending = true;\n\n    this.delay = delay;\n    // If this action has already an async Id, don't request a new one.\n    this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n\n    return this;\n  }\n\n  protected requestAsyncId(scheduler: AsyncScheduler, id?: any, delay: number = 0): any {\n    return setInterval(scheduler.flush.bind(scheduler, this), delay);\n  }\n\n  protected recycleAsyncId(scheduler: AsyncScheduler, id: any, delay: number = 0): any {\n    // If this action is rescheduled with the same delay time, don't clear the interval id.\n    if (delay !== null && this.delay === delay && this.pending === false) {\n      return id;\n    }\n    // Otherwise, if the action's delay time is different from the current delay,\n    // or the action has been rescheduled before it's executed, clear the interval id\n    clearInterval(id);\n  }\n\n  /**\n   * Immediately executes this action and the `work` it contains.\n   * @return {any}\n   */\n  public execute(state: T, delay: number): any {\n\n    if (this.closed) {\n      return new Error('executing a cancelled action');\n    }\n\n    this.pending = false;\n    const error = this._execute(state, delay);\n    if (error) {\n      return error;\n    } else if (this.pending === false && this.id != null) {\n      // Dequeue if the action didn't reschedule itself. Don't call\n      // unsubscribe(), because the action could reschedule later.\n      // For example:\n      // ```\n      // scheduler.schedule(function doWork(counter) {\n      //   /* ... I'm a busy worker bee ... */\n      //   var originalAction = this;\n      //   /* wait 100ms before rescheduling the action */\n      //   setTimeout(function () {\n      //     originalAction.schedule(counter + 1);\n      //   }, 100);\n      // }, 1000);\n      // ```\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n    }\n  }\n\n  protected _execute(state: T, delay: number): any {\n    let errored: boolean = false;\n    let errorValue: any = undefined;\n    try {\n      this.work(state);\n    } catch (e) {\n      errored = true;\n      errorValue = !!e && e || new Error(e);\n    }\n    if (errored) {\n      this.unsubscribe();\n      return errorValue;\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n    const actions = scheduler.actions;\n    const index = actions.indexOf(this);\n\n    this.work  = null;\n    this.state = null;\n    this.pending = false;\n    this.scheduler = null;\n\n    if (index !== -1) {\n      actions.splice(index, 1);\n    }\n\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, null);\n    }\n\n    this.delay = null;\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { QueueScheduler } from './QueueScheduler';\nimport { SchedulerAction } from '../types';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class QueueAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: QueueScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (delay > 0) {\n      return super.schedule(state, delay);\n    }\n    this.delay = delay;\n    this.state = state;\n    this.scheduler.flush(this);\n    return this;\n  }\n\n  public execute(state: T, delay: number): any {\n    return (delay > 0 || this.closed) ?\n      super.execute(state, delay) :\n      this._execute(state, delay) ;\n  }\n\n  protected requestAsyncId(scheduler: QueueScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Otherwise flush the scheduler starting with this action.\n    return scheduler.flush(this);\n  }\n}\n","import { Action } from './scheduler/Action';\nimport { Subscription } from './Subscription';\nimport { SchedulerLike, SchedulerAction } from './types';\n\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an `Action`.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n * @deprecated Scheduler is an internal implementation detail of RxJS, and\n * should not be used directly. Rather, create your own class and implement\n * {@link SchedulerLike}\n */\nexport class Scheduler implements SchedulerLike {\n\n  /**\n   * Note: the extra arrow function wrapper is to make testing by overriding\n   * Date.now easier.\n   * @nocollapse\n   */\n  public static now: () => number = () => Date.now();\n\n  constructor(private SchedulerAction: typeof Action,\n              now: () => number = Scheduler.now) {\n    this.now = now;\n  }\n\n  /**\n   * A getter method that returns a number representing the current time\n   * (at the time this function was called) according to the scheduler's own\n   * internal clock.\n   * @return {number} A number that represents the current time. May or may not\n   * have a relation to wall-clock time. May or may not refer to a time unit\n   * (e.g. milliseconds).\n   */\n  public now: () => number;\n\n  /**\n   * Schedules a function, `work`, for execution. May happen at some point in\n   * the future, according to the `delay` parameter, if specified. May be passed\n   * some context object, `state`, which will be passed to the `work` function.\n   *\n   * The given arguments will be processed an stored as an Action object in a\n   * queue of actions.\n   *\n   * @param {function(state: ?T): ?Subscription} work A function representing a\n   * task, or some unit of work to be executed by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler itself.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @return {Subscription} A subscription in order to be able to unsubscribe\n   * the scheduled work.\n   */\n  public schedule<T>(work: (this: SchedulerAction<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    return new this.SchedulerAction<T>(this, work).schedule(state, delay);\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { Action } from './Action';\nimport { AsyncAction } from './AsyncAction';\nimport { SchedulerAction } from '../types';\nimport { Subscription } from '../Subscription';\n\nexport class AsyncScheduler extends Scheduler {\n  public static delegate?: Scheduler;\n  public actions: Array<AsyncAction<any>> = [];\n  /**\n   * A flag to indicate whether the Scheduler is currently executing a batch of\n   * queued actions.\n   * @type {boolean}\n   * @deprecated internal use only\n   */\n  public active: boolean = false;\n  /**\n   * An internal ID used to track the latest asynchronous task such as those\n   * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n   * others.\n   * @type {any}\n   * @deprecated internal use only\n   */\n  public scheduled: any = undefined;\n\n  constructor(SchedulerAction: typeof Action,\n              now: () => number = Scheduler.now) {\n    super(SchedulerAction, () => {\n      if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n        return AsyncScheduler.delegate.now();\n      } else {\n        return now();\n      }\n    });\n  }\n\n  public schedule<T>(work: (this: SchedulerAction<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n      return AsyncScheduler.delegate.schedule(work, delay, state);\n    } else {\n      return super.schedule(work, delay, state);\n    }\n  }\n\n  public flush(action: AsyncAction<any>): void {\n\n    const {actions} = this;\n\n    if (this.active) {\n      actions.push(action);\n      return;\n    }\n\n    let error: any;\n    this.active = true;\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (action = actions.shift()); // exhaust the scheduler queue\n\n    this.active = false;\n\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { AsyncScheduler } from './AsyncScheduler';\n\nexport class QueueScheduler extends AsyncScheduler {\n}\n","import { QueueAction } from './QueueAction';\nimport { QueueScheduler } from './QueueScheduler';\n\n/**\n *\n * Queue Scheduler\n *\n * <span class=\"informal\">Put every next task on a queue, instead of executing it immediately</span>\n *\n * `queue` scheduler, when used with delay, behaves the same as {@link asyncScheduler} scheduler.\n *\n * When used without delay, it schedules given task synchronously - executes it right when\n * it is scheduled. However when called recursively, that is when inside the scheduled task,\n * another task is scheduled with queue scheduler, instead of executing immediately as well,\n * that task will be put on a queue and wait for current one to finish.\n *\n * This means that when you execute task with `queue` scheduler, you are sure it will end\n * before any other task scheduled with that scheduler will start.\n *\n * ## Examples\n * Schedule recursively first, then do something\n * ```javascript\n * Rx.Scheduler.queue.schedule(() => {\n *   Rx.Scheduler.queue.schedule(() => console.log('second')); // will not happen now, but will be put on a queue\n *\n *   console.log('first');\n * });\n *\n * // Logs:\n * // \"first\"\n * // \"second\"\n * ```\n *\n * Reschedule itself recursively\n * ```javascript\n * Rx.Scheduler.queue.schedule(function(state) {\n *   if (state !== 0) {\n *     console.log('before', state);\n *     this.schedule(state - 1); // `this` references currently executing Action,\n *                               // which we reschedule with new state\n *     console.log('after', state);\n *   }\n * }, 0, 3);\n *\n * // In scheduler that runs recursively, you would expect:\n * // \"before\", 3\n * // \"before\", 2\n * // \"before\", 1\n * // \"after\", 1\n * // \"after\", 2\n * // \"after\", 3\n *\n * // But with queue it logs:\n * // \"before\", 3\n * // \"after\", 3\n * // \"before\", 2\n * // \"after\", 2\n * // \"before\", 1\n * // \"after\", 1\n * ```\n *\n * @static true\n * @name queue\n * @owner Scheduler\n */\n\nexport const queue = new QueueScheduler(QueueAction);\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\n\n/**\n * The same Observable instance returned by any call to {@link empty} without a\n * `scheduler`. It is preferrable to use this over `empty()`.\n */\nexport const EMPTY = new Observable<never>(subscriber => subscriber.complete());\n\n/**\n * Creates an Observable that emits no items to the Observer and immediately\n * emits a complete notification.\n *\n * <span class=\"informal\">Just emits 'complete', and nothing else.\n * </span>\n *\n * ![](empty.png)\n *\n * This static operator is useful for creating a simple Observable that only\n * emits the complete notification. It can be used for composing with other\n * Observables, such as in a {@link mergeMap}.\n *\n * ## Examples\n * ### Emit the number 7, then complete\n * ```javascript\n * const result = empty().pipe(startWith(7));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * ### Map and flatten only odd numbers to the sequence 'a', 'b', 'c'\n * ```javascript\n * const interval$ = interval(1000);\n * result = interval$.pipe(\n *   mergeMap(x => x % 2 === 1 ? of('a', 'b', 'c') : empty()),\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following to the console:\n * // x is equal to the count on the interval eg(0,1,2,3,...)\n * // x will occur every 1000ms\n * // if x % 2 is equal to 1 print abc\n * // if x % 2 is not equal to 1 nothing will be output\n * ```\n *\n * @see {@link Observable}\n * @see {@link never}\n * @see {@link of}\n * @see {@link throwError}\n *\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} to use for scheduling\n * the emission of the complete notification.\n * @return {Observable} An \"empty\" Observable: emits only the complete\n * notification.\n * @static true\n * @name empty\n * @owner Observable\n * @deprecated Deprecated in favor of using {@link index/EMPTY} constant.\n */\nexport function empty(scheduler?: SchedulerLike) {\n  return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\n\nexport function emptyScheduled(scheduler: SchedulerLike) {\n  return new Observable<never>(subscriber => scheduler.schedule(() => subscriber.complete()));\n}\n","import { SchedulerLike } from '../types';\n\nexport function isScheduler(value: any): value is SchedulerLike {\n  return value && typeof (<any>value).schedule === 'function';\n}\n","import { Subscriber } from '../Subscriber';\n\n/**\n * Subscribes to an ArrayLike with a subscriber\n * @param array The array or array-like to subscribe to\n */\nexport const subscribeToArray = <T>(array: ArrayLike<T>) => (subscriber: Subscriber<T>) => {\n  for (let i = 0, len = array.length; i < len && !subscriber.closed; i++) {\n    subscriber.next(array[i]);\n  }\n  if (!subscriber.closed) {\n    subscriber.complete();\n  }\n};\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscription } from '../Subscription';\nimport { subscribeToArray } from '../util/subscribeToArray';\n\nexport function fromArray<T>(input: ArrayLike<T>, scheduler?: SchedulerLike) {\n  if (!scheduler) {\n    return new Observable<T>(subscribeToArray(input));\n  } else {\n    return new Observable<T>(subscriber => {\n      const sub = new Subscription();\n      let i = 0;\n      sub.add(scheduler.schedule(function () {\n        if (i === input.length) {\n          subscriber.complete();\n          return;\n        }\n        subscriber.next(input[i++]);\n        if (!subscriber.closed) {\n          sub.add(this.schedule());\n        }\n      }));\n      return sub;\n    });\n  }\n}\n","import { Observable } from '../Observable';\n\nexport function scalar<T>(value: T) {\n  const result = new Observable<T>(subscriber => {\n    subscriber.next(value);\n    subscriber.complete();\n  });\n  result._isScalar = true;\n  (result as any).value = value;\n  return result;\n}\n","import { SchedulerLike } from '../types';\nimport { isScheduler } from '../util/isScheduler';\nimport { fromArray } from './fromArray';\nimport { empty } from './empty';\nimport { scalar } from './scalar';\nimport { Observable } from '../Observable';\n\n/* tslint:disable:max-line-length */\nexport function of<T>(a: T, scheduler?: SchedulerLike): Observable<T>;\nexport function of<T, T2>(a: T, b: T2, scheduler?: SchedulerLike): Observable<T | T2>;\nexport function of<T, T2, T3>(a: T, b: T2, c: T3, scheduler?: SchedulerLike): Observable<T | T2 | T3>;\nexport function of<T, T2, T3, T4>(a: T, b: T2, c: T3, d: T4, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4>;\nexport function of<T, T2, T3, T4, T5>(a: T, b: T2, c: T3, d: T4, e: T5, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4 | T5>;\nexport function of<T, T2, T3, T4, T5, T6>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function of<T, T2, T3, T4, T5, T6, T7>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, scheduler?: SchedulerLike):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7>;\nexport function of<T, T2, T3, T4, T5, T6, T7, T8>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, h: T8, scheduler?: SchedulerLike):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7 | T8>;\nexport function of<T, T2, T3, T4, T5, T6, T7, T8, T9>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, h: T8, i: T9, scheduler?: SchedulerLike):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9>;\nexport function of<T>(...args: Array<T | SchedulerLike>): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Converts the arguments to an observable sequence.\n *\n * <span class=\"informal\">Each argument becomes a `next` notification.</span>\n *\n * ![](of.png)\n *\n * Unlike {@link from}, it does not do any flattening and emits each argument in whole\n * as a separate `next` notification.\n *\n * ## Examples\n *\n * Emit the values `10, 20, 30`\n *\n * ```javascript\n * of(10, 20, 30)\n * .subscribe(\n *   next => console.log('next:', next),\n *   err => console.log('error:', err),\n *   () => console.log('the end'),\n * );\n * // result:\n * // 'next: 10'\n * // 'next: 20'\n * // 'next: 30'\n *\n * ```\n *\n * Emit the array `[1,2,3]`\n *\n * ```javascript\n * of([1,2,3])\n * .subscribe(\n *   next => console.log('next:', next),\n *   err => console.log('error:', err),\n *   () => console.log('the end'),\n * );\n * // result:\n * // 'next: [1,2,3]'\n * ```\n *\n * @see {@link from}\n * @see {@link range}\n *\n * @param {...T} values A comma separated list of arguments you want to be emitted\n * @return {Observable} An Observable that emits the arguments\n * described above and then completes.\n * @method of\n * @owner Observable\n */\n\nexport function of<T>(...args: Array<T | SchedulerLike>): Observable<T> {\n  let scheduler = args[args.length - 1] as SchedulerLike;\n  if (isScheduler(scheduler)) {\n    args.pop();\n  } else {\n    scheduler = undefined;\n  }\n  switch (args.length) {\n    case 0:\n      return empty(scheduler);\n    case 1:\n      return scheduler ? fromArray(args as T[], scheduler) : scalar(args[0] as T);\n    default:\n      return fromArray(args as T[], scheduler);\n  }\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * Creates an Observable that emits no items to the Observer and immediately\n * emits an error notification.\n *\n * <span class=\"informal\">Just emits 'error', and nothing else.\n * </span>\n *\n * ![](throw.png)\n *\n * This static operator is useful for creating a simple Observable that only\n * emits the error notification. It can be used for composing with other\n * Observables, such as in a {@link mergeMap}.\n *\n * ## Examples\n * ### Emit the number 7, then emit an error\n * ```javascript\n * import { throwError, concat, of } from 'rxjs';\n *\n * const result = concat(of(7), throwError(new Error('oops!')));\n * result.subscribe(x => console.log(x), e => console.error(e));\n *\n * // Logs:\n * // 7\n * // Error: oops!\n * ```\n *\n * ---\n *\n * ### Map and flatten numbers to the sequence 'a', 'b', 'c', but throw an error for 13\n * ```javascript\n * import { throwError, interval, of } from 'rxjs';\n * import { mergeMap } from 'rxjs/operators';\n *\n * interval(1000).pipe(\n *   mergeMap(x => x === 2\n *     ? throwError('Twos are bad')\n *     : of('a', 'b', 'c')\n *   ),\n * ).subscribe(x => console.log(x), e => console.error(e));\n *\n * // Logs:\n * // a\n * // b\n * // c\n * // a\n * // b\n * // c\n * // Twos are bad\n * ```\n *\n * @see {@link Observable}\n * @see {@link empty}\n * @see {@link never}\n * @see {@link of}\n *\n * @param {any} error The particular Error to pass to the error notification.\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} to use for scheduling\n * the emission of the error notification.\n * @return {Observable} An error Observable: emits only the error notification\n * using the given error argument.\n * @static true\n * @name throwError\n * @owner Observable\n */\nexport function throwError(error: any, scheduler?: SchedulerLike): Observable<never> {\n  if (!scheduler) {\n    return new Observable(subscriber => subscriber.error(error));\n  } else {\n    return new Observable(subscriber => scheduler.schedule(dispatch, 0, { error, subscriber }));\n  }\n}\n\ninterface DispatchArg {\n  error: any;\n  subscriber: Subscriber<any>;\n}\n\nfunction dispatch({ error, subscriber }: DispatchArg) {\n  subscriber.error(error);\n}\n","import { PartialObserver } from './types';\nimport { Observable } from './Observable';\nimport { empty } from './observable/empty';\nimport { of } from './observable/of';\nimport { throwError } from './observable/throwError';\n\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n *\n * @class Notification<T>\n */\nexport class Notification<T> {\n  hasValue: boolean;\n\n  constructor(public kind: string, public value?: T, public error?: any) {\n    this.hasValue = kind === 'N';\n  }\n\n  /**\n   * Delivers to the given `observer` the value wrapped by this Notification.\n   * @param {Observer} observer\n   * @return\n   */\n  observe(observer: PartialObserver<T>): any {\n    switch (this.kind) {\n      case 'N':\n        return observer.next && observer.next(this.value);\n      case 'E':\n        return observer.error && observer.error(this.error);\n      case 'C':\n        return observer.complete && observer.complete();\n    }\n  }\n\n  /**\n   * Given some {@link Observer} callbacks, deliver the value represented by the\n   * current Notification to the correctly corresponding callback.\n   * @param {function(value: T): void} next An Observer `next` callback.\n   * @param {function(err: any): void} [error] An Observer `error` callback.\n   * @param {function(): void} [complete] An Observer `complete` callback.\n   * @return {any}\n   */\n  do(next: (value: T) => void, error?: (err: any) => void, complete?: () => void): any {\n    const kind = this.kind;\n    switch (kind) {\n      case 'N':\n        return next && next(this.value);\n      case 'E':\n        return error && error(this.error);\n      case 'C':\n        return complete && complete();\n    }\n  }\n\n  /**\n   * Takes an Observer or its individual callback functions, and calls `observe`\n   * or `do` methods accordingly.\n   * @param {Observer|function(value: T): void} nextOrObserver An Observer or\n   * the `next` callback.\n   * @param {function(err: any): void} [error] An Observer `error` callback.\n   * @param {function(): void} [complete] An Observer `complete` callback.\n   * @return {any}\n   */\n  accept(nextOrObserver: PartialObserver<T> | ((value: T) => void), error?: (err: any) => void, complete?: () => void) {\n    if (nextOrObserver && typeof (<PartialObserver<T>>nextOrObserver).next === 'function') {\n      return this.observe(<PartialObserver<T>>nextOrObserver);\n    } else {\n      return this.do(<(value: T) => void>nextOrObserver, error, complete);\n    }\n  }\n\n  /**\n   * Returns a simple Observable that just delivers the notification represented\n   * by this Notification instance.\n   * @return {any}\n   */\n  toObservable(): Observable<T> {\n    const kind = this.kind;\n    switch (kind) {\n      case 'N':\n        return of(this.value);\n      case 'E':\n        return throwError(this.error);\n      case 'C':\n        return empty();\n    }\n    throw new Error('unexpected notification kind value');\n  }\n\n  private static completeNotification: Notification<any> = new Notification('C');\n  private static undefinedValueNotification: Notification<any> = new Notification('N', undefined);\n\n  /**\n   * A shortcut to create a Notification instance of the type `next` from a\n   * given value.\n   * @param {T} value The `next` value.\n   * @return {Notification<T>} The \"next\" Notification representing the\n   * argument.\n   * @nocollapse\n   */\n  static createNext<T>(value: T): Notification<T> {\n    if (typeof value !== 'undefined') {\n      return new Notification('N', value);\n    }\n    return Notification.undefinedValueNotification;\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `error` from a\n   * given error.\n   * @param {any} [err] The `error` error.\n   * @return {Notification<T>} The \"error\" Notification representing the\n   * argument.\n   * @nocollapse\n   */\n  static createError<T>(err?: any): Notification<T> {\n    return new Notification('E', undefined, err);\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `complete`.\n   * @return {Notification<any>} The valueless \"complete\" Notification.\n   * @nocollapse\n   */\n  static createComplete(): Notification<any> {\n    return Notification.completeNotification;\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Notification } from '../Notification';\nimport { MonoTypeOperatorFunction, PartialObserver, SchedulerAction, SchedulerLike, TeardownLogic } from '../types';\n\n/**\n *\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * ## Example\n * Ensure values in subscribe are called just before browser repaint.\n * ```javascript\n * const intervals = interval(10);                // Intervals are scheduled\n *                                                // with async scheduler by default...\n * intervals.pipe(\n *   observeOn(animationFrameScheduler),          // ...but we will observe on animationFrame\n * )                                              // scheduler to ensure smooth animation.\n * .subscribe(val => {\n *   someDiv.style.height = val + 'px';\n * });\n * ```\n *\n * @see {@link delay}\n *\n * @param {SchedulerLike} scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param {number} [delay] Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return {Observable<T>} Observable that emits the same notifications as the source Observable,\n * but with provided scheduler.\n *\n * @method observeOn\n * @owner Observable\n */\nexport function observeOn<T>(scheduler: SchedulerLike, delay: number = 0): MonoTypeOperatorFunction<T> {\n  return function observeOnOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new ObserveOnOperator(scheduler, delay));\n  };\n}\n\nexport class ObserveOnOperator<T> implements Operator<T, T> {\n  constructor(private scheduler: SchedulerLike, private delay: number = 0) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ObserveOnSubscriber<T> extends Subscriber<T> {\n  /** @nocollapse */\n  static dispatch(this: SchedulerAction<ObserveOnMessage>, arg: ObserveOnMessage) {\n    const { notification, destination } = arg;\n    notification.observe(destination);\n    this.unsubscribe();\n  }\n\n  constructor(destination: Subscriber<T>,\n              private scheduler: SchedulerLike,\n              private delay: number = 0) {\n    super(destination);\n  }\n\n  private scheduleMessage(notification: Notification<any>): void {\n    const destination = this.destination as Subscription;\n    destination.add(this.scheduler.schedule(\n      ObserveOnSubscriber.dispatch,\n      this.delay,\n      new ObserveOnMessage(notification, this.destination)\n    ));\n  }\n\n  protected _next(value: T): void {\n    this.scheduleMessage(Notification.createNext(value));\n  }\n\n  protected _error(err: any): void {\n    this.scheduleMessage(Notification.createError(err));\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.scheduleMessage(Notification.createComplete());\n    this.unsubscribe();\n  }\n}\n\nexport class ObserveOnMessage {\n  constructor(public notification: Notification<any>,\n              public destination: PartialObserver<any>) {\n  }\n}\n","import { Subject } from './Subject';\nimport { SchedulerLike } from './types';\nimport { queue } from './scheduler/queue';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { ObserveOnSubscriber } from './operators/observeOn';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\n/**\n * A variant of Subject that \"replays\" or emits old values to new subscribers.\n * It buffers a set number of values and will emit those values immediately to\n * any new subscribers in addition to emitting new values to existing subscribers.\n *\n * @class ReplaySubject<T>\n */\nexport class ReplaySubject<T> extends Subject<T> {\n  private _events: (ReplayEvent<T> | T)[] = [];\n  private _bufferSize: number;\n  private _windowTime: number;\n  private _infiniteTimeWindow: boolean = false;\n\n  constructor(bufferSize: number = Number.POSITIVE_INFINITY,\n              windowTime: number = Number.POSITIVE_INFINITY,\n              private scheduler?: SchedulerLike) {\n    super();\n    this._bufferSize = bufferSize < 1 ? 1 : bufferSize;\n    this._windowTime = windowTime < 1 ? 1 : windowTime;\n\n    if (windowTime === Number.POSITIVE_INFINITY) {\n      this._infiniteTimeWindow = true;\n      this.next = this.nextInfiniteTimeWindow;\n    } else {\n      this.next = this.nextTimeWindow;\n    }\n  }\n\n  private nextInfiniteTimeWindow(value: T): void {\n    const _events = this._events;\n    _events.push(value);\n    // Since this method is invoked in every next() call than the buffer\n    // can overgrow the max size only by one item\n    if (_events.length > this._bufferSize) {\n      _events.shift();\n    }\n\n    super.next(value);\n  }\n\n  private nextTimeWindow(value: T): void {\n    this._events.push(new ReplayEvent(this._getNow(), value));\n    this._trimBufferThenGetEvents();\n\n    super.next(value);\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    // When `_infiniteTimeWindow === true` then the buffer is already trimmed\n    const _infiniteTimeWindow = this._infiniteTimeWindow;\n    const _events = _infiniteTimeWindow ? this._events : this._trimBufferThenGetEvents();\n    const scheduler = this.scheduler;\n    const len = _events.length;\n    let subscription: Subscription;\n\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else if (this.isStopped || this.hasError) {\n      subscription = Subscription.EMPTY;\n    } else {\n      this.observers.push(subscriber);\n      subscription = new SubjectSubscription(this, subscriber);\n    }\n\n    if (scheduler) {\n      subscriber.add(subscriber = new ObserveOnSubscriber<T>(subscriber, scheduler));\n    }\n\n    if (_infiniteTimeWindow) {\n      for (let i = 0; i < len && !subscriber.closed; i++) {\n        subscriber.next(<T>_events[i]);\n      }\n    } else {\n      for (let i = 0; i < len && !subscriber.closed; i++) {\n        subscriber.next((<ReplayEvent<T>>_events[i]).value);\n      }\n    }\n\n    if (this.hasError) {\n      subscriber.error(this.thrownError);\n    } else if (this.isStopped) {\n      subscriber.complete();\n    }\n\n    return subscription;\n  }\n\n  _getNow(): number {\n    return (this.scheduler || queue).now();\n  }\n\n  private _trimBufferThenGetEvents(): ReplayEvent<T>[] {\n    const now = this._getNow();\n    const _bufferSize = this._bufferSize;\n    const _windowTime = this._windowTime;\n    const _events = <ReplayEvent<T>[]>this._events;\n\n    const eventsCount = _events.length;\n    let spliceCount = 0;\n\n    // Trim events that fall out of the time window.\n    // Start at the front of the list. Break early once\n    // we encounter an event that falls within the window.\n    while (spliceCount < eventsCount) {\n      if ((now - _events[spliceCount].time) < _windowTime) {\n        break;\n      }\n      spliceCount++;\n    }\n\n    if (eventsCount > _bufferSize) {\n      spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);\n    }\n\n    if (spliceCount > 0) {\n      _events.splice(0, spliceCount);\n    }\n\n    return _events;\n  }\n\n}\n\nclass ReplayEvent<T> {\n  constructor(public time: number, public value: T) {\n  }\n}\n","import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\n\n/**\n * A variant of Subject that only emits a value when it completes. It will emit\n * its latest value to all its observers on completion.\n *\n * @class AsyncSubject<T>\n */\nexport class AsyncSubject<T> extends Subject<T> {\n  private value: T = null;\n  private hasNext: boolean = false;\n  private hasCompleted: boolean = false;\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<any>): Subscription {\n    if (this.hasError) {\n      subscriber.error(this.thrownError);\n      return Subscription.EMPTY;\n    } else if (this.hasCompleted && this.hasNext) {\n      subscriber.next(this.value);\n      subscriber.complete();\n      return Subscription.EMPTY;\n    }\n    return super._subscribe(subscriber);\n  }\n\n  next(value: T): void {\n    if (!this.hasCompleted) {\n      this.value = value;\n      this.hasNext = true;\n    }\n  }\n\n  error(error: any): void {\n    if (!this.hasCompleted) {\n      super.error(error);\n    }\n  }\n\n  complete(): void {\n    this.hasCompleted = true;\n    if (this.hasNext) {\n      super.next(this.value);\n    }\n    super.complete();\n  }\n}\n","let nextHandle = 1;\n\nconst tasksByHandle: { [handle: string]: () => void } = {};\n\nfunction runIfPresent(handle: number) {\n  const cb = tasksByHandle[handle];\n  if (cb) {\n    cb();\n  }\n}\n\nexport const Immediate = {\n  setImmediate(cb: () => void): number {\n    const handle = nextHandle++;\n    tasksByHandle[handle] = cb;\n    Promise.resolve().then(() => runIfPresent(handle));\n    return handle;\n  },\n\n  clearImmediate(handle: number): void {\n    delete tasksByHandle[handle];\n  },\n};\n","import { Immediate } from '../util/Immediate';\nimport { AsyncAction } from './AsyncAction';\nimport { AsapScheduler } from './AsapScheduler';\nimport { SchedulerAction } from '../types';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AsapAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: AsapScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(scheduler: AsapScheduler, id?: any, delay: number = 0): any {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If a microtask has already been scheduled, don't schedule another\n    // one. If a microtask hasn't been scheduled yet, schedule one now. Return\n    // the current scheduled microtask id.\n    return scheduler.scheduled || (scheduler.scheduled = Immediate.setImmediate(\n      scheduler.flush.bind(scheduler, null)\n    ));\n  }\n  protected recycleAsyncId(scheduler: AsapScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue is empty, cancel the requested microtask and\n    // set the scheduled flag to undefined so the next AsapAction will schedule\n    // its own.\n    if (scheduler.actions.length === 0) {\n      Immediate.clearImmediate(id);\n      scheduler.scheduled = undefined;\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class AsapScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n\n    this.active = true;\n    this.scheduled = undefined;\n\n    const {actions} = this;\n    let error: any;\n    let index: number = -1;\n    let count: number = actions.length;\n    action = action || actions.shift();\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (++index < count && (action = actions.shift()));\n\n    this.active = false;\n\n    if (error) {\n      while (++index < count && (action = actions.shift())) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { AsapAction } from './AsapAction';\nimport { AsapScheduler } from './AsapScheduler';\n\n/**\n *\n * Asap Scheduler\n *\n * <span class=\"informal\">Perform task as fast as it can be performed asynchronously</span>\n *\n * `asap` scheduler behaves the same as {@link asyncScheduler} scheduler when you use it to delay task\n * in time. If however you set delay to `0`, `asap` will wait for current synchronously executing\n * code to end and then it will try to execute given task as fast as possible.\n *\n * `asap` scheduler will do its best to minimize time between end of currently executing code\n * and start of scheduled task. This makes it best candidate for performing so called \"deferring\".\n * Traditionally this was achieved by calling `setTimeout(deferredTask, 0)`, but that technique involves\n * some (although minimal) unwanted delay.\n *\n * Note that using `asap` scheduler does not necessarily mean that your task will be first to process\n * after currently executing code. In particular, if some task was also scheduled with `asap` before,\n * that task will execute first. That being said, if you need to schedule task asynchronously, but\n * as soon as possible, `asap` scheduler is your best bet.\n *\n * ## Example\n * Compare async and asap scheduler<\n * ```javascript\n * Rx.Scheduler.async.schedule(() => console.log('async')); // scheduling 'async' first...\n * Rx.Scheduler.asap.schedule(() => console.log('asap'));\n *\n * // Logs:\n * // \"asap\"\n * // \"async\"\n * // ... but 'asap' goes first!\n * ```\n * @static true\n * @name asap\n * @owner Scheduler\n */\n\nexport const asap = new AsapScheduler(AsapAction);\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asapScheduler} scheduler.\n *\n * ## Examples\n * Use async scheduler to delay task\n * ```javascript\n * const task = () => console.log('it works!');\n *\n * Rx.Scheduler.async.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n * ```\n *\n * Use async scheduler to repeat task in intervals\n * ```javascript\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * Rx.Scheduler.async.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n * ```\n *\n * @static true\n * @name async\n * @owner Scheduler\n */\n\nexport const async = new AsyncScheduler(AsyncAction);\n","import { AsyncAction } from './AsyncAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\nimport { SchedulerAction } from '../types';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AnimationFrameAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: AnimationFrameScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(scheduler: AnimationFrameScheduler, id?: any, delay: number = 0): any {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If an animation frame has already been requested, don't request another\n    // one. If an animation frame hasn't been requested yet, request one. Return\n    // the current animation frame request id.\n    return scheduler.scheduled || (scheduler.scheduled = requestAnimationFrame(\n      () => scheduler.flush(null)));\n  }\n  protected recycleAsyncId(scheduler: AnimationFrameScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue is empty, cancel the requested animation frame and\n    // set the scheduled flag to undefined so the next AnimationFrameAction will\n    // request its own.\n    if (scheduler.actions.length === 0) {\n      cancelAnimationFrame(id);\n      scheduler.scheduled = undefined;\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class AnimationFrameScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n\n    this.active = true;\n    this.scheduled = undefined;\n\n    const {actions} = this;\n    let error: any;\n    let index: number = -1;\n    let count: number = actions.length;\n    action = action || actions.shift();\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (++index < count && (action = actions.shift()));\n\n    this.active = false;\n\n    if (error) {\n      while (++index < count && (action = actions.shift())) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { AnimationFrameAction } from './AnimationFrameAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\n\n/**\n *\n * Animation Frame Scheduler\n *\n * <span class=\"informal\">Perform task when `window.requestAnimationFrame` would fire</span>\n *\n * When `animationFrame` scheduler is used with delay, it will fall back to {@link asyncScheduler} scheduler\n * behaviour.\n *\n * Without delay, `animationFrame` scheduler can be used to create smooth browser animations.\n * It makes sure scheduled task will happen just before next browser content repaint,\n * thus performing animations as efficiently as possible.\n *\n * ## Example\n * Schedule div height animation\n * ```javascript\n * const div = document.querySelector('.some-div');\n *\n * Rx.Scheduler.animationFrame.schedule(function(height) {\n *   div.style.height = height + \"px\";\n *\n *   this.schedule(height + 1);  // `this` references currently executing Action,\n *                               // which we reschedule with new state\n * }, 0, 0);\n *\n * // You will see .some-div element growing in height\n * ```\n *\n * @static true\n * @name animationFrame\n * @owner Scheduler\n */\n\nexport const animationFrame = new AnimationFrameScheduler(AnimationFrameAction);\n","import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\nimport { SchedulerAction } from '../types';\n\nexport class VirtualTimeScheduler extends AsyncScheduler {\n\n  protected static frameTimeFactor: number = 10;\n\n  public frame: number = 0;\n  public index: number = -1;\n\n  constructor(SchedulerAction: typeof AsyncAction = VirtualAction as any,\n              public maxFrames: number = Number.POSITIVE_INFINITY) {\n    super(SchedulerAction, () => this.frame);\n  }\n\n  /**\n   * Prompt the Scheduler to execute all of its queued actions, therefore\n   * clearing its queue.\n   * @return {void}\n   */\n  public flush(): void {\n\n    const {actions, maxFrames} = this;\n    let error: any, action: AsyncAction<any>;\n\n    while ((action = actions.shift()) && (this.frame = action.delay) <= maxFrames) {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    }\n\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @nodoc\n */\nexport class VirtualAction<T> extends AsyncAction<T> {\n\n  protected active: boolean = true;\n\n  constructor(protected scheduler: VirtualTimeScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void,\n              protected index: number = scheduler.index += 1) {\n    super(scheduler, work);\n    this.index = scheduler.index = index;\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (!this.id) {\n      return super.schedule(state, delay);\n    }\n    this.active = false;\n    // If an action is rescheduled, we save allocations by mutating its state,\n    // pushing it to the end of the scheduler queue, and recycling the action.\n    // But since the VirtualTimeScheduler is used for testing, VirtualActions\n    // must be immutable so they can be inspected later.\n    const action = new VirtualAction(this.scheduler, this.work);\n    this.add(action);\n    return action.schedule(state, delay);\n  }\n\n  protected requestAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): any {\n    this.delay = scheduler.frame + delay;\n    const {actions} = scheduler;\n    actions.push(this);\n    (actions as Array<VirtualAction<T>>).sort(VirtualAction.sortActions);\n    return true;\n  }\n\n  protected recycleAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): any {\n    return undefined;\n  }\n\n  protected _execute(state: T, delay: number): any {\n    if (this.active === true) {\n      return super._execute(state, delay);\n    }\n  }\n\n  public static sortActions<T>(a: VirtualAction<T>, b: VirtualAction<T>) {\n    if (a.delay === b.delay) {\n      if (a.index === b.index) {\n        return 0;\n      } else if (a.index > b.index) {\n        return 1;\n      } else {\n        return -1;\n      }\n    } else if (a.delay > b.delay) {\n      return 1;\n    } else {\n      return -1;\n    }\n  }\n}\n","export function identity<T>(x: T): T {\n  return x;\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput } from '../types';\n\n/**\n * Tests to see if the object is an RxJS {@link Observable}\n * @param obj the object to test\n */\nexport function isObservable<T>(obj: any): obj is Observable<T> {\n  return !!obj && (obj instanceof Observable || (typeof obj.lift === 'function' && typeof obj.subscribe === 'function'));\n}\n","export interface ArgumentOutOfRangeError extends Error {\n}\n\nexport interface ArgumentOutOfRangeErrorCtor {\n  new(): ArgumentOutOfRangeError;\n}\n\nfunction ArgumentOutOfRangeErrorImpl(this: any) {\n  Error.call(this);\n  this.message = 'argument out of range';\n  this.name = 'ArgumentOutOfRangeError';\n  return this;\n}\n\nArgumentOutOfRangeErrorImpl.prototype = Object.create(Error.prototype);\n\n/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nexport const ArgumentOutOfRangeError: ArgumentOutOfRangeErrorCtor = ArgumentOutOfRangeErrorImpl as any;","export interface EmptyError extends Error {\n}\n\nexport interface EmptyErrorCtor {\n  new(): EmptyError;\n}\n\nfunction EmptyErrorImpl(this: any) {\n  Error.call(this);\n  this.message = 'no elements in sequence';\n  this.name = 'EmptyError';\n  return this;\n}\n\nEmptyErrorImpl.prototype = Object.create(Error.prototype);\n\n/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n *\n * @class EmptyError\n */\nexport const EmptyError: EmptyErrorCtor = EmptyErrorImpl as any;","export interface TimeoutError extends Error {\r\n}\r\n\r\nexport interface TimeoutErrorCtor {\r\n  new(): TimeoutError;\r\n}\r\n\r\nfunction TimeoutErrorImpl(this: any) {\r\n  Error.call(this);\r\n  this.message = 'Timeout has occurred';\r\n  this.name = 'TimeoutError';\r\n  return this;\r\n}\r\n\r\nTimeoutErrorImpl.prototype = Object.create(Error.prototype);\r\n\r\n/**\r\n * An error thrown when duetime elapses.\r\n *\r\n * @see {@link timeout}\r\n *\r\n * @class TimeoutError\r\n */\r\nexport const TimeoutError: TimeoutErrorCtor = TimeoutErrorImpl as any;\r\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../types';\n\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * ![](map.png)\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * ## Example\n * Map every click to the clientX position of that click\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const positions = clicks.pipe(map(ev => ev.clientX));\n * positions.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nexport function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R> {\n  return function mapOperation(source: Observable<T>): Observable<R> {\n    if (typeof project !== 'function') {\n      throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n    }\n    return source.lift(new MapOperator(project, thisArg));\n  };\n}\n\nexport class MapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => R, private thisArg: any) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MapSubscriber<T, R> extends Subscriber<T> {\n  count: number = 0;\n  private thisArg: any;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => R,\n              thisArg: any) {\n    super(destination);\n    this.thisArg = thisArg || this;\n  }\n\n  // NOTE: This looks unoptimized, but it's actually purposefully NOT\n  // using try/catch optimizations.\n  protected _next(value: T) {\n    let result: any;\n    try {\n      result = this.project.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { SchedulerLike, SchedulerAction } from '../types';\nimport { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { Subscriber } from '../Subscriber';\nimport { map } from '../operators/map';\nimport { canReportError } from '../util/canReportError';\nimport { isArray } from '../util/isArray';\nimport { isScheduler } from '../util/isScheduler';\n\n// tslint:disable:max-line-length\n/** @deprecated resultSelector is no longer supported, use a mapping function. */\nexport function bindCallback(callbackFunc: Function, resultSelector: Function, scheduler?: SchedulerLike): (...args: any[]) => Observable<any>;\n\nexport function bindCallback<R1, R2, R3, R4>(callbackFunc: (callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): () => Observable<any[]>;\nexport function bindCallback<R1, R2, R3>(callbackFunc: (callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): () => Observable<[R1, R2, R3]>;\nexport function bindCallback<R1, R2>(callbackFunc: (callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): () => Observable<[R1, R2]>;\nexport function bindCallback<R1>(callbackFunc: (callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): () => Observable<R1>;\nexport function bindCallback(callbackFunc: (callback: () => any) => any, scheduler?: SchedulerLike): () => Observable<void>;\n\nexport function bindCallback<A1, R1, R2, R3, R4>(callbackFunc: (arg1: A1, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<any[]>;\nexport function bindCallback<A1, R1, R2, R3>(callbackFunc: (arg1: A1, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, R1, R2>(callbackFunc: (arg1: A1, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<[R1, R2]>;\nexport function bindCallback<A1, R1>(callbackFunc: (arg1: A1, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<R1>;\nexport function bindCallback<A1>(callbackFunc: (arg1: A1, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<void>;\n\nexport function bindCallback<A1, A2, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<any[]>;\nexport function bindCallback<A1, A2, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, A2, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<[R1, R2]>;\nexport function bindCallback<A1, A2, R1>(callbackFunc: (arg1: A1, arg2: A2, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<R1>;\nexport function bindCallback<A1, A2>(callbackFunc: (arg1: A1, arg2: A2, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<void>;\n\nexport function bindCallback<A1, A2, A3, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<any[]>;\nexport function bindCallback<A1, A2, A3, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, A2, A3, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<[R1, R2]>;\nexport function bindCallback<A1, A2, A3, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<R1>;\nexport function bindCallback<A1, A2, A3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<void>;\n\nexport function bindCallback<A1, A2, A3, A4, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<any[]>;\nexport function bindCallback<A1, A2, A3, A4, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, A2, A3, A4, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<[R1, R2]>;\nexport function bindCallback<A1, A2, A3, A4, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<R1>;\nexport function bindCallback<A1, A2, A3, A4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<void>;\n\nexport function bindCallback<A1, A2, A3, A4, A5, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<any[]>;\nexport function bindCallback<A1, A2, A3, A4, A5, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, A2, A3, A4, A5, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<[R1, R2]>;\nexport function bindCallback<A1, A2, A3, A4, A5, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<R1>;\nexport function bindCallback<A1, A2, A3, A4, A5>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<void>;\n\nexport function bindCallback<A, R>(callbackFunc: (...args: Array<A | ((result: R) => any)>) => any, scheduler?: SchedulerLike): (...args: A[]) => Observable<R>;\nexport function bindCallback<A, R>(callbackFunc: (...args: Array<A | ((...results: R[]) => any)>) => any, scheduler?: SchedulerLike): (...args: A[]) => Observable<R[]>;\n\nexport function bindCallback(callbackFunc: Function, scheduler?: SchedulerLike): (...args: any[]) => Observable<any>;\n\n// tslint:enable:max-line-length\n\n/**\n * Converts a callback API to a function that returns an Observable.\n *\n * <span class=\"informal\">Give it a function `f` of type `f(x, callback)` and\n * it will return a function `g` that when called as `g(x)` will output an\n * Observable.</span>\n *\n * `bindCallback` is not an operator because its input and output are not\n * Observables. The input is a function `func` with some parameters. The\n * last parameter must be a callback function that `func` calls when it is\n * done.\n *\n * The output of `bindCallback` is a function that takes the same parameters\n * as `func`, except the last one (the callback). When the output function\n * is called with arguments it will return an Observable. If function `func`\n * calls its callback with one argument, the Observable will emit that value.\n * If on the other hand the callback is called with multiple values the resulting\n * Observable will emit an array with said values as arguments.\n *\n * It is **very important** to remember that input function `func` is not called\n * when the output function is, but rather when the Observable returned by the output\n * function is subscribed. This means if `func` makes an AJAX request, that request\n * will be made every time someone subscribes to the resulting Observable, but not before.\n *\n * The last optional parameter - `scheduler` - can be used to control when the call\n * to `func` happens after someone subscribes to Observable, as well as when results\n * passed to callback will be emitted. By default, the subscription to an Observable calls `func`\n * synchronously, but using {@link asyncScheduler} as the last parameter will defer the call to `func`,\n * just like wrapping the call in `setTimeout` with a timeout of `0` would. If you were to use the async Scheduler\n * and call `subscribe` on the output Observable, all function calls that are currently executing\n * will end before `func` is invoked.\n *\n * By default, results passed to the callback are emitted immediately after `func` invokes the callback.\n * In particular, if the callback is called synchronously, then the subscription of the resulting Observable\n * will call the `next` function synchronously as well.  If you want to defer that call,\n * you may use {@link asyncScheduler} just as before.  This means that by using `Scheduler.async` you can\n * ensure that `func` always calls its callback asynchronously, thus avoiding terrifying Zalgo.\n *\n * Note that the Observable created by the output function will always emit a single value\n * and then complete immediately. If `func` calls the callback multiple times, values from subsequent\n * calls will not appear in the stream. If you need to listen for multiple calls,\n *  you probably want to use {@link fromEvent} or {@link fromEventPattern} instead.\n *\n * If `func` depends on some context (`this` property) and is not already bound, the context of `func`\n * will be the context that the output function has at call time. In particular, if `func`\n * is called as a method of some objec and if `func` is not already bound, in order to preserve the context\n * it is recommended that the context of the output function is set to that object as well.\n *\n * If the input function calls its callback in the \"node style\" (i.e. first argument to callback is\n * optional error parameter signaling whether the call failed or not), {@link bindNodeCallback}\n * provides convenient error handling and probably is a better choice.\n * `bindCallback` will treat such functions the same as any other and error parameters\n * (whether passed or not) will always be interpreted as regular callback argument.\n *\n * ## Examples\n *\n * ### Convert jQuery's getJSON to an Observable API\n * ```javascript\n * // Suppose we have jQuery.getJSON('/my/url', callback)\n * const getJSONAsObservable = bindCallback(jQuery.getJSON);\n * const result = getJSONAsObservable('/my/url');\n * result.subscribe(x => console.log(x), e => console.error(e));\n * ```\n *\n * ### Receive an array of arguments passed to a callback\n * ```javascript\n * someFunction((a, b, c) => {\n *   console.log(a); // 5\n *   console.log(b); // 'some string'\n *   console.log(c); // {someProperty: 'someValue'}\n * });\n *\n * const boundSomeFunction = bindCallback(someFunction);\n * boundSomeFunction().subscribe(values => {\n *   console.log(values) // [5, 'some string', {someProperty: 'someValue'}]\n * });\n * ```\n *\n * ### Compare behaviour with and without async Scheduler\n * ```javascript\n * function iCallMyCallbackSynchronously(cb) {\n *   cb();\n * }\n *\n * const boundSyncFn = bindCallback(iCallMyCallbackSynchronously);\n * const boundAsyncFn = bindCallback(iCallMyCallbackSynchronously, null, Rx.Scheduler.async);\n *\n * boundSyncFn().subscribe(() => console.log('I was sync!'));\n * boundAsyncFn().subscribe(() => console.log('I was async!'));\n * console.log('This happened...');\n *\n * // Logs:\n * // I was sync!\n * // This happened...\n * // I was async!\n * ```\n *\n * ### Use bindCallback on an object method\n * ```javascript\n * const boundMethod = bindCallback(someObject.methodWithCallback);\n * boundMethod.call(someObject) // make sure methodWithCallback has access to someObject\n * .subscribe(subscriber);\n * ```\n *\n * @see {@link bindNodeCallback}\n * @see {@link from}\n *\n * @param {function} func A function with a callback as the last parameter.\n * @param {SchedulerLike} [scheduler] The scheduler on which to schedule the\n * callbacks.\n * @return {function(...params: *): Observable} A function which returns the\n * Observable that delivers the same values the callback would deliver.\n * @name bindCallback\n */\nexport function bindCallback<T>(\n  callbackFunc: Function,\n  resultSelector?: Function|SchedulerLike,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<T> {\n  if (resultSelector) {\n    if (isScheduler(resultSelector)) {\n      scheduler = resultSelector;\n    } else {\n      // DEPRECATED PATH\n      return (...args: any[]) => bindCallback(callbackFunc, scheduler)(...args).pipe(\n        map((args) => isArray(args) ? resultSelector(...args) : resultSelector(args)),\n      );\n    }\n  }\n\n  return function (this: any, ...args: any[]): Observable<T> {\n    const context = this;\n    let subject: AsyncSubject<T>;\n    const params = {\n      context,\n      subject,\n      callbackFunc,\n      scheduler,\n    };\n    return new Observable<T>(subscriber => {\n      if (!scheduler) {\n        if (!subject) {\n          subject = new AsyncSubject<T>();\n          const handler = (...innerArgs: any[]) => {\n            subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n            subject.complete();\n          };\n\n          try {\n            callbackFunc.apply(context, [...args, handler]);\n          } catch (err) {\n            if (canReportError(subject)) {\n              subject.error(err);\n            } else {\n              console.warn(err);\n            }\n          }\n        }\n        return subject.subscribe(subscriber);\n      } else {\n        const state: DispatchState<T> = {\n          args, subscriber, params,\n        };\n        return scheduler.schedule<DispatchState<T>>(dispatch, 0, state);\n      }\n    });\n  };\n}\n\ninterface DispatchState<T> {\n  args: any[];\n  subscriber: Subscriber<T>;\n  params: ParamsContext<T>;\n}\n\ninterface ParamsContext<T> {\n  callbackFunc: Function;\n  scheduler: SchedulerLike;\n  context: any;\n  subject: AsyncSubject<T>;\n}\n\nfunction dispatch<T>(this: SchedulerAction<DispatchState<T>>, state: DispatchState<T>) {\n  const self = this;\n  const { args, subscriber, params } = state;\n  const { callbackFunc, context, scheduler } = params;\n  let { subject } = params;\n  if (!subject) {\n    subject = params.subject = new AsyncSubject<T>();\n\n    const handler = (...innerArgs: any[]) => {\n      const value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n      this.add(scheduler.schedule<NextState<T>>(dispatchNext, 0, { value, subject }));\n    };\n\n    try {\n      callbackFunc.apply(context, [...args, handler]);\n    } catch (err) {\n      subject.error(err);\n    }\n  }\n\n  this.add(subject.subscribe(subscriber));\n}\n\ninterface NextState<T> {\n  subject: AsyncSubject<T>;\n  value: T;\n}\n\nfunction dispatchNext<T>(this: SchedulerAction<NextState<T>>, state: NextState<T>) {\n  const { value, subject } = state;\n  subject.next(value);\n  subject.complete();\n}\n\ninterface ErrorState<T> {\n  subject: AsyncSubject<T>;\n  err: any;\n}\n\nfunction dispatchError<T>(this: SchedulerAction<ErrorState<T>>, state: ErrorState<T>) {\n  const { err, subject } = state;\n  subject.error(err);\n}\n","import { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { Subscriber } from '../Subscriber';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { map } from '../operators/map';\nimport { canReportError } from '../util/canReportError';\nimport { isScheduler } from '../util/isScheduler';\nimport { isArray } from '../util/isArray';\n\n/* tslint:disable:max-line-length */\n/** @deprecated resultSelector is deprecated, pipe to map instead */\nexport function bindNodeCallback(callbackFunc: Function, resultSelector: Function, scheduler?: SchedulerLike): (...args: any[]) => Observable<any>;\n\nexport function bindNodeCallback<R1, R2, R3, R4>(callbackFunc: (callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<R1, R2, R3>(callbackFunc: (callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): () => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<R1, R2>(callbackFunc: (callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): () => Observable<[R1, R2]>;\nexport function bindNodeCallback<R1>(callbackFunc: (callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): () => Observable<R1>;\nexport function bindNodeCallback(callbackFunc: (callback: (err: any) => any) => any, scheduler?: SchedulerLike): () => Observable<void>;\n\nexport function bindNodeCallback<A1, R1, R2, R3, R4>(callbackFunc: (arg1: A1, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, R1, R2, R3>(callbackFunc: (arg1: A1, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, R1, R2>(callbackFunc: (arg1: A1, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, R1>(callbackFunc: (arg1: A1, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<R1>;\nexport function bindNodeCallback<A1>(callbackFunc: (arg1: A1, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<void>;\n\nexport function bindNodeCallback<A1, A2, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, A2, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, A2, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, A2, R1>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<R1>;\nexport function bindNodeCallback<A1, A2>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<void>;\n\nexport function bindNodeCallback<A1, A2, A3, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, A2, A3, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, A2, A3, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, A2, A3, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<R1>;\nexport function bindNodeCallback<A1, A2, A3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<void>;\n\nexport function bindNodeCallback<A1, A2, A3, A4, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, A2, A3, A4, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, A2, A3, A4, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, A2, A3, A4, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<R1>;\nexport function bindNodeCallback<A1, A2, A3, A4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<void>;\n\nexport function bindNodeCallback<A1, A2, A3, A4, A5, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, A2, A3, A4, A5, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, A2, A3, A4, A5, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, A2, A3, A4, A5, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<R1>;\nexport function bindNodeCallback<A1, A2, A3, A4, A5>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<void>; /* tslint:enable:max-line-length */\n\nexport function bindNodeCallback(callbackFunc: Function, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\n/**\n * Converts a Node.js-style callback API to a function that returns an\n * Observable.\n *\n * <span class=\"informal\">It's just like {@link bindCallback}, but the\n * callback is expected to be of type `callback(error, result)`.</span>\n *\n * `bindNodeCallback` is not an operator because its input and output are not\n * Observables. The input is a function `func` with some parameters, but the\n * last parameter must be a callback function that `func` calls when it is\n * done. The callback function is expected to follow Node.js conventions,\n * where the first argument to the callback is an error object, signaling\n * whether call was successful. If that object is passed to callback, it means\n * something went wrong.\n *\n * The output of `bindNodeCallback` is a function that takes the same\n * parameters as `func`, except the last one (the callback). When the output\n * function is called with arguments, it will return an Observable.\n * If `func` calls its callback with error parameter present, Observable will\n * error with that value as well. If error parameter is not passed, Observable will emit\n * second parameter. If there are more parameters (third and so on),\n * Observable will emit an array with all arguments, except first error argument.\n *\n * Note that `func` will not be called at the same time output function is,\n * but rather whenever resulting Observable is subscribed. By default call to\n * `func` will happen synchronously after subscription, but that can be changed\n * with proper `scheduler` provided as optional third parameter. {@link SchedulerLike}\n * can also control when values from callback will be emitted by Observable.\n * To find out more, check out documentation for {@link bindCallback}, where\n * {@link SchedulerLike} works exactly the same.\n *\n * As in {@link bindCallback}, context (`this` property) of input function will be set to context\n * of returned function, when it is called.\n *\n * After Observable emits value, it will complete immediately. This means\n * even if `func` calls callback again, values from second and consecutive\n * calls will never appear on the stream. If you need to handle functions\n * that call callbacks multiple times, check out {@link fromEvent} or\n * {@link fromEventPattern} instead.\n *\n * Note that `bindNodeCallback` can be used in non-Node.js environments as well.\n * \"Node.js-style\" callbacks are just a convention, so if you write for\n * browsers or any other environment and API you use implements that callback style,\n * `bindNodeCallback` can be safely used on that API functions as well.\n *\n * Remember that Error object passed to callback does not have to be an instance\n * of JavaScript built-in `Error` object. In fact, it does not even have to an object.\n * Error parameter of callback function is interpreted as \"present\", when value\n * of that parameter is truthy. It could be, for example, non-zero number, non-empty\n * string or boolean `true`. In all of these cases resulting Observable would error\n * with that value. This means usually regular style callbacks will fail very often when\n * `bindNodeCallback` is used. If your Observable errors much more often then you\n * would expect, check if callback really is called in Node.js-style and, if not,\n * switch to {@link bindCallback} instead.\n *\n * Note that even if error parameter is technically present in callback, but its value\n * is falsy, it still won't appear in array emitted by Observable.\n *\n * ## Examples\n * ###  Read a file from the filesystem and get the data as an Observable\n * ```javascript\n * import * as fs from 'fs';\n * const readFileAsObservable = bindNodeCallback(fs.readFile);\n * const result = readFileAsObservable('./roadNames.txt', 'utf8');\n * result.subscribe(x => console.log(x), e => console.error(e));\n * ```\n *\n * ### Use on function calling callback with multiple arguments\n * ```javascript\n * someFunction((err, a, b) => {\n *   console.log(err); // null\n *   console.log(a); // 5\n *   console.log(b); // \"some string\"\n * });\n * const boundSomeFunction = bindNodeCallback(someFunction);\n * boundSomeFunction()\n * .subscribe(value => {\n *   console.log(value); // [5, \"some string\"]\n * });\n * ```\n *\n * ### Use on function calling callback in regular style\n * ```javascript\n * someFunction(a => {\n *   console.log(a); // 5\n * });\n * const boundSomeFunction = bindNodeCallback(someFunction);\n * boundSomeFunction()\n * .subscribe(\n *   value => {}             // never gets called\n *   err => console.log(err) // 5\n * );\n * ```\n *\n * @see {@link bindCallback}\n * @see {@link from}\n *\n * @param {function} func Function with a Node.js-style callback as the last parameter.\n * @param {SchedulerLike} [scheduler] The scheduler on which to schedule the\n * callbacks.\n * @return {function(...params: *): Observable} A function which returns the\n * Observable that delivers the same values the Node.js callback would\n * deliver.\n * @name bindNodeCallback\n */\nexport function bindNodeCallback<T>(\n  callbackFunc: Function,\n  resultSelector: Function|SchedulerLike,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<T> {\n\n  if (resultSelector) {\n    if (isScheduler(resultSelector)) {\n      scheduler = resultSelector;\n    } else {\n      // DEPRECATED PATH\n      return (...args: any[]) => bindNodeCallback(callbackFunc, scheduler)(...args).pipe(\n        map(args => isArray(args) ? resultSelector(...args) : resultSelector(args))\n      );\n    }\n  }\n\n  return function(this: any, ...args: any[]): Observable<T> {\n    const params: ParamsState<T> = {\n      subject: undefined,\n      args,\n      callbackFunc,\n      scheduler,\n      context: this,\n    };\n    return new Observable<T>(subscriber => {\n      const { context } = params;\n      let { subject } = params;\n      if (!scheduler) {\n        if (!subject) {\n          subject = params.subject = new AsyncSubject<T>();\n          const handler = (...innerArgs: any[]) => {\n            const err = innerArgs.shift();\n\n            if (err) {\n              subject.error(err);\n              return;\n            }\n\n            subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n            subject.complete();\n          };\n\n          try {\n            callbackFunc.apply(context, [...args, handler]);\n          } catch (err) {\n            if (canReportError(subject)) {\n              subject.error(err);\n            } else {\n              console.warn(err);\n            }\n          }\n        }\n        return subject.subscribe(subscriber);\n      } else {\n        return scheduler.schedule<DispatchState<T>>(dispatch, 0, { params, subscriber, context });\n      }\n    });\n  };\n}\n\ninterface DispatchState<T> {\n  subscriber: Subscriber<T>;\n  context: any;\n  params: ParamsState<T>;\n}\n\ninterface ParamsState<T> {\n  callbackFunc: Function;\n  args: any[];\n  scheduler: SchedulerLike;\n  subject: AsyncSubject<T>;\n  context: any;\n}\n\nfunction dispatch<T>(this: SchedulerAction<DispatchState<T>>, state: DispatchState<T>) {\n  const { params, subscriber, context } = state;\n  const { callbackFunc, args, scheduler } = params;\n  let subject = params.subject;\n\n  if (!subject) {\n    subject = params.subject = new AsyncSubject<T>();\n\n    const handler = (...innerArgs: any[]) => {\n      const err = innerArgs.shift();\n      if (err) {\n        this.add(scheduler.schedule<DispatchErrorArg<T>>(dispatchError, 0, { err, subject }));\n      } else {\n        const value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n        this.add(scheduler.schedule<DispatchNextArg<T>>(dispatchNext, 0, { value, subject }));\n      }\n    };\n\n    try {\n      callbackFunc.apply(context, [...args, handler]);\n    } catch (err) {\n      this.add(scheduler.schedule<DispatchErrorArg<T>>(dispatchError, 0, { err, subject }));\n    }\n  }\n\n  this.add(subject.subscribe(subscriber));\n}\n\ninterface DispatchNextArg<T> {\n  subject: AsyncSubject<T>;\n  value: T;\n}\n\nfunction dispatchNext<T>(arg: DispatchNextArg<T>) {\n  const { value, subject } = arg;\n  subject.next(value);\n  subject.complete();\n}\n\ninterface DispatchErrorArg<T> {\n  subject: AsyncSubject<T>;\n  err: any;\n}\n\nfunction dispatchError<T>(arg: DispatchErrorArg<T>) {\n  const { err, subject } = arg;\n  subject.error(err);\n}\n","import { Subscriber } from './Subscriber';\nimport { InnerSubscriber } from './InnerSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class OuterSubscriber<T, R> extends Subscriber<T> {\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, R>): void {\n    this.destination.error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, R>): void {\n    this.destination.complete();\n  }\n}\n","import { Subscriber } from './Subscriber';\nimport { OuterSubscriber } from './OuterSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class InnerSubscriber<T, R> extends Subscriber<R> {\n  private index = 0;\n\n  constructor(private parent: OuterSubscriber<T, R>, public outerValue: T, public outerIndex: number) {\n    super();\n  }\n\n  protected _next(value: R): void {\n    this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n  }\n\n  protected _error(error: any): void {\n    this.parent.notifyError(error, this);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.parent.notifyComplete(this);\n    this.unsubscribe();\n  }\n}\n","import { Subscriber } from '../Subscriber';\nimport { hostReportError } from './hostReportError';\n\nexport const subscribeToPromise = <T>(promise: PromiseLike<T>) => (subscriber: Subscriber<T>) => {\n  promise.then(\n    (value) => {\n      if (!subscriber.closed) {\n        subscriber.next(value);\n        subscriber.complete();\n      }\n    },\n    (err: any) => subscriber.error(err)\n  )\n  .then(null, hostReportError);\n  return subscriber;\n};\n","export function getSymbolIterator(): symbol {\n  if (typeof Symbol !== 'function' || !Symbol.iterator) {\n    return '@@iterator' as any;\n  }\n\n  return Symbol.iterator;\n}\n\nexport const iterator = getSymbolIterator();\n\n/**\n * @deprecated use {@link iterator} instead\n */\nexport const $$iterator = iterator;\n","import { Subscriber } from '../Subscriber';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\n\nexport const subscribeToIterable = <T>(iterable: Iterable<T>) => (subscriber: Subscriber<T>) => {\n  const iterator = iterable[Symbol_iterator]();\n  do {\n    const item = iterator.next();\n    if (item.done) {\n      subscriber.complete();\n      break;\n    }\n    subscriber.next(item.value);\n    if (subscriber.closed) {\n      break;\n    }\n  } while (true);\n\n  // Finalize the iterator if it happens to be a Generator\n  if (typeof iterator.return === 'function') {\n    subscriber.add(() => {\n      if (iterator.return) {\n        iterator.return();\n      }\n    });\n  }\n\n  return subscriber;\n};\n","import { Subscriber } from '../Subscriber';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\n/**\n * Subscribes to an object that implements Symbol.observable with the given\n * Subscriber.\n * @param obj An object that implements Symbol.observable\n */\nexport const subscribeToObservable = <T>(obj: any) => (subscriber: Subscriber<T>) => {\n  const obs = obj[Symbol_observable]();\n  if (typeof obs.subscribe !== 'function') {\n    // Should be caught by observable subscribe function error handling.\n    throw new TypeError('Provided object does not correctly implement Symbol.observable');\n  } else {\n    return obs.subscribe(subscriber);\n  }\n};\n","export const isArrayLike = (<T>(x: any): x is ArrayLike<T> => x && typeof x.length === 'number' && typeof x !== 'function');","export function isPromise(value: any): value is PromiseLike<any> {\n  return value && typeof (<any>value).subscribe !== 'function' && typeof (value as any).then === 'function';\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput } from '../types';\nimport { subscribeToArray } from './subscribeToArray';\nimport { subscribeToPromise } from './subscribeToPromise';\nimport { subscribeToIterable } from './subscribeToIterable';\nimport { subscribeToObservable } from './subscribeToObservable';\nimport { isArrayLike } from './isArrayLike';\nimport { isPromise } from './isPromise';\nimport { isObject } from './isObject';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { Subscriber } from '../Subscriber';\n\nexport const subscribeTo = <T>(result: ObservableInput<T>) => {\n  if (result instanceof Observable) {\n    return (subscriber: Subscriber<T>) => {\n        if (result._isScalar) {\n        subscriber.next((result as any).value);\n        subscriber.complete();\n        return undefined;\n      } else {\n        return result.subscribe(subscriber);\n      }\n    };\n  } else if (result && typeof result[Symbol_observable] === 'function') {\n    return subscribeToObservable(result as any);\n  } else if (isArrayLike(result)) {\n    return subscribeToArray(result);\n  } else if (isPromise(result)) {\n    return subscribeToPromise(result as Promise<any>);\n  } else if (result && typeof result[Symbol_iterator] === 'function') {\n    return subscribeToIterable(result as any);\n  } else {\n    const value = isObject(result) ? 'an invalid object' : `'${result}'`;\n    const msg = `You provided ${value} where a stream was expected.`\n      + ' You can provide an Observable, Promise, Array, or Iterable.';\n    throw new TypeError(msg);\n  }\n};\n","import { ObservableInput } from '../types';\nimport { Subscription } from '../Subscription';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { Subscriber } from '../Subscriber';\nimport { subscribeTo } from './subscribeTo';\n\nexport function subscribeToResult<T, R>(\n  outerSubscriber: OuterSubscriber<T, R>,\n  result: any,\n  outerValue?: T,\n  outerIndex?: number,\n  destination?: Subscriber<any>\n): Subscription;\nexport function subscribeToResult<T, R>(\n  outerSubscriber: OuterSubscriber<T, R>,\n  result: any,\n  outerValue?: T,\n  outerIndex?: number,\n  destination: Subscriber<any> = new InnerSubscriber(outerSubscriber, outerValue, outerIndex)\n): Subscription | void {\n  if (destination.closed) {\n    return;\n  }\n  return subscribeTo(result)(destination);\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike } from '../types';\nimport { isScheduler  } from '../util/isScheduler';\nimport { isArray  } from '../util/isArray';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { Operator } from '../Operator';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { fromArray } from './fromArray';\n\nconst NONE = {};\n\n/* tslint:disable:max-line-length */\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<T, R>(v1: ObservableInput<T>, resultSelector: (v1: T) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<T, T2, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, resultSelector: (v1: T, v2: T2) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<T, T2, T3, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, resultSelector: (v1: T, v2: T2, v3: T3) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<T, T2, T3, T4, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, resultSelector: (v1: T, v2: T2, v3: T3, v4: T4) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<T, T2, T3, T4, T5, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, resultSelector: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<T, T2, T3, T4, T5, T6, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, resultSelector: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R, scheduler?: SchedulerLike): Observable<R>;\n\nexport function combineLatest<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, scheduler?: SchedulerLike): Observable<[T, T2]>;\nexport function combineLatest<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler?: SchedulerLike): Observable<[T, T2, T3]>;\nexport function combineLatest<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler?: SchedulerLike): Observable<[T, T2, T3, T4]>;\nexport function combineLatest<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler?: SchedulerLike): Observable<[T, T2, T3, T4, T5]>;\nexport function combineLatest<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler?: SchedulerLike): Observable<[T, T2, T3, T4, T5, T6]>;\n\nexport function combineLatest<T>(array: ObservableInput<T>[], scheduler?: SchedulerLike): Observable<T[]>;\nexport function combineLatest<R>(array: ObservableInput<any>[], scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<T, R>(array: ObservableInput<T>[], resultSelector: (...values: Array<T>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<R>(array: ObservableInput<any>[], resultSelector: (...values: Array<any>) => R, scheduler?: SchedulerLike): Observable<R>;\nexport function combineLatest<T>(...observables: Array<ObservableInput<T> | SchedulerLike>): Observable<T[]>;\nexport function combineLatest<T, R>(...observables: Array<ObservableInput<T> | ((...values: Array<T>) => R) | SchedulerLike>): Observable<R>;\nexport function combineLatest<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R) | SchedulerLike>): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * ![](combineLatest.png)\n *\n * `combineLatest` combines the values from all the Observables passed as\n * arguments. This is done by subscribing to each Observable in order and,\n * whenever any Observable emits, collecting an array of the most recent\n * values from each Observable. So if you pass `n` Observables to operator,\n * returned Observable will always emit an array of `n` values, in order\n * corresponding to order of passed Observables (value from the first Observable\n * on the first place and so on).\n *\n * Static version of `combineLatest` accepts either an array of Observables\n * or each Observable can be put directly as an argument. Note that array of\n * Observables is good choice, if you don't know beforehand how many Observables\n * you will combine. Passing empty array will result in Observable that\n * completes immediately.\n *\n * To ensure output array has always the same length, `combineLatest` will\n * actually wait for all input Observables to emit at least once,\n * before it starts emitting results. This means if some Observable emits\n * values before other Observables started emitting, all these values but the last\n * will be lost. On the other hand, if some Observable does not emit a value but\n * completes, resulting Observable will complete at the same moment without\n * emitting anything, since it will be now impossible to include value from\n * completed Observable in resulting array. Also, if some input Observable does\n * not emit any value and never completes, `combineLatest` will also never emit\n * and never complete, since, again, it will wait for all streams to emit some\n * value.\n *\n * If at least one Observable was passed to `combineLatest` and all passed Observables\n * emitted something, resulting Observable will complete when all combined\n * streams complete. So even if some Observable completes, result of\n * `combineLatest` will still emit values when other Observables do. In case\n * of completed Observable, its value from now on will always be the last\n * emitted value. On the other hand, if any Observable errors, `combineLatest`\n * will error immediately as well, and all other Observables will be unsubscribed.\n *\n * `combineLatest` accepts as optional parameter `project` function, which takes\n * as arguments all values that would normally be emitted by resulting Observable.\n * `project` can return any kind of value, which will be then emitted by Observable\n * instead of default array. Note that `project` does not take as argument that array\n * of values, but values themselves. That means default `project` can be imagined\n * as function that takes all its arguments and puts them into an array.\n *\n * ## Examples\n * ### Combine two timer Observables\n * ```javascript\n * const firstTimer = timer(0, 1000); // emit 0, 1, 2... after every second, starting from now\n * const secondTimer = timer(500, 1000); // emit 0, 1, 2... after every second, starting 0,5s from now\n * const combinedTimers = combineLatest(firstTimer, secondTimer);\n * combinedTimers.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0] after 0.5s\n * // [1, 0] after 1s\n * // [1, 1] after 1.5s\n * // [2, 1] after 2s\n * ```\n *\n * ### Combine an array of Observables\n * ```javascript\n * const observables = [1, 5, 10].map(\n *   n => of(n).pipe(\n *     delay(n * 1000),   // emit 0 and then emit n after n seconds\n *     startWith(0),\n *   )\n * );\n * const combined = combineLatest(observables);\n * combined.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0, 0] immediately\n * // [1, 0, 0] after 1s\n * // [1, 5, 0] after 5s\n * // [1, 5, 10] after 10s\n * ```\n *\n *\n * ### Use project function to dynamically calculate the Body-Mass Index\n * ```javascript\n * * const weight = of(70, 72, 76, 79, 75);\n * const height = of(1.76, 1.77, 1.78);\n * const bmi = combineLatest(weight, height).pipe(\n *   map(([w, h]) => w / (h * h)),\n * );\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n * ```\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} observable1 An input Observable to combine with other Observables.\n * @param {ObservableInput} observable2 An input Observable to combine with other Observables.\n * More than one input Observables may be given as arguments\n * or an array of Observables may be given as the first argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for subscribing to\n * each input Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n */\nexport function combineLatest<T, R>(...observables: Array<any | ObservableInput<any> |\n                                                    Array<ObservableInput<any>> |\n                                                    (((...values: Array<any>) => R)) |\n                                                    SchedulerLike>): Observable<R> {\n  let resultSelector: (...values: Array<any>) => R =  null;\n  let scheduler: SchedulerLike = null;\n\n  if (isScheduler(observables[observables.length - 1])) {\n    scheduler = <SchedulerLike>observables.pop();\n  }\n\n  if (typeof observables[observables.length - 1] === 'function') {\n    resultSelector = <(...values: Array<any>) => R>observables.pop();\n  }\n\n  // if the first and only other argument besides the resultSelector is an array\n  // assume it's been called with `combineLatest([obs1, obs2, obs3], resultSelector)`\n  if (observables.length === 1 && isArray(observables[0])) {\n    observables = <Array<Observable<any>>>observables[0];\n  }\n\n  return fromArray(observables, scheduler).lift(new CombineLatestOperator<T, R>(resultSelector));\n}\n\nexport class CombineLatestOperator<T, R> implements Operator<T, R> {\n  constructor(private resultSelector?: (...values: Array<any>) => R) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new CombineLatestSubscriber(subscriber, this.resultSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class CombineLatestSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private active: number = 0;\n  private values: any[] = [];\n  private observables: any[] = [];\n  private toRespond: number;\n\n  constructor(destination: Subscriber<R>, private resultSelector?: (...values: Array<any>) => R) {\n    super(destination);\n  }\n\n  protected _next(observable: any) {\n    this.values.push(NONE);\n    this.observables.push(observable);\n  }\n\n  protected _complete() {\n    const observables = this.observables;\n    const len = observables.length;\n    if (len === 0) {\n      this.destination.complete();\n    } else {\n      this.active = len;\n      this.toRespond = len;\n      for (let i = 0; i < len; i++) {\n        const observable = observables[i];\n        this.add(subscribeToResult(this, observable, observable, i));\n      }\n    }\n  }\n\n  notifyComplete(unused: Subscriber<R>): void {\n    if ((this.active -= 1) === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    const values = this.values;\n    const oldVal = values[outerIndex];\n    const toRespond = !this.toRespond\n      ? 0\n      : oldVal === NONE ? --this.toRespond : this.toRespond;\n    values[outerIndex] = innerValue;\n\n    if (toRespond === 0) {\n      if (this.resultSelector) {\n        this._tryResultSelector(values);\n      } else {\n        this.destination.next(values.slice());\n      }\n    }\n  }\n\n  private _tryResultSelector(values: any[]) {\n    let result: any;\n    try {\n      result = this.resultSelector.apply(this, values);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { InteropObservable } from '../types';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\n/** Identifies an input as being Observable (but not necessary an Rx Observable) */\nexport function isInteropObservable(input: any): input is InteropObservable<any> {\n  return input && typeof input[Symbol_observable] === 'function';\n}\n","import { iterator as Symbol_iterator } from '../symbol/iterator';\n\n/** Identifies an input as being an Iterable */\nexport function isIterable(input: any): input is Iterable<any> {\n  return input && typeof input[Symbol_iterator] === 'function';\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscription } from '../Subscription';\nimport { subscribeToPromise } from '../util/subscribeToPromise';\n\nexport function fromPromise<T>(input: PromiseLike<T>, scheduler?: SchedulerLike) {\n  if (!scheduler) {\n    return new Observable<T>(subscribeToPromise(input));\n  } else {\n    return new Observable<T>(subscriber => {\n      const sub = new Subscription();\n      sub.add(scheduler.schedule(() => input.then(\n        value => {\n          sub.add(scheduler.schedule(() => {\n            subscriber.next(value);\n            sub.add(scheduler.schedule(() => subscriber.complete()));\n          }));\n        },\n        err => {\n          sub.add(scheduler.schedule(() => subscriber.error(err)));\n        }\n      )));\n      return sub;\n    });\n  }\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscription } from '../Subscription';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { subscribeToIterable } from '../util/subscribeToIterable';\n\nexport function fromIterable<T>(input: Iterable<T>, scheduler: SchedulerLike) {\n  if (!input) {\n    throw new Error('Iterable cannot be null');\n  }\n  if (!scheduler) {\n    return new Observable<T>(subscribeToIterable(input));\n  } else {\n    return new Observable<T>(subscriber => {\n      const sub = new Subscription();\n      let iterator: Iterator<T>;\n      sub.add(() => {\n        // Finalize generators\n        if (iterator && typeof iterator.return === 'function') {\n          iterator.return();\n        }\n      });\n      sub.add(scheduler.schedule(() => {\n        iterator = input[Symbol_iterator]();\n        sub.add(scheduler.schedule(function () {\n          if (subscriber.closed) {\n            return;\n          }\n          let value: T;\n          let done: boolean;\n          try {\n            const result = iterator.next();\n            value = result.value;\n            done = result.done;\n          } catch (err) {\n            subscriber.error(err);\n            return;\n          }\n          if (done) {\n            subscriber.complete();\n          } else {\n            subscriber.next(value);\n            this.schedule();\n          }\n        }));\n      }));\n      return sub;\n    });\n  }\n}\n","import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { subscribeToObservable } from '../util/subscribeToObservable';\nimport { InteropObservable, SchedulerLike, Subscribable } from '../types';\n\nexport function fromObservable<T>(input: InteropObservable<T>, scheduler: SchedulerLike) {\n  if (!scheduler) {\n    return new Observable<T>(subscribeToObservable(input));\n  } else {\n    return new Observable<T>(subscriber => {\n      const sub = new Subscription();\n      sub.add(scheduler.schedule(() => {\n        const observable: Subscribable<T> = input[Symbol_observable]();\n        sub.add(observable.subscribe({\n          next(value) { sub.add(scheduler.schedule(() => subscriber.next(value))); },\n          error(err) { sub.add(scheduler.schedule(() => subscriber.error(err))); },\n          complete() { sub.add(scheduler.schedule(() => subscriber.complete())); },\n        }));\n      }));\n      return sub;\n    });\n  }\n}\n","import { Observable } from '../Observable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isIterable } from '../util/isIterable';\nimport { fromArray } from './fromArray';\nimport { fromPromise } from './fromPromise';\nimport { fromIterable } from './fromIterable';\nimport { fromObservable } from './fromObservable';\nimport { subscribeTo } from '../util/subscribeTo';\nimport { ObservableInput, SchedulerLike } from '../types';\n\nexport function from<T>(input: ObservableInput<T>, scheduler?: SchedulerLike): Observable<T>;\nexport function from<T>(input: ObservableInput<ObservableInput<T>>, scheduler?: SchedulerLike): Observable<Observable<T>>;\n\n/**\n * Creates an Observable from an Array, an array-like object, a Promise, an iterable object, or an Observable-like object.\n *\n * <span class=\"informal\">Converts almost anything to an Observable.</span>\n *\n * ![](from.png)\n *\n * `from` converts various other objects and data types into Observables. It also converts a Promise, an array-like, or an\n * <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable\" target=\"_blank\">iterable</a>\n * object into an Observable that emits the items in that promise, array, or iterable. A String, in this context, is treated\n * as an array of characters. Observable-like objects (contains a function named with the ES2015 Symbol for Observable) can also be\n * converted through this operator.\n *\n * ## Examples\n * ### Converts an array to an Observable\n * ```javascript\n * import { from } from 'rxjs/observable/from';\n *\n * const array = [10, 20, 30];\n * const result = from(array);\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 10 20 30\n * ```\n *\n * ---\n *\n * ### Convert an infinite iterable (from a generator) to an Observable\n * ```javascript\n * import { take } from 'rxjs/operators';\n * import { from } from 'rxjs/observable/from';\n *\n * function* generateDoubles(seed) {\n *    let i = seed;\n *    while (true) {\n *      yield i;\n *      i = 2 * i; // double it\n *    }\n * }\n *\n * const iterator = generateDoubles(3);\n * const result = from(iterator).pipe(take(10));\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 3 6 12 24 48 96 192 384 768 1536\n * ```\n *\n * ---\n *\n * ### with async scheduler\n * ```javascript\n * import { from } from 'rxjs/observable/from';\n * import { async } from 'rxjs/scheduler/async';\n *\n * console.log('start');\n *\n * const array = [10, 20, 30];\n * const result = from(array, async);\n *\n * result.subscribe(x => console.log(x));\n *\n * console.log('end');\n *\n * // Logs:\n * // start end 10 20 30\n * ```\n *\n * @see {@link fromEvent}\n * @see {@link fromEventPattern}\n * @see {@link fromPromise}\n *\n * @param {ObservableInput<T>} A subscription object, a Promise, an Observable-like,\n * an Array, an iterable, or an array-like object to be converted.\n * @param {SchedulerLike} An optional {@link SchedulerLike} on which to schedule the emission of values.\n * @return {Observable<T>}\n * @name from\n * @owner Observable\n */\n\nexport function from<T>(input: ObservableInput<T>, scheduler?: SchedulerLike): Observable<T> {\n  if (!scheduler) {\n    if (input instanceof Observable) {\n      return input;\n    }\n    return new Observable<T>(subscribeTo(input));\n  }\n\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return fromObservable(input, scheduler);\n    } else if (isPromise(input)) {\n      return fromPromise(input, scheduler);\n    } else if (isArrayLike(input)) {\n      return fromArray(input, scheduler);\n    }  else if (isIterable(input) || typeof input === 'string') {\n      return fromIterable(input, scheduler);\n    }\n  }\n\n  throw new TypeError((input !== null && typeof input || input) + ' is not observable');\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { ObservableInput, OperatorFunction } from '../types';\nimport { map } from './map';\nimport { from } from '../observable/from';\n\n/* tslint:disable:max-line-length */\nexport function mergeMap<T, R>(project: (value: T, index: number) => ObservableInput<R>, concurrent?: number): OperatorFunction<T, R>;\n/** @deprecated resultSelector no longer supported, use inner map instead */\nexport function mergeMap<T, R>(project: (value: T, index: number) => ObservableInput<R>, resultSelector: undefined, concurrent?: number): OperatorFunction<T, R>;\n/** @deprecated resultSelector no longer supported, use inner map instead */\nexport function mergeMap<T, I, R>(project: (value: T, index: number) => ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R, concurrent?: number): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * ![](mergeMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * ## Example\n * Map and flatten each letter to an Observable ticking every 1 second\n * ```javascript\n * const letters = of('a', 'b', 'c');\n * const result = letters.pipe(\n *   mergeMap(x => interval(1000).pipe(map(i => x+i))),\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional deprecated `resultSelector`) to each item\n * emitted by the source Observable and merging the results of the Observables\n * obtained from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nexport function mergeMap<T, I, R>(\n  project: (value: T, index: number) => ObservableInput<I>,\n  resultSelector?: ((outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) | number,\n  concurrent: number = Number.POSITIVE_INFINITY\n): OperatorFunction<T, I|R> {\n  if (typeof resultSelector === 'function') {\n    // DEPRECATED PATH\n    return (source: Observable<T>) => source.pipe(\n      mergeMap((a, i) => from(project(a, i)).pipe(\n        map((b, ii) => resultSelector(a, b, i, ii)),\n      ), concurrent)\n    );\n  } else if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n  return (source: Observable<T>) => source.lift(new MergeMapOperator(project, concurrent));\n}\n\nexport class MergeMapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => ObservableInput<R>,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n  }\n\n  call(observer: Subscriber<R>, source: any): any {\n    return source.subscribe(new MergeMapSubscriber(\n      observer, this.project, this.concurrent\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeMapSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private hasCompleted: boolean = false;\n  private buffer: T[] = [];\n  private active: number = 0;\n  protected index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => ObservableInput<R>,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.active < this.concurrent) {\n      this._tryNext(value);\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  protected _tryNext(value: T) {\n    let result: ObservableInput<R>;\n    const index = this.index++;\n    try {\n      result = this.project(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.active++;\n    this._innerSub(result, value, index);\n  }\n\n  private _innerSub(ish: ObservableInput<R>, value: T, index: number): void {\n    const innerSubscriber = new InnerSubscriber(this, undefined, undefined);\n    const destination = this.destination as Subscription;\n    destination.add(innerSubscriber);\n    subscribeToResult<T, R>(this, ish, value, index, innerSubscriber);\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      this.destination.complete();\n    }\n    this.unsubscribe();\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","\nimport { mergeMap } from './mergeMap';\nimport { identity } from '../util/identity';\nimport { MonoTypeOperatorFunction, OperatorFunction, ObservableInput } from '../types';\n\nexport function mergeAll<T>(concurrent?: number): OperatorFunction<ObservableInput<T>, T>;\n\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * ![](mergeAll.png)\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * ## Examples\n * Spawn a new interval Observable for each click event, and blend their outputs as one Observable\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(map((ev) => interval(1000)));\n * const firstOrder = higherOrder.pipe(mergeAll());\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * Count from 0 to 9 every second for each click, but only allow 2 concurrent timers\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map((ev) => interval(1000).pipe(take(10))),\n * );\n * const firstOrder = higherOrder.pipe(mergeAll(2));\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits values coming from all the\n * inner Observables emitted by the source Observable.\n * @method mergeAll\n * @owner Observable\n */\nexport function mergeAll<T>(concurrent: number = Number.POSITIVE_INFINITY): MonoTypeOperatorFunction<T> {\n  return mergeMap<T, T>(identity as (value: T, index: number) => ObservableInput<T>, concurrent);\n}\n","\nimport { mergeAll } from './mergeAll';\nimport { OperatorFunction, ObservableInput } from '../types';\n\nexport function concatAll<T>(): OperatorFunction<ObservableInput<T>, T>;\nexport function concatAll<R>(): OperatorFunction<any, R>;\n\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * concatenating the inner Observables in order.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\n * inner Observable after the other.</span>\n *\n * ![](concatAll.png)\n *\n * Joins every Observable emitted by the source (a higher-order Observable), in\n * a serial fashion. It subscribes to each inner Observable only after the\n * previous inner Observable has completed, and merges all of their values into\n * the returned observable.\n *\n * __Warning:__ If the source Observable emits Observables quickly and\n * endlessly, and the inner Observables it emits generally complete slower than\n * the source emits, you can run into memory issues as the incoming Observables\n * collect in an unbounded buffer.\n *\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\n * to `1`.\n *\n * ## Example\n *\n * For each click event, tick every second from 0 to 3, with no concurrency\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(ev => interval(1000).pipe(take(4))),\n * );\n * const firstOrder = higherOrder.pipe(concatAll());\n * firstOrder.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n * ```\n *\n * @see {@link combineAll}\n * @see {@link concat}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link exhaust}\n * @see {@link mergeAll}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable emitting values from all the inner\n * Observables concatenated.\n * @method concatAll\n * @owner Observable\n */\nexport function concatAll<T>(): OperatorFunction<ObservableInput<T>, T> {\n  return mergeAll<T>(1);\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike } from '../types';\nimport { isScheduler } from '../util/isScheduler';\nimport { of } from './of';\nimport { from } from './from';\nimport { concatAll } from '../operators/concatAll';\n\n/* tslint:disable:max-line-length */\nexport function concat<T>(v1: ObservableInput<T>, scheduler?: SchedulerLike): Observable<T>;\nexport function concat<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, scheduler?: SchedulerLike): Observable<T | T2>;\nexport function concat<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler?: SchedulerLike): Observable<T | T2 | T3>;\nexport function concat<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4>;\nexport function concat<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4 | T5>;\nexport function concat<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function concat<T>(...observables: (ObservableInput<T> | SchedulerLike)[]): Observable<T>;\nexport function concat<T, R>(...observables: (ObservableInput<any> | SchedulerLike)[]): Observable<R>;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which sequentially emits all values from given\n * Observable and then moves on to the next.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * ![](concat.png)\n *\n * `concat` joins multiple Observables together, by subscribing to them one at a time and\n * merging their results into the output Observable. You can pass either an array of\n * Observables, or put them directly as arguments. Passing an empty array will result\n * in Observable that completes immediately.\n *\n * `concat` will subscribe to first input Observable and emit all its values, without\n * changing or affecting them in any way. When that Observable completes, it will\n * subscribe to then next Observable passed and, again, emit its values. This will be\n * repeated, until the operator runs out of Observables. When last input Observable completes,\n * `concat` will complete as well. At any given moment only one Observable passed to operator\n * emits values. If you would like to emit values from passed Observables concurrently, check out\n * {@link merge} instead, especially with optional `concurrent` parameter. As a matter of fact,\n * `concat` is an equivalent of `merge` operator with `concurrent` parameter set to `1`.\n *\n * Note that if some input Observable never completes, `concat` will also never complete\n * and Observables following the one that did not complete will never be subscribed. On the other\n * hand, if some Observable simply completes immediately after it is subscribed, it will be\n * invisible for `concat`, which will just move on to the next Observable.\n *\n * If any Observable in chain errors, instead of passing control to the next Observable,\n * `concat` will error immediately as well. Observables that would be subscribed after\n * the one that emitted error, never will.\n *\n * If you pass to `concat` the same Observable many times, its stream of values\n * will be \"replayed\" on every subscription, which means you can repeat given Observable\n * as many times as you like. If passing the same Observable to `concat` 1000 times becomes tedious,\n * you can always use {@link repeat}.\n *\n * ## Examples\n * ### Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10\n * ```javascript\n * const timer = interval(1000).pipe(take(4));\n * const sequence = range(1, 10);\n * const result = concat(timer, sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n * ```\n *\n * ### Concatenate an array of 3 Observables\n * ```javascript\n * const timer1 = interval(1000).pipe(take(10));\n * const timer2 = interval(2000).pipe(take(6));\n * const timer3 = interval(500).pipe(take(10));\n * const result = concat([timer1, timer2, timer3]); // note that array is passed\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n * ```\n *\n * ### Concatenate the same Observable to repeat it\n * ```javascript\n * const timer = interval(1000).pipe(take(2));\n * *\n * concat(timer, timer) // concatenating the same Observable!\n * .subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('...and it is done!')\n * );\n *\n * // Logs:\n * // 0 after 1s\n * // 1 after 2s\n * // 0 after 3s\n * // 1 after 4s\n * // \"...and it is done!\" also after 4s\n * ```\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n *\n * @param {ObservableInput} input1 An input Observable to concatenate with others.\n * @param {ObservableInput} input2 An input Observable to concatenate with others.\n * More than one input Observables may be given as argument.\n * @param {SchedulerLike} [scheduler=null] An optional {@link SchedulerLike} to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @static true\n * @name concat\n * @owner Observable\n */\nexport function concat<T, R>(...observables: Array<ObservableInput<any> | SchedulerLike>): Observable<R> {\n  if (observables.length === 1 || (observables.length === 2 && isScheduler(observables[1]))) {\n    return from(<any>observables[0]);\n  }\n  return concatAll<R>()(of(...observables));\n}\n","import { Observable } from '../Observable';\nimport { SubscribableOrPromise } from '../types';\nimport { from } from './from'; // lol\nimport { empty } from './empty';\n\n/**\n * Creates an Observable that, on subscribe, calls an Observable factory to\n * make an Observable for each new Observer.\n *\n * <span class=\"informal\">Creates the Observable lazily, that is, only when it\n * is subscribed.\n * </span>\n *\n * ![](defer.png)\n *\n * `defer` allows you to create the Observable only when the Observer\n * subscribes, and create a fresh Observable for each Observer. It waits until\n * an Observer subscribes to it, and then it generates an Observable,\n * typically with an Observable factory function. It does this afresh for each\n * subscriber, so although each subscriber may think it is subscribing to the\n * same Observable, in fact each subscriber gets its own individual\n * Observable.\n *\n * ## Example\n * ### Subscribe to either an Observable of clicks or an Observable of interval, at random\n * ```javascript\n * const clicksOrInterval = defer(function () {\n *   return Math.random() > 0.5\n *     ? fromEvent(document, 'click')\n *     : interval(1000);\n * });\n * clicksOrInterval.subscribe(x => console.log(x));\n *\n * // Results in the following behavior:\n * // If the result of Math.random() is greater than 0.5 it will listen\n * // for clicks anywhere on the \"document\"; when document is clicked it\n * // will log a MouseEvent object to the console. If the result is less\n * // than 0.5 it will emit ascending numbers, one every second(1000ms).\n * ```\n *\n * @see {@link Observable}\n *\n * @param {function(): SubscribableOrPromise} observableFactory The Observable\n * factory function to invoke for each Observer that subscribes to the output\n * Observable. May also return a Promise, which will be converted on the fly\n * to an Observable.\n * @return {Observable} An Observable whose Observers' subscriptions trigger\n * an invocation of the given Observable factory function.\n * @static true\n * @name defer\n * @owner Observable\n */\nexport function defer<T>(observableFactory: () => SubscribableOrPromise<T> | void): Observable<T> {\n  return new Observable(subscriber => {\n    let input: SubscribableOrPromise<T> | void;\n    try {\n      input = observableFactory();\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n    const source = input ? from(input) : empty();\n    return source.subscribe(subscriber);\n  });\n}","import { Observable } from '../Observable';\nimport { ObservableInput } from '../types';\nimport { isArray } from '../util/isArray';\nimport { EMPTY } from './empty';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { Subscriber } from '../Subscriber';\nimport { map } from '../operators/map';\n\n/* tslint:disable:max-line-length */\n// forkJoin([a$, b$, c$]);\nexport function forkJoin<T>(sources: [ObservableInput<T>]): Observable<T[]>;\nexport function forkJoin<T, T2>(sources: [ObservableInput<T>, ObservableInput<T2>]): Observable<[T, T2]>;\nexport function forkJoin<T, T2, T3>(sources: [ObservableInput<T>, ObservableInput<T2>, ObservableInput<T3>]): Observable<[T, T2, T3]>;\nexport function forkJoin<T, T2, T3, T4>(sources: [ObservableInput<T>, ObservableInput<T2>, ObservableInput<T3>, ObservableInput<T4>]): Observable<[T, T2, T3, T4]>;\nexport function forkJoin<T, T2, T3, T4, T5>(sources: [ObservableInput<T>, ObservableInput<T2>, ObservableInput<T3>, ObservableInput<T4>, ObservableInput<T5>]): Observable<[T, T2, T3, T4, T5]>;\nexport function forkJoin<T, T2, T3, T4, T5, T6>(sources: [ObservableInput<T>, ObservableInput<T2>, ObservableInput<T3>, ObservableInput<T4>, ObservableInput<T5>, ObservableInput<T6>]): Observable<[T, T2, T3, T4, T5, T6]>;\nexport function forkJoin<T>(sources: Array<ObservableInput<T>>): Observable<T[]>;\n\n// forkJoin(a$, b$, c$)\nexport function forkJoin<T>(v1: ObservableInput<T>): Observable<T[]>;\nexport function forkJoin<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>): Observable<[T, T2]>;\nexport function forkJoin<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<[T, T2, T3]>;\nexport function forkJoin<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<[T, T2, T3, T4]>;\nexport function forkJoin<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<[T, T2, T3, T4, T5]>;\nexport function forkJoin<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<[T, T2, T3, T4, T5, T6]>;\n\n/** @deprecated resultSelector is deprecated, pipe to map instead */\nexport function forkJoin(...args: Array<ObservableInput<any>|Function>): Observable<any>;\nexport function forkJoin<T>(...sources: ObservableInput<T>[]): Observable<T[]>;\n/* tslint:enable:max-line-length */\n\n/**\n * Joins last values emitted by passed Observables.\n *\n * <span class=\"informal\">Wait for Observables to complete and then combine last values they emitted.</span>\n *\n * ![](forkJoin.png)\n *\n * `forkJoin` is an operator that takes any number of Observables which can be passed either as an array\n * or directly as arguments. If no input Observables are provided, resulting stream will complete\n * immediately.\n *\n * `forkJoin` will wait for all passed Observables to complete and then it will emit an array with last\n * values from corresponding Observables. So if you pass `n` Observables to the operator, resulting\n * array will have `n` values, where first value is the last thing emitted by the first Observable,\n * second value is the last thing emitted by the second Observable and so on. That means `forkJoin` will\n * not emit more than once and it will complete after that. If you need to emit combined values not only\n * at the end of lifecycle of passed Observables, but also throughout it, try out {@link combineLatest}\n * or {@link zip} instead.\n *\n * In order for resulting array to have the same length as the number of input Observables, whenever any of\n * that Observables completes without emitting any value, `forkJoin` will complete at that moment as well\n * and it will not emit anything either, even if it already has some last values from other Observables.\n * Conversely, if there is an Observable that never completes, `forkJoin` will never complete as well,\n * unless at any point some other Observable completes without emitting value, which brings us back to\n * the previous case. Overall, in order for `forkJoin` to emit a value, all Observables passed as arguments\n * have to emit something at least once and complete.\n *\n * If any input Observable errors at some point, `forkJoin` will error as well and all other Observables\n * will be immediately unsubscribed.\n *\n * Optionally `forkJoin` accepts project function, that will be called with values which normally\n * would land in emitted array. Whatever is returned by project function, will appear in output\n * Observable instead. This means that default project can be thought of as a function that takes\n * all its arguments and puts them into an array. Note that project function will be called only\n * when output Observable is supposed to emit a result.\n *\n * ## Examples\n * ### Use forkJoin with operator emitting immediately\n * ```javascript\n * import { forkJoin, of } from 'rxjs';\n *\n * const observable = forkJoin(\n *   of(1, 2, 3, 4),\n *   of(5, 6, 7, 8),\n * );\n * observable.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('This is how it ends!'),\n * );\n *\n * // Logs:\n * // [4, 8]\n * // \"This is how it ends!\"\n * ```\n *\n * ### Use forkJoin with operator emitting after some time\n * ```javascript\n * import { forkJoin, interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const observable = forkJoin(\n *   interval(1000).pipe(take(3)), // emit 0, 1, 2 every second and complete\n *   interval(500).pipe(take(4)),  // emit 0, 1, 2, 3 every half a second and complete\n * );\n * observable.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('This is how it ends!'),\n * );\n *\n * // Logs:\n * // [2, 3] after 3 seconds\n * // \"This is how it ends!\" immediately after\n * ```\n *\n * ### Use forkJoin with project function\n * ```javascript\n * import { forkJoin, interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const observable = forkJoin(\n *   interval(1000).pipe(take(3)), // emit 0, 1, 2 every second and complete\n *   interval(500).pipe(take(4)),  // emit 0, 1, 2, 3 every half a second and complete\n * ).pipe(\n *   map(([n, m]) => n + m),\n * );\n * observable.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('This is how it ends!'),\n * );\n *\n * // Logs:\n * // 5 after 3 seconds\n * // \"This is how it ends!\" immediately after\n * ```\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n *\n * @param {...ObservableInput} sources Any number of Observables provided either as an array or as an arguments\n * passed directly to the operator.\n * @param {function} [project] Function that takes values emitted by input Observables and returns value\n * that will appear in resulting Observable instead of default array.\n * @return {Observable} Observable emitting either an array of last values emitted by passed Observables\n * or value from project function.\n */\nexport function forkJoin<T>(\n  ...sources: Array<ObservableInput<T> | ObservableInput<T>[] | Function>\n): Observable<T[]> {\n\n  let resultSelector: Function;\n  if (typeof sources[sources.length - 1] === 'function') {\n    // DEPRECATED PATH\n    resultSelector = sources.pop() as Function;\n  }\n\n  // if the first and only other argument is an array\n  // assume it's been called with `forkJoin([obs1, obs2, obs3])`\n  if (sources.length === 1 && isArray(sources[0])) {\n    sources = sources[0] as Array<ObservableInput<T>>;\n  }\n\n  if (sources.length === 0) {\n    return EMPTY;\n  }\n\n  if (resultSelector) {\n    // DEPRECATED PATH\n    return forkJoin(sources).pipe(\n      map(args => resultSelector(...args))\n    );\n  }\n\n  return new Observable(subscriber => {\n    return new ForkJoinSubscriber(subscriber, sources as Array<ObservableInput<T>>);\n  });\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ForkJoinSubscriber<T, R> extends OuterSubscriber<T, T> {\n  private completed = 0;\n  private values: T[];\n  private haveValues = 0;\n\n  constructor(destination: Subscriber<R>,\n              private sources: Array<ObservableInput<T>>) {\n    super(destination);\n\n    const len = sources.length;\n    this.values = new Array(len);\n\n    for (let i = 0; i < len; i++) {\n      const source = sources[i];\n      const innerSubscription = subscribeToResult(this, source, null, i);\n\n      if (innerSubscription) {\n        this.add(innerSubscription);\n      }\n    }\n  }\n\n  notifyNext(outerValue: any, innerValue: T,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, T>): void {\n    this.values[outerIndex] = innerValue;\n    if (!(innerSub as any)._hasValue) {\n      (innerSub as any)._hasValue = true;\n      this.haveValues++;\n    }\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, T>): void {\n    const { destination, haveValues, values } = this;\n    const len = values.length;\n\n    if (!(innerSub as any)._hasValue) {\n      destination.complete();\n      return;\n    }\n\n    this.completed++;\n\n    if (this.completed !== len) {\n      return;\n    }\n\n    if (haveValues === len) {\n      destination.next(values);\n    }\n\n    destination.complete();\n  }\n}\n","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { Subscriber } from '../Subscriber';\nimport { map } from '../operators/map';\n\nconst toString: Function = Object.prototype.toString;\n\nexport interface NodeStyleEventEmitter {\n  addListener: (eventName: string | symbol, handler: NodeEventHandler) => this;\n  removeListener: (eventName: string | symbol, handler: NodeEventHandler) => this;\n}\n\nexport type NodeEventHandler = (...args: any[]) => void;\n\n// For APIs that implement `addListener` and `removeListener` methods that may\n// not use the same arguments or return EventEmitter values\n// such as React Native\nexport interface NodeCompatibleEventEmitter {\n  addListener: (eventName: string, handler: NodeEventHandler) => void | {};\n  removeListener: (eventName: string, handler: NodeEventHandler) => void | {};\n}\n\nexport interface JQueryStyleEventEmitter {\n  on: (eventName: string, handler: Function) => void;\n  off: (eventName: string, handler: Function) => void;\n}\n\nexport interface HasEventTargetAddRemove<E> {\n  addEventListener(type: string, listener: ((evt: E) => void) | null, options?: boolean | AddEventListenerOptions): void;\n  removeEventListener(type: string, listener?: ((evt: E) => void) | null, options?: EventListenerOptions | boolean): void;\n}\n\nexport type EventTargetLike<T> = HasEventTargetAddRemove<T> | NodeStyleEventEmitter | NodeCompatibleEventEmitter | JQueryStyleEventEmitter;\n\nexport type FromEventTarget<T> = EventTargetLike<T> | ArrayLike<EventTargetLike<T>>;\n\nexport interface EventListenerOptions {\n  capture?: boolean;\n  passive?: boolean;\n  once?: boolean;\n}\n\nexport interface AddEventListenerOptions extends EventListenerOptions {\n  once?: boolean;\n  passive?: boolean;\n}\n\n/* tslint:disable:max-line-length */\nexport function fromEvent<T>(target: FromEventTarget<T>, eventName: string): Observable<T>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function fromEvent<T>(target: FromEventTarget<T>, eventName: string, resultSelector: (...args: any[]) => T): Observable<T>;\nexport function fromEvent<T>(target: FromEventTarget<T>, eventName: string, options: EventListenerOptions): Observable<T>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function fromEvent<T>(target: FromEventTarget<T>, eventName: string, options: EventListenerOptions, resultSelector: (...args: any[]) => T): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Creates an Observable that emits events of a specific type coming from the\n * given event target.\n *\n * <span class=\"informal\">Creates an Observable from DOM events, or Node.js\n * EventEmitter events or others.</span>\n *\n * ![](fromEvent.png)\n *\n * `fromEvent` accepts as a first argument event target, which is an object with methods\n * for registering event handler functions. As a second argument it takes string that indicates\n * type of event we want to listen for. `fromEvent` supports selected types of event targets,\n * which are described in detail below. If your event target does not match any of the ones listed,\n * you should use {@link fromEventPattern}, which can be used on arbitrary APIs.\n * When it comes to APIs supported by `fromEvent`, their methods for adding and removing event\n * handler functions have different names, but they all accept a string describing event type\n * and function itself, which will be called whenever said event happens.\n *\n * Every time resulting Observable is subscribed, event handler function will be registered\n * to event target on given event type. When that event fires, value\n * passed as a first argument to registered function will be emitted by output Observable.\n * When Observable is unsubscribed, function will be unregistered from event target.\n *\n * Note that if event target calls registered function with more than one argument, second\n * and following arguments will not appear in resulting stream. In order to get access to them,\n * you can pass to `fromEvent` optional project function, which will be called with all arguments\n * passed to event handler. Output Observable will then emit value returned by project function,\n * instead of the usual value.\n *\n * Remember that event targets listed below are checked via duck typing. It means that\n * no matter what kind of object you have and no matter what environment you work in,\n * you can safely use `fromEvent` on that object if it exposes described methods (provided\n * of course they behave as was described above). So for example if Node.js library exposes\n * event target which has the same method names as DOM EventTarget, `fromEvent` is still\n * a good choice.\n *\n * If the API you use is more callback then event handler oriented (subscribed\n * callback function fires only once and thus there is no need to manually\n * unregister it), you should use {@link bindCallback} or {@link bindNodeCallback}\n * instead.\n *\n * `fromEvent` supports following types of event targets:\n *\n * **DOM EventTarget**\n *\n * This is an object with `addEventListener` and `removeEventListener` methods.\n *\n * In the browser, `addEventListener` accepts - apart from event type string and event\n * handler function arguments - optional third parameter, which is either an object or boolean,\n * both used for additional configuration how and when passed function will be called. When\n * `fromEvent` is used with event target of that type, you can provide this values\n * as third parameter as well.\n *\n * **Node.js EventEmitter**\n *\n * An object with `addListener` and `removeListener` methods.\n *\n * **JQuery-style event target**\n *\n * An object with `on` and `off` methods\n *\n * **DOM NodeList**\n *\n * List of DOM Nodes, returned for example by `document.querySelectorAll` or `Node.childNodes`.\n *\n * Although this collection is not event target in itself, `fromEvent` will iterate over all Nodes\n * it contains and install event handler function in every of them. When returned Observable\n * is unsubscribed, function will be removed from all Nodes.\n *\n * **DOM HtmlCollection**\n *\n * Just as in case of NodeList it is a collection of DOM nodes. Here as well event handler function is\n * installed and removed in each of elements.\n *\n *\n * ## Examples\n * ### Emits clicks happening on the DOM document\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * clicks.subscribe(x => console.log(x));\n *\n * // Results in:\n * // MouseEvent object logged to console every time a click\n * // occurs on the document.\n * ```\n *\n * ### Use addEventListener with capture option\n * ```javascript\n * const clicksInDocument = fromEvent(document, 'click', true); // note optional configuration parameter\n *                                                              // which will be passed to addEventListener\n * const clicksInDiv = fromEvent(someDivInDocument, 'click');\n *\n * clicksInDocument.subscribe(() => console.log('document'));\n * clicksInDiv.subscribe(() => console.log('div'));\n *\n * // By default events bubble UP in DOM tree, so normally\n * // when we would click on div in document\n * // \"div\" would be logged first and then \"document\".\n * // Since we specified optional `capture` option, document\n * // will catch event when it goes DOWN DOM tree, so console\n * // will log \"document\" and then \"div\".\n * ```\n *\n * @see {@link bindCallback}\n * @see {@link bindNodeCallback}\n * @see {@link fromEventPattern}\n *\n * @param {FromEventTarget<T>} target The DOM EventTarget, Node.js\n * EventEmitter, JQuery-like event target, NodeList or HTMLCollection to attach the event handler to.\n * @param {string} eventName The event name of interest, being emitted by the\n * `target`.\n * @param {EventListenerOptions} [options] Options to pass through to addEventListener\n * @return {Observable<T>}\n * @name fromEvent\n */\nexport function fromEvent<T>(\n  target: FromEventTarget<T>,\n  eventName: string,\n  options?: EventListenerOptions | ((...args: any[]) => T),\n  resultSelector?: ((...args: any[]) => T)\n): Observable<T> {\n\n  if (isFunction(options)) {\n    // DEPRECATED PATH\n    resultSelector = options;\n    options = undefined;\n  }\n  if (resultSelector) {\n    // DEPRECATED PATH\n    return fromEvent<T>(target, eventName, <EventListenerOptions | undefined>options).pipe(\n      map(args => isArray(args) ? resultSelector(...args) : resultSelector(args))\n    );\n  }\n\n  return new Observable<T>(subscriber => {\n    function handler(e: T) {\n      if (arguments.length > 1) {\n        subscriber.next(Array.prototype.slice.call(arguments));\n      } else {\n        subscriber.next(e);\n      }\n    }\n    setupSubscription(target, eventName, handler, subscriber, options as EventListenerOptions);\n  });\n}\n\nfunction setupSubscription<T>(sourceObj: FromEventTarget<T>, eventName: string,\n                              handler: (...args: any[]) => void, subscriber: Subscriber<T>,\n                              options?: EventListenerOptions) {\n  let unsubscribe: () => void;\n  if (isEventTarget(sourceObj)) {\n    const source = sourceObj;\n    sourceObj.addEventListener(eventName, handler, options);\n    unsubscribe = () => source.removeEventListener(eventName, handler, options);\n  } else if (isJQueryStyleEventEmitter(sourceObj)) {\n    const source = sourceObj;\n    sourceObj.on(eventName, handler);\n    unsubscribe = () => source.off(eventName, handler);\n  } else if (isNodeStyleEventEmitter(sourceObj)) {\n    const source = sourceObj;\n    sourceObj.addListener(eventName, handler as NodeEventHandler);\n    unsubscribe = () => source.removeListener(eventName, handler as NodeEventHandler);\n  } else if (sourceObj && (sourceObj as any).length) {\n    for (let i = 0, len = (sourceObj as any).length; i < len; i++) {\n      setupSubscription(sourceObj[i], eventName, handler, subscriber, options);\n    }\n  } else {\n    throw new TypeError('Invalid event target');\n  }\n\n  subscriber.add(unsubscribe);\n}\n\nfunction isNodeStyleEventEmitter(sourceObj: any): sourceObj is NodeStyleEventEmitter {\n  return sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';\n}\n\nfunction isJQueryStyleEventEmitter(sourceObj: any): sourceObj is JQueryStyleEventEmitter {\n  return sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';\n}\n\nfunction isEventTarget(sourceObj: any): sourceObj is HasEventTargetAddRemove<any> {\n  return sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';\n}\n","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { fromEvent } from './fromEvent';\nimport { map } from '../operators/map';\n\n/* tslint:disable:max-line-length */\nexport function fromEventPattern<T>(addHandler: (handler: Function) => any, removeHandler?: (handler: Function, signal?: any) => void): Observable<T>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function fromEventPattern<T>(addHandler: (handler: Function) => any, removeHandler?: (handler: Function, signal?: any) => void, resultSelector?: (...args: any[]) => T): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Creates an Observable from an arbitrary API for registering event handlers.\n *\n * <span class=\"informal\">When that method for adding event handler was something {@link fromEvent}\n * was not prepared for.</span>\n *\n * ![](fromEventPattern.png)\n *\n * `fromEventPattern` allows you to convert into an Observable any API that supports registering handler functions\n * for events. It is similar to {@link fromEvent}, but far\n * more flexible. In fact, all use cases of {@link fromEvent} could be easily handled by\n * `fromEventPattern` (although in slightly more verbose way).\n *\n * This operator accepts as a first argument an `addHandler` function, which will be injected with\n * handler parameter. That handler is actually an event handler function that you now can pass\n * to API expecting it. `addHandler` will be called whenever Observable\n * returned by the operator is subscribed, so registering handler in API will not\n * necessarily happen when `fromEventPattern` is called.\n *\n * After registration, every time an event that we listen to happens,\n * Observable returned by `fromEventPattern` will emit value that event handler\n * function was called with. Note that if event handler was called with more\n * then one argument, second and following arguments will not appear in the Observable.\n *\n * If API you are using allows to unregister event handlers as well, you can pass to `fromEventPattern`\n * another function - `removeHandler` - as a second parameter. It will be injected\n * with the same handler function as before, which now you can use to unregister\n * it from the API. `removeHandler` will be called when consumer of resulting Observable\n * unsubscribes from it.\n *\n * In some APIs unregistering is actually handled differently. Method registering an event handler\n * returns some kind of token, which is later used to identify which function should\n * be unregistered or it itself has method that unregisters event handler.\n * If that is the case with your API, make sure token returned\n * by registering method is returned by `addHandler`. Then it will be passed\n * as a second argument to `removeHandler`, where you will be able to use it.\n *\n * If you need access to all event handler parameters (not only the first one),\n * or you need to transform them in any way, you can call `fromEventPattern` with optional\n * third parameter - project function which will accept all arguments passed to\n * event handler when it is called. Whatever is returned from project function will appear on\n * resulting stream instead of usual event handlers first argument. This means\n * that default project can be thought of as function that takes its first parameter\n * and ignores the rest.\n *\n * ## Example\n * ### Emits clicks happening on the DOM document\n *\n * ```javascript\n * function addClickHandler(handler) {\n *   document.addEventListener('click', handler);\n * }\n *\n * function removeClickHandler(handler) {\n *   document.removeEventListener('click', handler);\n * }\n *\n * const clicks = fromEventPattern(\n *   addClickHandler,\n *   removeClickHandler\n * );\n * clicks.subscribe(x => console.log(x));\n *\n * // Whenever you click anywhere in the browser, DOM MouseEvent\n * // object will be logged.\n * ```\n *\n * ## Example\n * ### Use with API that returns cancellation token\n *\n * ```javascript\n * const token = someAPI.registerEventHandler(function() {});\n * someAPI.unregisterEventHandler(token); // this APIs cancellation method accepts\n *                                        // not handler itself, but special token.\n *\n * const someAPIObservable = fromEventPattern(\n *   function(handler) { return someAPI.registerEventHandler(handler); }, // Note that we return the token here...\n *   function(handler, token) { someAPI.unregisterEventHandler(token); }  // ...to then use it here.\n * );\n * ```\n *\n * ## Example\n * ### Use with project function\n *\n * ```javascript\n * someAPI.registerEventHandler((eventType, eventMessage) => {\n *   console.log(eventType, eventMessage); // Logs \"EVENT_TYPE\" \"EVENT_MESSAGE\" to console.\n * });\n *\n * const someAPIObservable = fromEventPattern(\n *   handler => someAPI.registerEventHandler(handler),\n *   handler => someAPI.unregisterEventHandler(handler)\n *   (eventType, eventMessage) => eventType + \" --- \" + eventMessage // without that function only \"EVENT_TYPE\"\n * );                                                                // would be emitted by the Observable\n *\n * someAPIObservable.subscribe(value => console.log(value));\n *\n * // Logs:\n * // \"EVENT_TYPE --- EVENT_MESSAGE\"\n * ```\n *\n * @see {@link fromEvent}\n * @see {@link bindCallback}\n * @see {@link bindNodeCallback}\n *\n * @param {function(handler: Function): any} addHandler A function that takes\n * a `handler` function as argument and attaches it somehow to the actual\n * source of events.\n * @param {function(handler: Function, token?: any): void} [removeHandler] A function that\n * takes a `handler` function as an argument and removes it from the event source. If `addHandler`\n * returns some kind of token, `removeHandler` function will have it as a second parameter.\n * @param {function(...args: any): T} [project] A function to\n * transform results. It takes the arguments from the event handler and\n * should return a single value.\n * @return {Observable<T>} Observable which, when an event happens, emits first parameter\n * passed to registered event handler. Alternatively it emits whatever project function returns\n * at that moment.\n * @static true\n * @name fromEventPattern\n * @owner Observable\n */\n\nexport function fromEventPattern<T>(addHandler: (handler: Function) => any,\n                                    removeHandler?: (handler: Function, signal?: any) => void,\n                                    resultSelector?: (...args: any[]) => T): Observable<T | T[]> {\n\n  if (resultSelector) {\n    // DEPRECATED PATH\n    return fromEventPattern<T>(addHandler, removeHandler).pipe(\n      map(args => isArray(args) ? resultSelector(...args) : resultSelector(args))\n    );\n  }\n\n  return new Observable<T | T[]>(subscriber => {\n    const handler = (...e: T[]) => subscriber.next(e.length === 1 ? e[0] : e);\n\n    let retValue: any;\n    try {\n      retValue = addHandler(handler);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n\n    if (!isFunction(removeHandler)) {\n      return undefined;\n    }\n\n    return () => removeHandler(handler, retValue) ;\n  });\n}\n","import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { identity } from '../util/identity';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { isScheduler } from '../util/isScheduler';\n\nexport type ConditionFunc<S> = (state: S) => boolean;\nexport type IterateFunc<S> = (state: S) => S;\nexport type ResultFunc<S, T> = (state: S) => T;\n\ninterface SchedulerState<T, S> {\n  needIterate?: boolean;\n  state: S;\n  subscriber: Subscriber<T>;\n  condition?: ConditionFunc<S>;\n  iterate: IterateFunc<S>;\n  resultSelector: ResultFunc<S, T>;\n}\n\nexport interface GenerateBaseOptions<S> {\n  /**\n   * Initial state.\n   */\n  initialState: S;\n  /**\n   * Condition function that accepts state and returns boolean.\n   * When it returns false, the generator stops.\n   * If not specified, a generator never stops.\n   */\n  condition?: ConditionFunc<S>;\n  /**\n   * Iterate function that accepts state and returns new state.\n   */\n  iterate: IterateFunc<S>;\n  /**\n   * SchedulerLike to use for generation process.\n   * By default, a generator starts immediately.\n   */\n  scheduler?: SchedulerLike;\n}\n\nexport interface GenerateOptions<T, S> extends GenerateBaseOptions<S> {\n  /**\n   * Result selection function that accepts state and returns a value to emit.\n   */\n  resultSelector: ResultFunc<S, T>;\n}\n\n/**\n * Generates an observable sequence by running a state-driven loop\n * producing the sequence's elements, using the specified scheduler\n * to send out observer messages.\n *\n * ![](generate.png)\n *\n * @example <caption>Produces sequence of 0, 1, 2, ... 9, then completes.</caption>\n * const res = generate(0, x => x < 10, x => x + 1, x => x);\n *\n * @example <caption>Using asap scheduler, produces sequence of 2, 3, 5, then completes.</caption>\n * const res = generate(1, x => x < 5, x =>  * 2, x => x + 1, asap);\n *\n * @see {@link from}\n * @see {@link Observable}\n *\n * @param {S} initialState Initial state.\n * @param {function (state: S): boolean} condition Condition to terminate generation (upon returning false).\n * @param {function (state: S): S} iterate Iteration step function.\n * @param {function (state: S): T} resultSelector Selector function for results produced in the sequence. (deprecated)\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} on which to run the generator loop. If not provided, defaults to emit immediately.\n * @returns {Observable<T>} The generated sequence.\n */\n  export function generate<T, S>(initialState: S,\n                                 condition: ConditionFunc<S>,\n                                 iterate: IterateFunc<S>,\n                                 resultSelector: ResultFunc<S, T>,\n                                 scheduler?: SchedulerLike): Observable<T>;\n\n/**\n * Generates an Observable by running a state-driven loop\n * that emits an element on each iteration.\n *\n * <span class=\"informal\">Use it instead of nexting values in a for loop.</span>\n *\n * <img src=\"./img/generate.png\" width=\"100%\">\n *\n * `generate` allows you to create stream of values generated with a loop very similar to\n * traditional for loop. First argument of `generate` is a beginning value. Second argument\n * is a function that accepts this value and tests if some condition still holds. If it does,\n * loop continues, if not, it stops. Third value is a function which takes previously defined\n * value and modifies it in some way on each iteration. Note how these three parameters\n * are direct equivalents of three expressions in regular for loop: first expression\n * initializes some state (for example numeric index), second tests if loop can make next\n * iteration (for example if index is lower than 10) and third states how defined value\n * will be modified on every step (index will be incremented by one).\n *\n * Return value of a `generate` operator is an Observable that on each loop iteration\n * emits a value. First, condition function is ran. If it returned true, Observable\n * emits currently stored value (initial value at the first iteration) and then updates\n * that value with iterate function. If at some point condition returned false, Observable\n * completes at that moment.\n *\n * Optionally you can pass fourth parameter to `generate` - a result selector function which allows you\n * to immediately map value that would normally be emitted by an Observable.\n *\n * If you find three anonymous functions in `generate` call hard to read, you can provide\n * single object to the operator instead. That object has properties: `initialState`,\n * `condition`, `iterate` and `resultSelector`, which should have respective values that you\n * would normally pass to `generate`. `resultSelector` is still optional, but that form\n * of calling `generate` allows you to omit `condition` as well. If you omit it, that means\n * condition always holds, so output Observable will never complete.\n *\n * Both forms of `generate` can optionally accept a scheduler. In case of multi-parameter call,\n * scheduler simply comes as a last argument (no matter if there is resultSelector\n * function or not). In case of single-parameter call, you can provide it as a\n * `scheduler` property on object passed to the operator. In both cases scheduler decides when\n * next iteration of the loop will happen and therefore when next value will be emitted\n * by the Observable. For example to ensure that each value is pushed to the observer\n * on separate task in event loop, you could use `async` scheduler. Note that\n * by default (when no scheduler is passed) values are simply emitted synchronously.\n *\n *\n * @example <caption>Use with condition and iterate functions.</caption>\n * const generated = generate(0, x => x < 3, x => x + 1);\n *\n * generated.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('Yo!')\n * );\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * // \"Yo!\"\n *\n *\n * @example <caption>Use with condition, iterate and resultSelector functions.</caption>\n * const generated = generate(0, x => x < 3, x => x + 1, x => x * 1000);\n *\n * generated.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('Yo!')\n * );\n *\n * // Logs:\n * // 0\n * // 1000\n * // 2000\n * // \"Yo!\"\n *\n *\n * @example <caption>Use with options object.</caption>\n * const generated = generate({\n *   initialState: 0,\n *   condition(value) { return value < 3; },\n *   iterate(value) { return value + 1; },\n *   resultSelector(value) { return value * 1000; }\n * });\n *\n * generated.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('Yo!')\n * );\n *\n * // Logs:\n * // 0\n * // 1000\n * // 2000\n * // \"Yo!\"\n *\n * @example <caption>Use options object without condition function.</caption>\n * const generated = generate({\n *   initialState: 0,\n *   iterate(value) { return value + 1; },\n *   resultSelector(value) { return value * 1000; }\n * });\n *\n * generated.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('Yo!') // This will never run.\n * );\n *\n * // Logs:\n * // 0\n * // 1000\n * // 2000\n * // 3000\n * // ...and never stops.\n *\n *\n * @see {@link from}\n * @see {@link create}\n *\n * @param {S} initialState Initial state.\n * @param {function (state: S): boolean} condition Condition to terminate generation (upon returning false).\n * @param {function (state: S): S} iterate Iteration step function.\n * @param {function (state: S): T} [resultSelector] Selector function for results produced in the sequence.\n * @param {Scheduler} [scheduler] A {@link Scheduler} on which to run the generator loop. If not provided, defaults to emitting immediately.\n * @return {Observable<T>} The generated sequence.\n */\nexport function generate<S>(initialState: S,\n                            condition: ConditionFunc<S>,\n                            iterate: IterateFunc<S>,\n                            scheduler?: SchedulerLike): Observable<S>;\n\n/**\n * Generates an observable sequence by running a state-driven loop\n * producing the sequence's elements, using the specified scheduler\n * to send out observer messages.\n * The overload accepts options object that might contain initial state, iterate,\n * condition and scheduler.\n *\n * ![](generate.png)\n *\n * @example <caption>Produces sequence of 0, 1, 2, ... 9, then completes.</caption>\n * const res = generate({\n *   initialState: 0,\n *   condition: x => x < 10,\n *   iterate: x => x + 1,\n * });\n *\n * @see {@link from}\n * @see {@link Observable}\n *\n * @param {GenerateBaseOptions<S>} options Object that must contain initialState, iterate and might contain condition and scheduler.\n * @returns {Observable<S>} The generated sequence.\n */\nexport function generate<S>(options: GenerateBaseOptions<S>): Observable<S>;\n\n/**\n * Generates an observable sequence by running a state-driven loop\n * producing the sequence's elements, using the specified scheduler\n * to send out observer messages.\n * The overload accepts options object that might contain initial state, iterate,\n * condition, result selector and scheduler.\n *\n * ![](generate.png)\n *\n * @example <caption>Produces sequence of 0, 1, 2, ... 9, then completes.</caption>\n * const res = generate({\n *   initialState: 0,\n *   condition: x => x < 10,\n *   iterate: x => x + 1,\n *   resultSelector: x => x,\n * });\n *\n * @see {@link from}\n * @see {@link Observable}\n *\n * @param {GenerateOptions<T, S>} options Object that must contain initialState, iterate, resultSelector and might contain condition and scheduler.\n * @returns {Observable<T>} The generated sequence.\n */\nexport function generate<T, S>(options: GenerateOptions<T, S>): Observable<T>;\n\nexport function generate<T, S>(initialStateOrOptions: S | GenerateOptions<T, S>,\n                               condition?: ConditionFunc<S>,\n                               iterate?: IterateFunc<S>,\n                               resultSelectorOrObservable?: (ResultFunc<S, T>) | SchedulerLike,\n                               scheduler?: SchedulerLike): Observable<T> {\n\n  let resultSelector: ResultFunc<S, T>;\n  let initialState: S;\n\n  if (arguments.length == 1) {\n    const options = initialStateOrOptions as GenerateOptions<T, S>;\n    initialState = options.initialState;\n    condition = options.condition;\n    iterate = options.iterate;\n    resultSelector = options.resultSelector || identity as ResultFunc<S, T>;\n    scheduler = options.scheduler;\n  } else if (resultSelectorOrObservable === undefined || isScheduler(resultSelectorOrObservable)) {\n    initialState = initialStateOrOptions as S;\n    resultSelector = identity as ResultFunc<S, T>;\n    scheduler = resultSelectorOrObservable as SchedulerLike;\n  } else {\n    initialState = initialStateOrOptions as S;\n    resultSelector = resultSelectorOrObservable as ResultFunc<S, T>;\n  }\n\n  return new Observable<T>(subscriber => {\n    let state = initialState;\n    if (scheduler) {\n      return scheduler.schedule<SchedulerState<T, S>>(dispatch, 0, {\n        subscriber,\n        iterate,\n        condition,\n        resultSelector,\n        state\n      });\n    }\n\n    do {\n      if (condition) {\n        let conditionResult: boolean;\n        try {\n          conditionResult = condition(state);\n        } catch (err) {\n          subscriber.error(err);\n          return undefined;\n        }\n        if (!conditionResult) {\n          subscriber.complete();\n          break;\n        }\n      }\n      let value: T;\n      try {\n        value = resultSelector(state);\n      } catch (err) {\n        subscriber.error(err);\n        return undefined;\n      }\n      subscriber.next(value);\n      if (subscriber.closed) {\n        break;\n      }\n      try {\n        state = iterate(state);\n      } catch (err) {\n        subscriber.error(err);\n        return undefined;\n      }\n    } while (true);\n\n    return undefined;\n  });\n}\n\nfunction dispatch<T, S>(this: SchedulerAction<SchedulerState<T, S>>, state: SchedulerState<T, S>) {\n  const { subscriber, condition } = state;\n  if (subscriber.closed) {\n    return undefined;\n  }\n  if (state.needIterate) {\n    try {\n      state.state = state.iterate(state.state);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n  } else {\n    state.needIterate = true;\n  }\n  if (condition) {\n    let conditionResult: boolean;\n    try {\n      conditionResult = condition(state.state);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n    if (!conditionResult) {\n      subscriber.complete();\n      return undefined;\n    }\n    if (subscriber.closed) {\n      return undefined;\n    }\n  }\n  let value: T;\n  try {\n    value = state.resultSelector(state.state);\n  } catch (err) {\n    subscriber.error(err);\n    return undefined;\n  }\n  if (subscriber.closed) {\n    return undefined;\n  }\n  subscriber.next(value);\n  if (subscriber.closed) {\n    return undefined;\n  }\n  return this.schedule(state);\n}\n","import { Observable } from '../Observable';\nimport { defer } from './defer';\nimport { EMPTY } from './empty';\nimport { SubscribableOrPromise } from '../types';\n\n/**\n * Decides at subscription time which Observable will actually be subscribed.\n *\n * <span class=\"informal\">`If` statement for Observables.</span>\n *\n * `iif` accepts a condition function and two Observables. When\n * an Observable returned by the operator is subscribed, condition function will be called.\n * Based on what boolean it returns at that moment, consumer will subscribe either to\n * the first Observable (if condition was true) or to the second (if condition was false). Condition\n * function may also not return anything - in that case condition will be evaluated as false and\n * second Observable will be subscribed.\n *\n * Note that Observables for both cases (true and false) are optional. If condition points to an Observable that\n * was left undefined, resulting stream will simply complete immediately. That allows you to, rather\n * then controlling which Observable will be subscribed, decide at runtime if consumer should have access\n * to given Observable or not.\n *\n * If you have more complex logic that requires decision between more than two Observables, {@link defer}\n * will probably be a better choice. Actually `iif` can be easily implemented with {@link defer}\n * and exists only for convenience and readability reasons.\n *\n *\n * ## Examples\n * ### Change at runtime which Observable will be subscribed\n * ```javascript\n * let subscribeToFirst;\n * const firstOrSecond = iif(\n *   () => subscribeToFirst,\n *   of('first'),\n *   of('second'),\n * );\n *\n * subscribeToFirst = true;\n * firstOrSecond.subscribe(value => console.log(value));\n *\n * // Logs:\n * // \"first\"\n *\n * subscribeToFirst = false;\n * firstOrSecond.subscribe(value => console.log(value));\n *\n * // Logs:\n * // \"second\"\n *\n * ```\n *\n * ### Control an access to an Observable\n * ```javascript\n * let accessGranted;\n * const observableIfYouHaveAccess = iif(\n *   () => accessGranted,\n *   of('It seems you have an access...'), // Note that only one Observable is passed to the operator.\n * );\n *\n * accessGranted = true;\n * observableIfYouHaveAccess.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('The end'),\n * );\n *\n * // Logs:\n * // \"It seems you have an access...\"\n * // \"The end\"\n *\n * accessGranted = false;\n * observableIfYouHaveAccess.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('The end'),\n * );\n *\n * // Logs:\n * // \"The end\"\n * ```\n *\n * @see {@link defer}\n *\n * @param {function(): boolean} condition Condition which Observable should be chosen.\n * @param {Observable} [trueObservable] An Observable that will be subscribed if condition is true.\n * @param {Observable} [falseObservable] An Observable that will be subscribed if condition is false.\n * @return {Observable} Either first or second Observable, depending on condition.\n * @static true\n * @name iif\n * @owner Observable\n */\nexport function iif<T, F>(\n  condition: () => boolean,\n  trueResult: SubscribableOrPromise<T> = EMPTY,\n  falseResult: SubscribableOrPromise<F> = EMPTY\n): Observable<T|F> {\n  return defer<T|F>(() => condition() ? trueResult : falseResult);\n}\n","import { isArray } from './isArray';\n\nexport function isNumeric(val: any): val is number | string {\n  // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n  // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n  // subtraction forces infinities to NaN\n  // adding 1 corrects loss of precision from parseFloat (#15100)\n  return !isArray(val) && (val - parseFloat(val) + 1) >= 0;\n}\n","import { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { isNumeric } from '../util/isNumeric';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * Creates an Observable that emits sequential numbers every specified\n * interval of time, on a specified {@link SchedulerLike}.\n *\n * <span class=\"informal\">Emits incremental numbers periodically in time.\n * </span>\n *\n * ![](interval.png)\n *\n * `interval` returns an Observable that emits an infinite sequence of\n * ascending integers, with a constant interval of time of your choosing\n * between those emissions. The first emission is not sent immediately, but\n * only after the first period has passed. By default, this operator uses the\n * `async` {@link SchedulerLike} to provide a notion of time, but you may pass any\n * {@link SchedulerLike} to it.\n *\n * ## Example\n * Emits ascending numbers, one every second (1000ms) up to the number 3\n * ```javascript\n * import { interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const numbers = interval(1000);\n *\n * const takeFourNumbers = numbers.pipe(take(4));\n *\n * takeFourNumbers.subscribe(x => console.log('Next: ', x));\n *\n * // Logs:\n * // Next: 0\n * // Next: 1\n * // Next: 2\n * // Next: 3\n * ```\n *\n * @see {@link timer}\n * @see {@link delay}\n *\n * @param {number} [period=0] The interval size in milliseconds (by default)\n * or the time unit determined by the scheduler's clock.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for scheduling\n * the emission of values, and providing a notion of \"time\".\n * @return {Observable} An Observable that emits a sequential number each time\n * interval.\n * @static true\n * @name interval\n * @owner Observable\n */\nexport function interval(period = 0,\n                         scheduler: SchedulerLike = async): Observable<number> {\n  if (!isNumeric(period) || period < 0) {\n    period = 0;\n  }\n\n  if (!scheduler || typeof scheduler.schedule !== 'function') {\n    scheduler = async;\n  }\n\n  return new Observable<number>(subscriber => {\n    subscriber.add(\n      scheduler.schedule(dispatch, period, { subscriber, counter: 0, period })\n    );\n    return subscriber;\n  });\n}\n\nfunction dispatch(this: SchedulerAction<IntervalState>, state: IntervalState) {\n  const { subscriber, counter, period } = state;\n  subscriber.next(counter);\n  this.schedule({ subscriber, counter: counter + 1, period }, period);\n}\n\ninterface IntervalState {\n  subscriber: Subscriber<number>;\n  counter: number;\n  period: number;\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike} from '../types';\nimport { isScheduler } from '../util/isScheduler';\nimport { mergeAll } from '../operators/mergeAll';\nimport { fromArray } from './fromArray';\n\n/* tslint:disable:max-line-length */\nexport function merge<T>(v1: ObservableInput<T>, scheduler?: SchedulerLike): Observable<T>;\nexport function merge<T>(v1: ObservableInput<T>, concurrent?: number, scheduler?: SchedulerLike): Observable<T>;\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, scheduler?: SchedulerLike): Observable<T | T2>;\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, concurrent?: number, scheduler?: SchedulerLike): Observable<T | T2>;\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler?: SchedulerLike): Observable<T | T2 | T3>;\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, concurrent?: number, scheduler?: SchedulerLike): Observable<T | T2 | T3>;\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4>;\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, concurrent?: number, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4>;\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4 | T5>;\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, concurrent?: number, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4 | T5>;\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, concurrent?: number, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function merge<T>(...observables: (ObservableInput<T> | SchedulerLike | number)[]): Observable<T>;\nexport function merge<T, R>(...observables: (ObservableInput<any> | SchedulerLike | number)[]): Observable<R>;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * ![](merge.png)\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * ## Examples\n * ### Merge together two Observables: 1s interval and clicks\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const timer = interval(1000);\n * const clicksOrTimer = merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // timer will emit ascending values, one every second(1000ms) to console\n * // clicks logs MouseEvents to console everytime the \"document\" is clicked\n * // Since the two streams are merged you see these happening\n * // as they occur.\n * ```\n *\n * ### Merge together 3 Observables, but only 2 run concurrently\n * ```javascript\n * const timer1 = interval(1000).pipe(take(10));\n * const timer2 = interval(2000).pipe(take(6));\n * const timer3 = interval(500).pipe(take(10));\n * const concurrent = 2; // the argument\n * const merged = merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - First timer1 and timer2 will run concurrently\n * // - timer1 will emit a value every 1000ms for 10 iterations\n * // - timer2 will emit a value every 2000ms for 6 iterations\n * // - after timer1 hits it's max iteration, timer2 will\n * //   continue, and timer3 will start to run concurrently with timer2\n * // - when timer2 hits it's max iteration it terminates, and\n * //   timer3 will continue to emit a value every 500ms until it is complete\n * ```\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {...ObservableInput} observables Input Observables to merge together.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n * @static true\n * @name merge\n * @owner Observable\n */\nexport function merge<T, R>(...observables: Array<ObservableInput<any> | SchedulerLike | number>): Observable<R> {\n let concurrent = Number.POSITIVE_INFINITY;\n let scheduler: SchedulerLike = null;\n  let last: any = observables[observables.length - 1];\n  if (isScheduler(last)) {\n    scheduler = <SchedulerLike>observables.pop();\n    if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n      concurrent = <number>observables.pop();\n    }\n  } else if (typeof last === 'number') {\n    concurrent = <number>observables.pop();\n  }\n\n  if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable) {\n    return <Observable<R>>observables[0];\n  }\n\n  return mergeAll<R>(concurrent)(fromArray<any>(observables, scheduler));\n}\n","import { Observable } from '../Observable';\nimport { noop } from '../util/noop';\n\n/**\n * An Observable that emits no items to the Observer and never completes.\n *\n * ![](never.png)\n *\n * A simple Observable that emits neither values nor errors nor the completion\n * notification. It can be used for testing purposes or for composing with other\n * Observables. Please note that by never emitting a complete notification, this\n * Observable keeps the subscription from being disposed automatically.\n * Subscriptions need to be manually disposed.\n *\n * ##  Example\n * ### Emit the number 7, then never emit anything else (not even complete)\n * ```javascript\n * function info() {\n *   console.log('Will not be called');\n * }\n * const result = NEVER.pipe(startWith(7));\n * result.subscribe(x => console.log(x), info, info);\n *\n * ```\n *\n * @see {@link Observable}\n * @see {@link index/EMPTY}\n * @see {@link of}\n * @see {@link throwError}\n */\nexport const NEVER = new Observable<never>(noop);\n\n/**\n * @deprecated Deprecated in favor of using {@link NEVER} constant.\n */\nexport function never () {\n  return NEVER;\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput } from '../types';\nimport { from } from './from';\nimport { isArray } from '../util/isArray';\nimport { EMPTY } from './empty';\n\n/* tslint:disable:max-line-length */\nexport function onErrorResumeNext<R>(v: ObservableInput<R>): Observable<R>;\nexport function onErrorResumeNext<T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<R>;\nexport function onErrorResumeNext<T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<R>;\nexport function onErrorResumeNext<T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<R>;\nexport function onErrorResumeNext<T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<R>;\n\nexport function onErrorResumeNext<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\nexport function onErrorResumeNext<R>(array: ObservableInput<any>[]): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables no matter what, even if it means swallowing errors.</span>\n *\n * ![](onErrorResumeNext.png)\n *\n * `onErrorResumeNext` Will subscribe to each observable source it is provided, in order.\n * If the source it's subscribed to emits an error or completes, it will move to the next source\n * without error.\n *\n * If `onErrorResumeNext` is provided no arguments, or a single, empty array, it will return {@link index/EMPTY}.\n *\n * `onErrorResumeNext` is basically {@link concat}, only it will continue, even if one of its\n * sources emits an error.\n *\n * Note that there is no way to handle any errors thrown by sources via the resuult of\n * `onErrorResumeNext`. If you want to handle errors thrown in any given source, you can\n * always use the {@link catchError} operator on them before passing them into `onErrorResumeNext`.\n *\n * ## Example\n * Subscribe to the next Observable after map fails</caption>\n * ```javascript\n * import { onErrorResumeNext, of } from 'rxjs';\n * import { map } from 'rxjs/operators';\n *\n * onErrorResumeNext(\n *  of(1, 2, 3, 0).pipe(\n *    map(x => {\n *      if (x === 0) throw Error();\n *      return 10 / x;\n *    })\n *  ),\n *  of(1, 2, 3),\n * )\n * .subscribe(\n *   val => console.log(val),\n *   err => console.log(err),          // Will never be called.\n *   () => console.log('done'),\n * );\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // \"done\"\n * ```\n *\n * @see {@link concat}\n * @see {@link catchError}\n *\n * @param {...ObservableInput} sources Observables (or anything that *is* observable) passed either directly or as an array.\n * @return {Observable} An Observable that concatenates all sources, one after the other,\n * ignoring all errors, such that any error causes it to move on to the next source.\n */\nexport function onErrorResumeNext<T, R>(...sources: Array<ObservableInput<any> |\n                                                              Array<ObservableInput<any>> |\n                                                              ((...values: Array<any>) => R)>): Observable<R> {\n\n  if (sources.length === 0) {\n    return EMPTY;\n  }\n\n  const [ first, ...remainder ] = sources;\n\n  if (sources.length === 1 && isArray(first)) {\n    return onErrorResumeNext(...first);\n  }\n\n  return new Observable(subscriber => {\n    const subNext = () => subscriber.add(\n      onErrorResumeNext(...remainder).subscribe(subscriber)\n    );\n\n    return from(first).subscribe({\n      next(value) { subscriber.next(value); },\n      error: subNext,\n      complete: subNext,\n    });\n  });\n}\n","import { Observable } from '../Observable';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\n\n/**\n * Convert an object into an Observable of `[key, value]` pairs.\n *\n * <span class=\"informal\">Turn entries of an object into a stream.</span>\n *\n * <img src=\"./img/pairs.png\" width=\"100%\">\n *\n * `pairs` takes an arbitrary object and returns an Observable that emits arrays. Each\n * emitted array has exactly two elements - the first is a key from the object\n * and the second is a value corresponding to that key. Keys are extracted from\n * an object via `Object.keys` function, which means that they will be only\n * enumerable keys that are present on an object directly - not ones inherited\n * via prototype chain.\n *\n * By default these arrays are emitted synchronously. To change that you can\n * pass a {@link SchedulerLike} as a second argument to `pairs`.\n *\n * @example <caption>Converts a javascript object to an Observable</caption>\n * ```javascript\n * const obj = {\n *   foo: 42,\n *   bar: 56,\n *   baz: 78\n * };\n *\n * pairs(obj)\n * .subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('the end!')\n * );\n *\n * // Logs:\n * // [\"foo\": 42],\n * // [\"bar\": 56],\n * // [\"baz\": 78],\n * // \"the end!\"\n * ```\n *\n * @param {Object} obj The object to inspect and turn into an\n * Observable sequence.\n * @param {Scheduler} [scheduler] An optional IScheduler to schedule\n * when resulting Observable will emit values.\n * @returns {(Observable<Array<string|T>>)} An observable sequence of\n * [key, value] pairs from the object.\n */\nexport function pairs<T>(obj: Object, scheduler?: SchedulerLike): Observable<[string, T]> {\n  if (!scheduler) {\n    return new Observable<[string, T]>(subscriber => {\n      const keys = Object.keys(obj);\n      for (let i = 0; i < keys.length && !subscriber.closed; i++) {\n        const key = keys[i];\n        if (obj.hasOwnProperty(key)) {\n          subscriber.next([key, obj[key]]);\n        }\n      }\n      subscriber.complete();\n    });\n  } else {\n    return new Observable<[string, T]>(subscriber => {\n      const keys = Object.keys(obj);\n      const subscription = new Subscription();\n      subscription.add(\n        scheduler.schedule<{ keys: string[], index: number, subscriber: Subscriber<[string, T]>, subscription: Subscription, obj: Object }>\n          (dispatch, 0, { keys, index: 0, subscriber, subscription, obj }));\n      return subscription;\n    });\n  }\n}\n\n/** @internal */\nexport function dispatch<T>(this: SchedulerAction<any>,\n                            state: { keys: string[], index: number, subscriber: Subscriber<[string, T]>, subscription: Subscription, obj: Object }) {\n  const { keys, index, subscriber, subscription, obj } = state;\n  if (!subscriber.closed) {\n    if (index < keys.length) {\n      const key = keys[index];\n      subscriber.next([key, obj[key]]);\n      subscription.add(this.schedule({ keys, index: index + 1, subscriber, subscription, obj }));\n    } else {\n      subscriber.complete();\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { fromArray } from './fromArray';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { TeardownLogic } from '../types';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\n/**\n * Returns an Observable that mirrors the first source Observable to emit an item.\n *\n * ## Example\n * ### Subscribes to the observable that was the first to start emitting.\n *\n * ```javascript\n * const obs1 = interval(1000).pipe(mapTo('fast one'));\n * const obs2 = interval(3000).pipe(mapTo('medium one'));\n * const obs3 = interval(5000).pipe(mapTo('slow one'));\n *\n * race(obs3, obs1, obs2)\n * .subscribe(\n *   winner => console.log(winner)\n * );\n *\n * // result:\n * // a series of 'fast one'\n * ```\n *\n * @param {...Observables} ...observables sources used to race for which Observable emits first.\n * @return {Observable} an Observable that mirrors the output of the first Observable to emit an item.\n * @static true\n * @name race\n * @owner Observable\n */\nexport function race<T>(observables: Array<Observable<T>>): Observable<T>;\nexport function race<T>(observables: Array<Observable<any>>): Observable<T>;\nexport function race<T>(...observables: Array<Observable<T> | Array<Observable<T>>>): Observable<T>;\nexport function race<T>(...observables: Array<Observable<any> | Array<Observable<any>>>): Observable<T> {\n  // if the only argument is an array, it was most likely called with\n  // `race([obs1, obs2, ...])`\n  if (observables.length === 1) {\n    if (isArray(observables[0])) {\n      observables = <Array<Observable<any>>>observables[0];\n    } else {\n      return <Observable<any>>observables[0];\n    }\n  }\n\n  return fromArray(observables, undefined).lift(new RaceOperator<T>());\n}\n\nexport class RaceOperator<T> implements Operator<T, T> {\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RaceSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class RaceSubscriber<T> extends OuterSubscriber<T, T> {\n  private hasFirst: boolean = false;\n  private observables: Observable<any>[] = [];\n  private subscriptions: Subscription[] = [];\n\n  constructor(destination: Subscriber<T>) {\n    super(destination);\n  }\n\n  protected _next(observable: any): void {\n    this.observables.push(observable);\n  }\n\n  protected _complete() {\n    const observables = this.observables;\n    const len = observables.length;\n\n    if (len === 0) {\n      this.destination.complete();\n    } else {\n      for (let i = 0; i < len && !this.hasFirst; i++) {\n        let observable = observables[i];\n        let subscription = subscribeToResult(this, observable, observable as any, i);\n\n        if (this.subscriptions) {\n          this.subscriptions.push(subscription);\n        }\n        this.add(subscription);\n      }\n      this.observables = null;\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: T,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, T>): void {\n    if (!this.hasFirst) {\n      this.hasFirst = true;\n\n      for (let i = 0; i < this.subscriptions.length; i++) {\n        if (i !== outerIndex) {\n          let subscription = this.subscriptions[i];\n\n          subscription.unsubscribe();\n          this.remove(subscription);\n        }\n      }\n\n      this.subscriptions = null;\n    }\n\n    this.destination.next(innerValue);\n  }\n}\n","import { SchedulerAction, SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\n\n/**\n * Creates an Observable that emits a sequence of numbers within a specified\n * range.\n *\n * <span class=\"informal\">Emits a sequence of numbers in a range.</span>\n *\n * ![](range.png)\n *\n * `range` operator emits a range of sequential integers, in order, where you\n * select the `start` of the range and its `length`. By default, uses no\n * {@link SchedulerLike} and just delivers the notifications synchronously, but may use\n * an optional {@link SchedulerLike} to regulate those deliveries.\n *\n * ## Example\n * Emits the numbers 1 to 10</caption>\n * ```javascript\n * const numbers = range(1, 10);\n * numbers.subscribe(x => console.log(x));\n * ```\n * @see {@link timer}\n * @see {@link index/interval}\n *\n * @param {number} [start=0] The value of the first integer in the sequence.\n * @param {number} [count=0] The number of sequential integers to generate.\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} to use for scheduling\n * the emissions of the notifications.\n * @return {Observable} An Observable of numbers that emits a finite range of\n * sequential integers.\n * @static true\n * @name range\n * @owner Observable\n */\nexport function range(start: number = 0,\n                      count: number = 0,\n                      scheduler?: SchedulerLike): Observable<number> {\n  return new Observable<number>(subscriber => {\n    let index = 0;\n    let current = start;\n\n    if (scheduler) {\n      return scheduler.schedule(dispatch, 0, {\n        index, count, start, subscriber\n      });\n    } else {\n      do {\n        if (index++ >= count) {\n          subscriber.complete();\n          break;\n        }\n        subscriber.next(current++);\n        if (subscriber.closed) {\n          break;\n        }\n      } while (true);\n    }\n\n    return undefined;\n  });\n}\n\n/** @internal */\nexport function dispatch(this: SchedulerAction<any>, state: any) {\n  const { start, index, count, subscriber } = state;\n\n  if (index >= count) {\n    subscriber.complete();\n    return;\n  }\n\n  subscriber.next(start);\n\n  if (subscriber.closed) {\n    return;\n  }\n\n  state.index = index + 1;\n  state.start = start + 1;\n\n  this.schedule(state);\n}\n","import { Observable } from '../Observable';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * Creates an Observable that starts emitting after an `dueTime` and\n * emits ever increasing numbers after each `period` of time thereafter.\n *\n * <span class=\"informal\">Its like {@link index/interval}, but you can specify when\n * should the emissions start.</span>\n *\n * ![](timer.png)\n *\n * `timer` returns an Observable that emits an infinite sequence of ascending\n * integers, with a constant interval of time, `period` of your choosing\n * between those emissions. The first emission happens after the specified\n * `dueTime`. The initial delay may be a `Date`. By default, this\n * operator uses the {@link asyncScheduler} {@link SchedulerLike} to provide a notion of time, but you\n * may pass any {@link SchedulerLike} to it. If `period` is not specified, the output\n * Observable emits only one value, `0`. Otherwise, it emits an infinite\n * sequence.\n *\n * ## Examples\n * ### Emits ascending numbers, one every second (1000ms), starting after 3 seconds\n * ```javascript\n * const numbers = timer(3000, 1000);\n * numbers.subscribe(x => console.log(x));\n * ```\n *\n * ### Emits one number after five seconds\n * ```javascript\n * const numbers = timer(5000);\n * numbers.subscribe(x => console.log(x));\n * ```\n * @see {@link index/interval}\n * @see {@link delay}\n *\n * @param {number|Date} [dueTime] The initial delay time specified as a Date object or as an integer denoting\n * milliseconds to wait before emitting the first value of 0`.\n * @param {number|SchedulerLike} [periodOrScheduler] The period of time between emissions of the\n * subsequent numbers.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for scheduling\n * the emission of values, and providing a notion of \"time\".\n * @return {Observable} An Observable that emits a `0` after the\n * `dueTime` and ever increasing numbers after each `period` of time\n * thereafter.\n * @static true\n * @name timer\n * @owner Observable\n */\nexport function timer(dueTime: number | Date = 0,\n                      periodOrScheduler?: number | SchedulerLike,\n                      scheduler?: SchedulerLike): Observable<number> {\n  let period = -1;\n  if (isNumeric(periodOrScheduler)) {\n    period = Number(periodOrScheduler) < 1 && 1 || Number(periodOrScheduler);\n  } else if (isScheduler(periodOrScheduler)) {\n    scheduler = periodOrScheduler as any;\n  }\n\n  if (!isScheduler(scheduler)) {\n    scheduler = async;\n  }\n\n  return new Observable(subscriber => {\n    const due = isNumeric(dueTime)\n      ? (dueTime as number)\n      : (+dueTime - scheduler.now());\n\n    return scheduler.schedule(dispatch, due, {\n      index: 0, period, subscriber\n    });\n  });\n}\n\ninterface TimerState {\n  index: number;\n  period: number;\n  subscriber: Subscriber<number>;\n}\n\nfunction dispatch(this: SchedulerAction<TimerState>, state: TimerState) {\n  const { index, period, subscriber } = state;\n  subscriber.next(index);\n\n  if (subscriber.closed) {\n    return;\n  } else if (period === -1) {\n    return subscriber.complete();\n  }\n\n  state.index = index + 1;\n  this.schedule(state, period);\n}\n","import { Observable } from '../Observable';\nimport { Unsubscribable, ObservableInput } from '../types';\nimport { from } from './from'; // from from from! LAWL\nimport { EMPTY } from './empty';\n\n/**\n * Creates an Observable that uses a resource which will be disposed at the same time as the Observable.\n *\n * <span class=\"informal\">Use it when you catch yourself cleaning up after an Observable.</span>\n *\n * `using` is a factory operator, which accepts two functions. First function returns a disposable resource.\n * It can be an arbitrary object that implements `unsubscribe` method. Second function will be injected with\n * that object and should return an Observable. That Observable can use resource object during its execution.\n * Both functions passed to `using` will be called every time someone subscribes - neither an Observable nor\n * resource object will be shared in any way between subscriptions.\n *\n * When Observable returned by `using` is subscribed, Observable returned from the second function will be subscribed\n * as well. All its notifications (nexted values, completion and error events) will be emitted unchanged by the output\n * Observable. If however someone unsubscribes from the Observable or source Observable completes or errors by itself,\n * the `unsubscribe` method on resource object will be called. This can be used to do any necessary clean up, which\n * otherwise would have to be handled by hand. Note that complete or error notifications are not emitted when someone\n * cancels subscription to an Observable via `unsubscribe`, so `using` can be used as a hook, allowing you to make\n * sure that all resources which need to exist during an Observable execution will be disposed at appropriate time.\n *\n * @see {@link defer}\n *\n * @param {function(): ISubscription} resourceFactory A function which creates any resource object\n * that implements `unsubscribe` method.\n * @param {function(resource: ISubscription): Observable<T>} observableFactory A function which\n * creates an Observable, that can use injected resource object.\n * @return {Observable<T>} An Observable that behaves the same as Observable returned by `observableFactory`, but\n * which - when completed, errored or unsubscribed - will also call `unsubscribe` on created resource object.\n */\nexport function using<T>(resourceFactory: () => Unsubscribable | void,\n                         observableFactory: (resource: Unsubscribable | void) => ObservableInput<T> | void): Observable<T> {\n  return new Observable<T>(subscriber => {\n    let resource: Unsubscribable | void;\n\n    try {\n      resource = resourceFactory();\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n\n    let result: ObservableInput<T> | void;\n    try {\n      result = observableFactory(resource);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n\n    const source = result ? from(result) : EMPTY;\n    const subscription = source.subscribe(subscriber);\n    return () => {\n      subscription.unsubscribe();\n      if (resource) {\n        resource.unsubscribe();\n      }\n    };\n  });\n}\n","import { Observable } from '../Observable';\nimport { fromArray } from './fromArray';\nimport { isArray } from '../util/isArray';\nimport { Operator } from '../Operator';\nimport { ObservableInput, PartialObserver } from '../types';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { iterator as Symbol_iterator } from '../../internal/symbol/iterator';\n\n/* tslint:disable:max-line-length */\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<T, R>(v1: ObservableInput<T>, resultSelector: (v1: T) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<T, T2, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, resultSelector: (v1: T, v2: T2) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<T, T2, T3, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, resultSelector: (v1: T, v2: T2, v3: T3) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<T, T2, T3, T4, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, resultSelector: (v1: T, v2: T2, v3: T3, v4: T4) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<T, T2, T3, T4, T5, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, resultSelector: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<T, T2, T3, T4, T5, T6, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, resultSelector: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): Observable<R>;\n\nexport function zip<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>): Observable<[T, T2]>;\nexport function zip<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<[T, T2, T3]>;\nexport function zip<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<[T, T2, T3, T4]>;\nexport function zip<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<[T, T2, T3, T4, T5]>;\nexport function zip<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<[T, T2, T3, T4, T5, T6]>;\n\nexport function zip<T>(array: ObservableInput<T>[]): Observable<T[]>;\nexport function zip<R>(array: ObservableInput<any>[]): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<T, R>(array: ObservableInput<T>[], resultSelector: (...values: Array<T>) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<R>(array: ObservableInput<any>[], resultSelector: (...values: Array<any>) => R): Observable<R>;\n\nexport function zip<T>(...observables: Array<ObservableInput<T>>): Observable<T[]>;\nexport function zip<T, R>(...observables: Array<ObservableInput<T> | ((...values: Array<T>) => R)>): Observable<R>;\nexport function zip<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines multiple Observables to create an Observable whose values are calculated from the values, in order, of each\n * of its input Observables.\n *\n * If the latest parameter is a function, this function is used to compute the created value from the input values.\n * Otherwise, an array of the input values is returned.\n *\n * ## Example\n * Combine age and name from different sources\n * ```javascript\n * let age$ = of<number>(27, 25, 29);\n * let name$ = of<string>('Foo', 'Bar', 'Beer');\n * let isDev$ = of<boolean>(true, true, false);\n *\n * zip(age$, name$, isDev$).pipe(\n *   map((age: number, name: string, isDev: boolean) => ({ age, name, isDev })),\n * )\n * .subscribe(x => console.log(x));\n *\n * // outputs\n * // { age: 27, name: 'Foo', isDev: true }\n * // { age: 25, name: 'Bar', isDev: true }\n * // { age: 29, name: 'Beer', isDev: false }\n * ```\n * @param observables\n * @return {Observable<R>}\n * @static true\n * @name zip\n * @owner Observable\n */\nexport function zip<T, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R> {\n  const resultSelector = <((...ys: Array<any>) => R)> observables[observables.length - 1];\n  if (typeof resultSelector === 'function') {\n    observables.pop();\n  }\n  return fromArray(observables, undefined).lift(new ZipOperator(resultSelector));\n}\n\nexport class ZipOperator<T, R> implements Operator<T, R> {\n\n  resultSelector: (...values: Array<any>) => R;\n\n  constructor(resultSelector?: (...values: Array<any>) => R) {\n    this.resultSelector = resultSelector;\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new ZipSubscriber(subscriber, this.resultSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ZipSubscriber<T, R> extends Subscriber<T> {\n  private values: any;\n  private resultSelector: (...values: Array<any>) => R;\n  private iterators: LookAheadIterator<any>[] = [];\n  private active = 0;\n\n  constructor(destination: Subscriber<R>,\n              resultSelector?: (...values: Array<any>) => R,\n              values: any = Object.create(null)) {\n    super(destination);\n    this.resultSelector = (typeof resultSelector === 'function') ? resultSelector : null;\n    this.values = values;\n  }\n\n  protected _next(value: any) {\n    const iterators = this.iterators;\n    if (isArray(value)) {\n      iterators.push(new StaticArrayIterator(value));\n    } else if (typeof value[Symbol_iterator] === 'function') {\n      iterators.push(new StaticIterator(value[Symbol_iterator]()));\n    } else {\n      iterators.push(new ZipBufferIterator(this.destination, this, value));\n    }\n  }\n\n  protected _complete() {\n    const iterators = this.iterators;\n    const len = iterators.length;\n\n    this.unsubscribe();\n\n    if (len === 0) {\n      this.destination.complete();\n      return;\n    }\n\n    this.active = len;\n    for (let i = 0; i < len; i++) {\n      let iterator: ZipBufferIterator<any, any> = <any>iterators[i];\n      if (iterator.stillUnsubscribed) {\n        const destination = this.destination as Subscription;\n        destination.add(iterator.subscribe(iterator, i));\n      } else {\n        this.active--; // not an observable\n      }\n    }\n  }\n\n  notifyInactive() {\n    this.active--;\n    if (this.active === 0) {\n      this.destination.complete();\n    }\n  }\n\n  checkIterators() {\n    const iterators = this.iterators;\n    const len = iterators.length;\n    const destination = this.destination;\n\n    // abort if not all of them have values\n    for (let i = 0; i < len; i++) {\n      let iterator = iterators[i];\n      if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\n        return;\n      }\n    }\n\n    let shouldComplete = false;\n    const args: any[] = [];\n    for (let i = 0; i < len; i++) {\n      let iterator = iterators[i];\n      let result = iterator.next();\n\n      // check to see if it's completed now that you've gotten\n      // the next value.\n      if (iterator.hasCompleted()) {\n        shouldComplete = true;\n      }\n\n      if (result.done) {\n        destination.complete();\n        return;\n      }\n\n      args.push(result.value);\n    }\n\n    if (this.resultSelector) {\n      this._tryresultSelector(args);\n    } else {\n      destination.next(args);\n    }\n\n    if (shouldComplete) {\n      destination.complete();\n    }\n  }\n\n  protected _tryresultSelector(args: any[]) {\n    let result: any;\n    try {\n      result = this.resultSelector.apply(this, args);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n\ninterface LookAheadIterator<T> extends Iterator<T> {\n  hasValue(): boolean;\n  hasCompleted(): boolean;\n}\n\nclass StaticIterator<T> implements LookAheadIterator<T> {\n  private nextResult: IteratorResult<T>;\n\n  constructor(private iterator: Iterator<T>) {\n    this.nextResult = iterator.next();\n  }\n\n  hasValue() {\n    return true;\n  }\n\n  next(): IteratorResult<T> {\n    const result = this.nextResult;\n    this.nextResult = this.iterator.next();\n    return result;\n  }\n\n  hasCompleted() {\n    const nextResult = this.nextResult;\n    return nextResult && nextResult.done;\n  }\n}\n\nclass StaticArrayIterator<T> implements LookAheadIterator<T> {\n  private index = 0;\n  private length = 0;\n\n  constructor(private array: T[]) {\n    this.length = array.length;\n  }\n\n  [Symbol_iterator]() {\n    return this;\n  }\n\n  next(value?: any): IteratorResult<T> {\n    const i = this.index++;\n    const array = this.array;\n    return i < this.length ? { value: array[i], done: false } : { value: null, done: true };\n  }\n\n  hasValue() {\n    return this.array.length > this.index;\n  }\n\n  hasCompleted() {\n    return this.array.length === this.index;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ZipBufferIterator<T, R> extends OuterSubscriber<T, R> implements LookAheadIterator<T> {\n  stillUnsubscribed = true;\n  buffer: T[] = [];\n  isComplete = false;\n\n  constructor(destination: PartialObserver<T>,\n              private parent: ZipSubscriber<T, R>,\n              private observable: Observable<T>) {\n    super(destination);\n  }\n\n  [Symbol_iterator]() {\n    return this;\n  }\n\n  // NOTE: there is actually a name collision here with Subscriber.next and Iterator.next\n  //    this is legit because `next()` will never be called by a subscription in this case.\n  next(): IteratorResult<T> {\n    const buffer = this.buffer;\n    if (buffer.length === 0 && this.isComplete) {\n      return { value: null, done: true };\n    } else {\n      return { value: buffer.shift(), done: false };\n    }\n  }\n\n  hasValue() {\n    return this.buffer.length > 0;\n  }\n\n  hasCompleted() {\n    return this.buffer.length === 0 && this.isComplete;\n  }\n\n  notifyComplete() {\n    if (this.buffer.length > 0) {\n      this.isComplete = true;\n      this.parent.notifyInactive();\n    } else {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.buffer.push(innerValue);\n    this.parent.checkIterators();\n  }\n\n  subscribe(value: any, index: number) {\n    return subscribeToResult<any, any>(this, this.observable, this, index);\n  }\n}\n","/* Observable */\nexport { Observable } from './internal/Observable';\nexport { ConnectableObservable } from './internal/observable/ConnectableObservable';\nexport { GroupedObservable } from './internal/operators/groupBy';\nexport { Operator } from './internal/Operator';\nexport { observable } from './internal/symbol/observable';\n\n/* Subjects */\nexport { Subject } from './internal/Subject';\nexport { BehaviorSubject } from './internal/BehaviorSubject';\nexport { ReplaySubject } from './internal/ReplaySubject';\nexport { AsyncSubject } from './internal/AsyncSubject';\n\n/* Schedulers */\nexport { asap as asapScheduler } from './internal/scheduler/asap';\nexport { async as asyncScheduler } from './internal/scheduler/async';\nexport { queue as queueScheduler } from './internal/scheduler/queue';\nexport { animationFrame as animationFrameScheduler } from './internal/scheduler/animationFrame';\nexport { VirtualTimeScheduler, VirtualAction } from './internal/scheduler/VirtualTimeScheduler';\nexport { Scheduler } from './internal/Scheduler';\n\n/* Subscription */\nexport { Subscription } from './internal/Subscription';\nexport { Subscriber } from './internal/Subscriber';\n\n/* Notification */\nexport { Notification } from './internal/Notification';\n\n/* Utils */\nexport { pipe } from './internal/util/pipe';\nexport { noop } from './internal/util/noop';\nexport { identity } from './internal/util/identity';\nexport { isObservable } from './internal/util/isObservable';\n\n/* Error types */\nexport { ArgumentOutOfRangeError } from './internal/util/ArgumentOutOfRangeError';\nexport { EmptyError } from './internal/util/EmptyError';\nexport { ObjectUnsubscribedError } from './internal/util/ObjectUnsubscribedError';\nexport { UnsubscriptionError } from './internal/util/UnsubscriptionError';\nexport { TimeoutError } from './internal/util/TimeoutError';\n\n/* Static observable creation exports */\nexport { bindCallback } from './internal/observable/bindCallback';\nexport { bindNodeCallback } from './internal/observable/bindNodeCallback';\nexport { combineLatest } from './internal/observable/combineLatest';\nexport { concat } from './internal/observable/concat';\nexport { defer } from './internal/observable/defer';\nexport { empty } from './internal/observable/empty';\nexport { forkJoin } from './internal/observable/forkJoin';\nexport { from } from './internal/observable/from';\nexport { fromEvent } from './internal/observable/fromEvent';\nexport { fromEventPattern } from './internal/observable/fromEventPattern';\nexport { generate } from './internal/observable/generate';\nexport { iif } from './internal/observable/iif';\nexport { interval } from './internal/observable/interval';\nexport { merge } from './internal/observable/merge';\nexport { never } from './internal/observable/never';\nexport { of } from './internal/observable/of';\nexport { onErrorResumeNext } from './internal/observable/onErrorResumeNext';\nexport { pairs } from './internal/observable/pairs';\nexport { race } from './internal/observable/race';\nexport { range } from './internal/observable/range';\nexport { throwError } from './internal/observable/throwError';\nexport { timer } from './internal/observable/timer';\nexport { using } from './internal/observable/using';\nexport { zip } from './internal/observable/zip';\n\n/* Constants */\nexport { EMPTY } from './internal/observable/empty';\nexport { NEVER } from './internal/observable/never';\n\n/* Types */\nexport * from './internal/types';\n\n/* Config */\nexport { config } from './internal/config';\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction, SubscribableOrPromise, TeardownLogic } from '../types';\n\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\n/**\n * Ignores source values for a duration determined by another Observable, then\n * emits the most recent value from the source Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link auditTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * ![](audit.png)\n *\n * `audit` is similar to `throttle`, but emits the last value from the silenced\n * time window, instead of the first value. `audit` emits the most recent value\n * from the source Observable on the output Observable as soon as its internal\n * timer becomes disabled, and ignores source values while the timer is enabled.\n * Initially, the timer is disabled. As soon as the first source value arrives,\n * the timer is enabled by calling the `durationSelector` function with the\n * source value, which returns the \"duration\" Observable. When the duration\n * Observable emits a value or completes, the timer is disabled, then the most\n * recent source value is emitted on the output Observable, and this process\n * repeats for the next source value.\n *\n * ## Example\n *\n * Emit clicks at a rate of at most one click per second\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(audit(ev => interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration, returned as an Observable or a Promise.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method audit\n * @owner Observable\n */\nexport function audit<T>(durationSelector: (value: T) => SubscribableOrPromise<any>): MonoTypeOperatorFunction<T> {\n  return function auditOperatorFunction(source: Observable<T>) {\n    return source.lift(new AuditOperator(durationSelector));\n  };\n}\n\nclass AuditOperator<T> implements Operator<T, T> {\n  constructor(private durationSelector: (value: T) => SubscribableOrPromise<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new AuditSubscriber<T, T>(subscriber, this.durationSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass AuditSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private value: T;\n  private hasValue: boolean = false;\n  private throttled: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private durationSelector: (value: T) => SubscribableOrPromise<any>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this.value = value;\n    this.hasValue = true;\n    if (!this.throttled) {\n      const duration = tryCatch(this.durationSelector)(value);\n      if (duration === errorObject) {\n        this.destination.error(errorObject.e);\n      } else {\n        const innerSubscription = subscribeToResult(this, duration);\n        if (!innerSubscription || innerSubscription.closed) {\n          this.clearThrottle();\n        } else {\n          this.add(this.throttled = innerSubscription);\n        }\n      }\n    }\n  }\n\n  clearThrottle() {\n    const { value, hasValue, throttled } = this;\n    if (throttled) {\n      this.remove(throttled);\n      this.throttled = null;\n      throttled.unsubscribe();\n    }\n    if (hasValue) {\n      this.value = null;\n      this.hasValue = false;\n      this.destination.next(value);\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R, outerIndex: number, innerIndex: number): void {\n    this.clearThrottle();\n  }\n\n  notifyComplete(): void {\n    this.clearThrottle();\n  }\n}\n","import { async } from '../scheduler/async';\nimport { audit } from './audit';\nimport { timer } from '../observable/timer';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\n\n/**\n * Ignores source values for `duration` milliseconds, then emits the most recent\n * value from the source Observable, then repeats this process.\n *\n * <span class=\"informal\">When it sees a source values, it ignores that plus\n * the next ones for `duration` milliseconds, and then it emits the most recent\n * value from the source.</span>\n *\n * ![](auditTime.png)\n *\n * `auditTime` is similar to `throttleTime`, but emits the last value from the\n * silenced time window, instead of the first value. `auditTime` emits the most\n * recent value from the source Observable on the output Observable as soon as\n * its internal timer becomes disabled, and ignores source values while the\n * timer is enabled. Initially, the timer is disabled. As soon as the first\n * source value arrives, the timer is enabled. After `duration` milliseconds (or\n * the time unit determined internally by the optional `scheduler`) has passed,\n * the timer is disabled, then the most recent source value is emitted on the\n * output Observable, and this process repeats for the next source value.\n * Optionally takes a {@link SchedulerLike} for managing timers.\n *\n * ## Example\n *\n * Emit clicks at a rate of at most one click per second\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(auditTime(1000));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} duration Time to wait before emitting the most recent source\n * value, measured in milliseconds or the time unit determined internally\n * by the optional `scheduler`.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the rate-limiting behavior.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method auditTime\n * @owner Observable\n */\nexport function auditTime<T>(duration: number, scheduler: SchedulerLike = async): MonoTypeOperatorFunction<T> {\n  return audit(() => timer(duration, scheduler));\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../types';\n\n/**\n * Buffers the source Observable values until `closingNotifier` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when another Observable emits.</span>\n *\n * ![](buffer.png)\n *\n * Buffers the incoming Observable values until the given `closingNotifier`\n * Observable emits a value, at which point it emits the buffer on the output\n * Observable and starts a new buffer internally, awaiting the next time\n * `closingNotifier` emits.\n *\n * ## Example\n *\n * On every click, emit array of most recent interval events\n *\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const interval = interval(1000);\n * const buffered = interval.pipe(buffer(clicks));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link window}\n *\n * @param {Observable<any>} closingNotifier An Observable that signals the\n * buffer to be emitted on the output Observable.\n * @return {Observable<T[]>} An Observable of buffers, which are arrays of\n * values.\n * @method buffer\n * @owner Observable\n */\nexport function buffer<T>(closingNotifier: Observable<any>): OperatorFunction<T, T[]> {\n  return function bufferOperatorFunction(source: Observable<T>) {\n    return source.lift(new BufferOperator<T>(closingNotifier));\n  };\n}\n\nclass BufferOperator<T> implements Operator<T, T[]> {\n\n  constructor(private closingNotifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source.subscribe(new BufferSubscriber(subscriber, this.closingNotifier));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferSubscriber<T> extends OuterSubscriber<T, any> {\n  private buffer: T[] = [];\n\n  constructor(destination: Subscriber<T[]>, closingNotifier: Observable<any>) {\n    super(destination);\n    this.add(subscribeToResult(this, closingNotifier));\n  }\n\n  protected _next(value: T) {\n    this.buffer.push(value);\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    const buffer = this.buffer;\n    this.buffer = [];\n    this.destination.next(buffer);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Buffers the source Observable values until the size hits the maximum\n * `bufferSize` given.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when its size reaches `bufferSize`.</span>\n *\n * ![](bufferCount.png)\n *\n * Buffers a number of values from the source Observable by `bufferSize` then\n * emits the buffer and clears it, and starts a new buffer each\n * `startBufferEvery` values. If `startBufferEvery` is not provided or is\n * `null`, then new buffers are started immediately at the start of the source\n * and when each buffer closes and is emitted.\n *\n * ## Examples\n *\n * Emit the last two click events as an array\n *\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(bufferCount(2));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * On every click, emit the last two click events as an array\n *\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(bufferCount(2, 1));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link buffer}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link pairwise}\n * @see {@link windowCount}\n *\n * @param {number} bufferSize The maximum size of the buffer emitted.\n * @param {number} [startBufferEvery] Interval at which to start a new buffer.\n * For example if `startBufferEvery` is `2`, then a new buffer will be started\n * on every other value from the source. A new buffer is started at the\n * beginning of the source by default.\n * @return {Observable<T[]>} An Observable of arrays of buffered values.\n * @method bufferCount\n * @owner Observable\n */\nexport function bufferCount<T>(bufferSize: number, startBufferEvery: number = null): OperatorFunction<T, T[]> {\n  return function bufferCountOperatorFunction(source: Observable<T>) {\n    return source.lift(new BufferCountOperator<T>(bufferSize, startBufferEvery));\n  };\n}\n\nclass BufferCountOperator<T> implements Operator<T, T[]> {\n  private subscriberClass: any;\n\n  constructor(private bufferSize: number, private startBufferEvery: number) {\n    if (!startBufferEvery || bufferSize === startBufferEvery) {\n      this.subscriberClass = BufferCountSubscriber;\n    } else {\n      this.subscriberClass = BufferSkipCountSubscriber;\n    }\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): TeardownLogic {\n    return source.subscribe(new this.subscriberClass(subscriber, this.bufferSize, this.startBufferEvery));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferCountSubscriber<T> extends Subscriber<T> {\n  private buffer: T[] = [];\n\n  constructor(destination: Subscriber<T[]>, private bufferSize: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const buffer = this.buffer;\n\n    buffer.push(value);\n\n    if (buffer.length == this.bufferSize) {\n      this.destination.next(buffer);\n      this.buffer = [];\n    }\n  }\n\n  protected _complete(): void {\n    const buffer = this.buffer;\n    if (buffer.length > 0) {\n      this.destination.next(buffer);\n    }\n    super._complete();\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferSkipCountSubscriber<T> extends Subscriber<T> {\n  private buffers: Array<T[]> = [];\n  private count: number = 0;\n\n  constructor(destination: Subscriber<T[]>, private bufferSize: number, private startBufferEvery: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const { bufferSize, startBufferEvery, buffers, count } = this;\n\n    this.count++;\n    if (count % startBufferEvery === 0) {\n      buffers.push([]);\n    }\n\n    for (let i = buffers.length; i--; ) {\n      const buffer = buffers[i];\n      buffer.push(value);\n      if (buffer.length === bufferSize) {\n        buffers.splice(i, 1);\n        this.destination.next(buffer);\n      }\n    }\n  }\n\n  protected _complete(): void {\n    const { buffers, destination } = this;\n\n    while (buffers.length > 0) {\n      let buffer = buffers.shift();\n      if (buffer.length > 0) {\n        destination.next(buffer);\n      }\n    }\n    super._complete();\n  }\n\n}\n","import { Operator } from '../Operator';\nimport { async } from '../scheduler/async';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { isScheduler } from '../util/isScheduler';\nimport { OperatorFunction, SchedulerAction, SchedulerLike } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function bufferTime<T>(bufferTimeSpan: number, scheduler?: SchedulerLike): OperatorFunction<T, T[]>;\nexport function bufferTime<T>(bufferTimeSpan: number, bufferCreationInterval: number | null | undefined, scheduler?: SchedulerLike): OperatorFunction<T, T[]>;\nexport function bufferTime<T>(bufferTimeSpan: number, bufferCreationInterval: number | null | undefined, maxBufferSize: number, scheduler?: SchedulerLike): OperatorFunction<T, T[]>;\n/* tslint:enable:max-line-length */\n\n/**\n * Buffers the source Observable values for a specific time period.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * those arrays periodically in time.</span>\n *\n * ![](bufferTime.png)\n *\n * Buffers values from the source for a specific time duration `bufferTimeSpan`.\n * Unless the optional argument `bufferCreationInterval` is given, it emits and\n * resets the buffer every `bufferTimeSpan` milliseconds. If\n * `bufferCreationInterval` is given, this operator opens the buffer every\n * `bufferCreationInterval` milliseconds and closes (emits and resets) the\n * buffer every `bufferTimeSpan` milliseconds. When the optional argument\n * `maxBufferSize` is specified, the buffer will be closed either after\n * `bufferTimeSpan` milliseconds or when it contains `maxBufferSize` elements.\n *\n * ## Examples\n *\n * Every second, emit an array of the recent click events\n *\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(bufferTime(1000));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * Every 5 seconds, emit the click events from the next 2 seconds\n *\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(bufferTime(2000, 5000));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link windowTime}\n *\n * @param {number} bufferTimeSpan The amount of time to fill each buffer array.\n * @param {number} [bufferCreationInterval] The interval at which to start new\n * buffers.\n * @param {number} [maxBufferSize] The maximum buffer size.\n * @param {SchedulerLike} [scheduler=async] The scheduler on which to schedule the\n * intervals that determine buffer boundaries.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferTime\n * @owner Observable\n */\nexport function bufferTime<T>(bufferTimeSpan: number): OperatorFunction<T, T[]> {\n  let length: number = arguments.length;\n\n  let scheduler: SchedulerLike = async;\n  if (isScheduler(arguments[arguments.length - 1])) {\n    scheduler = arguments[arguments.length - 1];\n    length--;\n  }\n\n  let bufferCreationInterval: number = null;\n  if (length >= 2) {\n    bufferCreationInterval = arguments[1];\n  }\n\n  let maxBufferSize: number = Number.POSITIVE_INFINITY;\n  if (length >= 3) {\n    maxBufferSize = arguments[2];\n  }\n\n  return function bufferTimeOperatorFunction(source: Observable<T>) {\n    return source.lift(new BufferTimeOperator<T>(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler));\n  };\n}\n\nclass BufferTimeOperator<T> implements Operator<T, T[]> {\n  constructor(private bufferTimeSpan: number,\n              private bufferCreationInterval: number,\n              private maxBufferSize: number,\n              private scheduler: SchedulerLike) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source.subscribe(new BufferTimeSubscriber(\n      subscriber, this.bufferTimeSpan, this.bufferCreationInterval, this.maxBufferSize, this.scheduler\n    ));\n  }\n}\n\nclass Context<T> {\n  buffer: T[] = [];\n  closeAction: Subscription;\n}\n\ninterface DispatchCreateArg<T> {\n  bufferTimeSpan: number;\n  bufferCreationInterval: number;\n  subscriber: BufferTimeSubscriber<T>;\n  scheduler: SchedulerLike;\n}\n\ninterface DispatchCloseArg<T> {\n  subscriber: BufferTimeSubscriber<T>;\n  context: Context<T>;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferTimeSubscriber<T> extends Subscriber<T> {\n  private contexts: Array<Context<T>> = [];\n  private timespanOnly: boolean;\n\n  constructor(destination: Subscriber<T[]>,\n              private bufferTimeSpan: number,\n              private bufferCreationInterval: number,\n              private maxBufferSize: number,\n              private scheduler: SchedulerLike) {\n    super(destination);\n    const context = this.openContext();\n    this.timespanOnly = bufferCreationInterval == null || bufferCreationInterval < 0;\n    if (this.timespanOnly) {\n      const timeSpanOnlyState = { subscriber: this, context, bufferTimeSpan };\n      this.add(context.closeAction = scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n    } else {\n      const closeState = { subscriber: this, context };\n      const creationState: DispatchCreateArg<T> = { bufferTimeSpan, bufferCreationInterval, subscriber: this, scheduler };\n      this.add(context.closeAction = scheduler.schedule<DispatchCloseArg<T>>(dispatchBufferClose, bufferTimeSpan, closeState));\n      this.add(scheduler.schedule<DispatchCreateArg<T>>(dispatchBufferCreation, bufferCreationInterval, creationState));\n    }\n  }\n\n  protected _next(value: T) {\n    const contexts = this.contexts;\n    const len = contexts.length;\n    let filledBufferContext: Context<T>;\n    for (let i = 0; i < len; i++) {\n      const context = contexts[i];\n      const buffer = context.buffer;\n      buffer.push(value);\n      if (buffer.length == this.maxBufferSize) {\n        filledBufferContext = context;\n      }\n    }\n\n    if (filledBufferContext) {\n      this.onBufferFull(filledBufferContext);\n    }\n  }\n\n  protected _error(err: any) {\n    this.contexts.length = 0;\n    super._error(err);\n  }\n\n  protected _complete() {\n    const { contexts, destination } = this;\n    while (contexts.length > 0) {\n      const context = contexts.shift();\n      destination.next(context.buffer);\n    }\n    super._complete();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    this.contexts = null;\n  }\n\n  protected onBufferFull(context: Context<T>) {\n    this.closeContext(context);\n    const closeAction = context.closeAction;\n    closeAction.unsubscribe();\n    this.remove(closeAction);\n\n    if (!this.closed && this.timespanOnly) {\n      context = this.openContext();\n      const bufferTimeSpan = this.bufferTimeSpan;\n      const timeSpanOnlyState = { subscriber: this, context, bufferTimeSpan };\n      this.add(context.closeAction = this.scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n    }\n  }\n\n  openContext(): Context<T> {\n    const context: Context<T> = new Context<T>();\n    this.contexts.push(context);\n    return context;\n  }\n\n  closeContext(context: Context<T>) {\n    this.destination.next(context.buffer);\n    const contexts = this.contexts;\n\n    const spliceIndex = contexts ? contexts.indexOf(context) : -1;\n    if (spliceIndex >= 0) {\n      contexts.splice(contexts.indexOf(context), 1);\n    }\n  }\n}\n\nfunction dispatchBufferTimeSpanOnly(this: SchedulerAction<any>, state: any) {\n  const subscriber: BufferTimeSubscriber<any> = state.subscriber;\n\n  const prevContext = state.context;\n  if (prevContext) {\n    subscriber.closeContext(prevContext);\n  }\n\n  if (!subscriber.closed) {\n    state.context = subscriber.openContext();\n    state.context.closeAction = this.schedule(state, state.bufferTimeSpan);\n  }\n}\n\nfunction dispatchBufferCreation<T>(this: SchedulerAction<DispatchCreateArg<T>>, state: DispatchCreateArg<T>) {\n  const { bufferCreationInterval, bufferTimeSpan, subscriber, scheduler } = state;\n  const context = subscriber.openContext();\n  const action = <SchedulerAction<DispatchCreateArg<T>>>this;\n  if (!subscriber.closed) {\n    subscriber.add(context.closeAction = scheduler.schedule<DispatchCloseArg<T>>(dispatchBufferClose, bufferTimeSpan, { subscriber, context }));\n    action.schedule(state, bufferCreationInterval);\n  }\n}\n\nfunction dispatchBufferClose<T>(arg: DispatchCloseArg<T>) {\n  const { subscriber, context } = arg;\n  subscriber.closeContext(context);\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OperatorFunction, SubscribableOrPromise } from '../types';\n\n/**\n * Buffers the source Observable values starting from an emission from\n * `openings` and ending when the output of `closingSelector` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array. Starts\n * collecting only when `opening` emits, and calls the `closingSelector`\n * function to get an Observable that tells when to close the buffer.</span>\n *\n * ![](bufferToggle.png)\n *\n * Buffers values from the source by opening the buffer via signals from an\n * Observable provided to `openings`, and closing and sending the buffers when\n * a Subscribable or Promise returned by the `closingSelector` function emits.\n *\n * ## Example\n *\n * Every other second, emit the click events from the next 500ms\n *\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const openings = interval(1000);\n * const buffered = clicks.pipe(bufferToggle(openings, i =>\n *   i % 2 ? interval(500) : empty()\n * ));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferWhen}\n * @see {@link windowToggle}\n *\n * @param {SubscribableOrPromise<O>} openings A Subscribable or Promise of notifications to start new\n * buffers.\n * @param {function(value: O): SubscribableOrPromise} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns a Subscribable or Promise,\n * which, when it emits, signals that the associated buffer should be emitted\n * and cleared.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferToggle\n * @owner Observable\n */\nexport function bufferToggle<T, O>(\n  openings: SubscribableOrPromise<O>,\n  closingSelector: (value: O) => SubscribableOrPromise<any>\n): OperatorFunction<T, T[]> {\n  return function bufferToggleOperatorFunction(source: Observable<T>) {\n    return source.lift(new BufferToggleOperator<T, O>(openings, closingSelector));\n  };\n}\n\nclass BufferToggleOperator<T, O> implements Operator<T, T[]> {\n\n  constructor(private openings: SubscribableOrPromise<O>,\n              private closingSelector: (value: O) => SubscribableOrPromise<any>) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source.subscribe(new BufferToggleSubscriber(subscriber, this.openings, this.closingSelector));\n  }\n}\n\ninterface BufferContext<T> {\n  buffer: T[];\n  subscription: Subscription;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferToggleSubscriber<T, O> extends OuterSubscriber<T, O> {\n  private contexts: Array<BufferContext<T>> = [];\n\n  constructor(destination: Subscriber<T[]>,\n              private openings: SubscribableOrPromise<O>,\n              private closingSelector: (value: O) => SubscribableOrPromise<any> | void) {\n    super(destination);\n    this.add(subscribeToResult(this, openings));\n  }\n\n  protected _next(value: T): void {\n    const contexts = this.contexts;\n    const len = contexts.length;\n    for (let i = 0; i < len; i++) {\n      contexts[i].buffer.push(value);\n    }\n  }\n\n  protected _error(err: any): void {\n    const contexts = this.contexts;\n    while (contexts.length > 0) {\n      const context = contexts.shift();\n      context.subscription.unsubscribe();\n      context.buffer = null;\n      context.subscription = null;\n    }\n    this.contexts = null;\n    super._error(err);\n  }\n\n  protected _complete(): void {\n    const contexts = this.contexts;\n    while (contexts.length > 0) {\n      const context = contexts.shift();\n      this.destination.next(context.buffer);\n      context.subscription.unsubscribe();\n      context.buffer = null;\n      context.subscription = null;\n    }\n    this.contexts = null;\n    super._complete();\n  }\n\n  notifyNext(outerValue: any, innerValue: O,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, O>): void {\n    outerValue ? this.closeBuffer(outerValue) : this.openBuffer(innerValue);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, O>): void {\n    this.closeBuffer((<any> innerSub).context);\n  }\n\n  private openBuffer(value: O): void {\n    try {\n      const closingSelector = this.closingSelector;\n      const closingNotifier = closingSelector.call(this, value);\n      if (closingNotifier) {\n        this.trySubscribe(closingNotifier);\n      }\n    } catch (err) {\n      this._error(err);\n    }\n  }\n\n  private closeBuffer(context: BufferContext<T>): void {\n    const contexts = this.contexts;\n\n    if (contexts && context) {\n      const { buffer, subscription } = context;\n      this.destination.next(buffer);\n      contexts.splice(contexts.indexOf(context), 1);\n      this.remove(subscription);\n      subscription.unsubscribe();\n    }\n  }\n\n  private trySubscribe(closingNotifier: any): void {\n    const contexts = this.contexts;\n\n    const buffer: Array<T> = [];\n    const subscription = new Subscription();\n    const context = { buffer, subscription };\n    contexts.push(context);\n\n    const innerSubscription = subscribeToResult(this, closingNotifier, <any>context);\n\n    if (!innerSubscription || innerSubscription.closed) {\n      this.closeBuffer(context);\n    } else {\n      (<any> innerSubscription).context = context;\n\n      this.add(innerSubscription);\n      subscription.add(innerSubscription);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../types';\n\n/**\n * Buffers the source Observable values, using a factory function of closing\n * Observables to determine when to close, emit, and reset the buffer.\n *\n * <span class=\"informal\">Collects values from the past as an array. When it\n * starts collecting values, it calls a function that returns an Observable that\n * tells when to close the buffer and restart collecting.</span>\n *\n * ![](bufferWhen.png)\n *\n * Opens a buffer immediately, then closes the buffer when the observable\n * returned by calling `closingSelector` function emits a value. When it closes\n * the buffer, it immediately opens a new buffer and repeats the process.\n *\n * ## Example\n *\n * Emit an array of the last clicks every [1-5] random seconds\n *\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(bufferWhen(() =>\n *   interval(1000 + Math.random() * 4000)\n * ));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link windowWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals buffer closure.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferWhen\n * @owner Observable\n */\nexport function bufferWhen<T>(closingSelector: () => Observable<any>): OperatorFunction<T, T[]> {\n  return function (source: Observable<T>) {\n    return source.lift(new BufferWhenOperator(closingSelector));\n  };\n}\n\nclass BufferWhenOperator<T> implements Operator<T, T[]> {\n\n  constructor(private closingSelector: () => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source.subscribe(new BufferWhenSubscriber(subscriber, this.closingSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferWhenSubscriber<T> extends OuterSubscriber<T, any> {\n  private buffer: T[];\n  private subscribing: boolean = false;\n  private closingSubscription: Subscription;\n\n  constructor(destination: Subscriber<T[]>, private closingSelector: () => Observable<any>) {\n    super(destination);\n    this.openBuffer();\n  }\n\n  protected _next(value: T) {\n    this.buffer.push(value);\n  }\n\n  protected _complete() {\n    const buffer = this.buffer;\n    if (buffer) {\n      this.destination.next(buffer);\n    }\n    super._complete();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    this.buffer = null;\n    this.subscribing = false;\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    this.openBuffer();\n  }\n\n  notifyComplete(): void {\n    if (this.subscribing) {\n      this.complete();\n    } else {\n      this.openBuffer();\n    }\n  }\n\n  openBuffer() {\n\n    let { closingSubscription } = this;\n\n    if (closingSubscription) {\n      this.remove(closingSubscription);\n      closingSubscription.unsubscribe();\n    }\n\n    const buffer = this.buffer;\n    if (this.buffer) {\n      this.destination.next(buffer);\n    }\n\n    this.buffer = [];\n\n    const closingNotifier = tryCatch(this.closingSelector)();\n\n    if (closingNotifier === errorObject) {\n      this.error(errorObject.e);\n    } else {\n      closingSubscription = new Subscription();\n      this.closingSubscription = closingSubscription;\n      this.add(closingSubscription);\n      this.subscribing = true;\n      closingSubscription.add(subscribeToResult(this, closingNotifier));\n      this.subscribing = false;\n    }\n  }\n}\n","import {Operator} from '../Operator';\nimport {Subscriber} from '../Subscriber';\nimport {Observable} from '../Observable';\n\nimport {OuterSubscriber} from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport {subscribeToResult} from '../util/subscribeToResult';\nimport {ObservableInput, OperatorFunction, MonoTypeOperatorFunction} from '../types';\n\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n *\n * ![](catch.png)\n *\n * ## Examples\n * Continues with a different Observable when there's an error\n *\n * ```javascript\n * of(1, 2, 3, 4, 5).pipe(\n *     map(n => {\n *   \t   if (n == 4) {\n * \t       throw 'four!';\n *       }\n *\t     return n;\n *     }),\n *     catchError(err => of('I', 'II', 'III', 'IV', 'V')),\n *   )\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, I, II, III, IV, V\n * ```\n *\n * Retries the caught source Observable again in case of error, similar to retry() operator\n *\n * ```javascript\n * of(1, 2, 3, 4, 5).pipe(\n *     map(n => {\n *   \t   if (n === 4) {\n *   \t     throw 'four!';\n *       }\n * \t     return n;\n *     }),\n *     catchError((err, caught) => caught),\n *     take(30),\n *   )\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, 1, 2, 3, ...\n * ```\n *\n * Throws a new error when the source Observable throws an error\n *\n * ```javascript\n * of(1, 2, 3, 4, 5).pipe(\n *     map(n => {\n *       if (n == 4) {\n *         throw 'four!';\n *       }\n *       return n;\n *     }),\n *     catchError(err => {\n *       throw 'error in source. Details: ' + err;\n *     }),\n *   )\n *   .subscribe(\n *     x => console.log(x),\n *     err => console.log(err)\n *   );\n *   // 1, 2, 3, error in source. Details: four!\n * ```\n *\n *  @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n *  is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n *  is returned by the `selector` will be used to continue the observable chain.\n * @return {Observable} An observable that originates from either the source or the observable returned by the\n *  catch `selector` function.\n * @name catchError\n */\nexport function catchError<T>(selector: (err: any, caught: Observable<T>) => never): MonoTypeOperatorFunction<T>;\nexport function catchError<T, R>(selector: (err: any, caught: Observable<T>) => ObservableInput<R>): OperatorFunction<T, T | R>;\nexport function catchError<T, R>(selector: (err: any, caught: Observable<T>) => ObservableInput<R>): OperatorFunction<T, T | R> {\n  return function catchErrorOperatorFunction(source: Observable<T>): Observable<T | R> {\n    const operator = new CatchOperator(selector);\n    const caught = source.lift(operator);\n    return (operator.caught = caught as Observable<T>);\n  };\n}\n\nclass CatchOperator<T, R> implements Operator<T, T | R> {\n  caught: Observable<T>;\n\n  constructor(private selector: (err: any, caught: Observable<T>) => ObservableInput<T | R>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass CatchSubscriber<T, R> extends OuterSubscriber<T, T | R> {\n  constructor(destination: Subscriber<any>,\n              private selector: (err: any, caught: Observable<T>) => ObservableInput<T | R>,\n              private caught: Observable<T>) {\n    super(destination);\n  }\n\n  // NOTE: overriding `error` instead of `_error` because we don't want\n  // to have this flag this subscriber as `isStopped`. We can mimic the\n  // behavior of the RetrySubscriber (from the `retry` operator), where\n  // we unsubscribe from our source chain, reset our Subscriber flags,\n  // then subscribe to the selector result.\n  error(err: any) {\n    if (!this.isStopped) {\n      let result: any;\n      try {\n        result = this.selector(err, this.caught);\n      } catch (err2) {\n        super.error(err2);\n        return;\n      }\n      this._unsubscribeAndRecycle();\n      const innerSubscriber = new InnerSubscriber(this, undefined, undefined);\n      this.add(innerSubscriber);\n      subscribeToResult(this, result, undefined, undefined, innerSubscriber);\n    }\n  }\n}\n","import { CombineLatestOperator } from '../observable/combineLatest';\nimport { Observable } from '../Observable';\nimport { OperatorFunction, ObservableInput } from '../types';\n\nexport function combineAll<T>(): OperatorFunction<ObservableInput<T>, T[]>;\nexport function combineAll<T>(): OperatorFunction<any, T[]>;\nexport function combineAll<T, R>(project: (...values: T[]) => R): OperatorFunction<ObservableInput<T>, R>;\nexport function combineAll<R>(project: (...values: Array<any>) => R): OperatorFunction<any, R>;\n/**\n * Flattens an Observable-of-Observables by applying {@link combineLatest} when the Observable-of-Observables completes.\n *\n * ![](combineAll.png)\n *\n * `combineAll` takes an Observable of Observables, and collects all Observables from it. Once the outer Observable completes,\n * it subscribes to all collected Observables and combines their values using the {@link combineLatest}</a> strategy, such that:\n *\n * * Every time an inner Observable emits, the output Observable emits\n * * When the returned observable emits, it emits all of the latest values by:\n *    * If a `project` function is provided, it is called with each recent value from each inner Observable in whatever order they\n *      arrived, and the result of the `project` function is what is emitted by the output Observable.\n *    * If there is no `project` function, an array of all the most recent values is emitted by the output Observable.\n *\n * ---\n *\n * ## Examples\n * ### Map two click events to a finite interval Observable, then apply `combineAll`\n * ```javascript\n * import { map, combineAll, take } from 'rxjs/operators';\n * import { fromEvent } from 'rxjs/observable/fromEvent';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(ev =>\n *      interval(Math.random() * 2000).pipe(take(3))\n *   ),\n *   take(2)\n * );\n * const result = higherOrder.pipe(\n *   combineAll()\n * );\n *\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineLatest}\n * @see {@link mergeAll}\n *\n * @param {function(...values: Array<any>)} An optional function to map the most recent values from each inner Observable into a new result.\n * Takes each of the most recent values from each collected inner Observable as arguments, in order.\n * @return {Observable<T>}\n * @name combineAll\n */\nexport function combineAll<T, R>(project?: (...values: Array<any>) => R): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift(new CombineLatestOperator(project));\n}\n","\nimport { isArray } from '../util/isArray';\nimport { CombineLatestOperator } from '../observable/combineLatest';\nimport { from } from '../observable/from';\nimport { Observable } from '../Observable';\nimport { ObservableInput, OperatorFunction } from '../types';\n\nconst none = {};\n\n/* tslint:disable:max-line-length */\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, R>(project: (v1: T) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2, R>(v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): OperatorFunction<T, R> ;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2>(v2: ObservableInput<T2>): OperatorFunction<T, [T, T2]>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): OperatorFunction<T, [T, T2, T3]>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): OperatorFunction<T, [T, T2, T3, T4]>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): OperatorFunction<T, [T, T2, T3, T4, T5]>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): OperatorFunction<T, [T, T2, T3, T4, T5, T6]> ;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, R>(...observables: Array<ObservableInput<T> | ((...values: Array<T>) => R)>): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, R>(array: ObservableInput<T>[]): OperatorFunction<T, Array<T>>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, TOther, R>(array: ObservableInput<TOther>[], project: (v1: T, ...values: Array<TOther>) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * @deprecated Deprecated in favor of static {@link combineLatest}.\n */\nexport function combineLatest<T, R>(...observables: Array<ObservableInput<any> |\n                                                    Array<ObservableInput<any>> |\n                                                    ((...values: Array<any>) => R)>): OperatorFunction<T, R> {\n  let project: (...values: Array<any>) => R = null;\n  if (typeof observables[observables.length - 1] === 'function') {\n    project = <(...values: Array<any>) => R>observables.pop();\n  }\n\n  // if the first and only other argument besides the resultSelector is an array\n  // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`\n  if (observables.length === 1 && isArray(observables[0])) {\n    observables = (<any>observables[0]).slice();\n  }\n\n  return (source: Observable<T>) => source.lift.call(from([source, ...observables]), new CombineLatestOperator(project));\n}\n","import {  concat as concatStatic } from '../observable/concat';\nimport { Observable } from '../Observable';\nimport { ObservableInput, OperatorFunction, MonoTypeOperatorFunction, SchedulerLike } from '../types';\n\n/* tslint:disable:max-line-length */\n/** @deprecated Deprecated in favor of static concat. */\nexport function concat<T>(scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n/** @deprecated Deprecated in favor of static concat. */\nexport function concat<T, T2>(v2: ObservableInput<T2>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2>;\n/** @deprecated Deprecated in favor of static concat. */\nexport function concat<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3>;\n/** @deprecated Deprecated in favor of static concat. */\nexport function concat<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4>;\n/** @deprecated Deprecated in favor of static concat. */\nexport function concat<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4 | T5>;\n/** @deprecated Deprecated in favor of static concat. */\nexport function concat<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4 | T5 | T6>;\n/** @deprecated Deprecated in favor of static concat. */\nexport function concat<T>(...observables: Array<ObservableInput<T> | SchedulerLike>): MonoTypeOperatorFunction<T>;\n/** @deprecated Deprecated in favor of static concat. */\nexport function concat<T, R>(...observables: Array<ObservableInput<any> | SchedulerLike>): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * @deprecated Deprecated in favor of static {@link concat}.\n */\nexport function concat<T, R>(...observables: Array<ObservableInput<any> | SchedulerLike>): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift.call(concatStatic<T, R>(source, ...observables));\n}\n","import { mergeMap } from './mergeMap';\nimport { ObservableInput, OperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function concatMap<T, R>(project: (value: T, index: number) =>  ObservableInput<R>): OperatorFunction<T, R>;\n/** @deprecated resultSelector no longer supported, use inner map instead */\nexport function concatMap<T, R>(project: (value: T, index: number) => ObservableInput<R>, resultSelector: undefined): OperatorFunction<T, R>;\n/** @deprecated resultSelector no longer supported, use inner map instead */\nexport function concatMap<T, I, R>(project: (value: T, index: number) =>  ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, in a serialized fashion waiting for each one to complete before\n * merging the next.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link concatAll}.</span>\n *\n * ![](concatMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each new inner Observable is\n * concatenated with the previous inner Observable.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMap` is equivalent to `mergeMap` with concurrency parameter set\n * to `1`.\n *\n * ## Example\n * For each click event, tick every second from 0 to 3, with no concurrency\n *\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   concatMap(ev => interval(1000).pipe(take(4)),\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n * ```\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMapTo}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional deprecated `resultSelector`) to each item emitted\n * by the source Observable and taking values from each projected inner\n * Observable sequentially.\n * @method concatMap\n * @owner Observable\n */\nexport function concatMap<T, I, R>(\n  project: (value: T, index: number) =>  ObservableInput<I>,\n  resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, I|R> {\n  return mergeMap(project, resultSelector, 1);\n}\n","import { concatMap } from './concatMap';\nimport { ObservableInput, OperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function concatMapTo<T>(observable: ObservableInput<T>): OperatorFunction<any, T>;\n/** @deprecated */\nexport function concatMapTo<T>(observable: ObservableInput<T>, resultSelector: undefined): OperatorFunction<any, T>;\n/** @deprecated */\nexport function concatMapTo<T, I, R>(observable: ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in a serialized fashion on the output Observable.\n *\n * <span class=\"informal\">It's like {@link concatMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * ![](concatMapTo.png)\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. Each new `innerObservable`\n * instance emitted on the output Observable is concatenated with the previous\n * `innerObservable` instance.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMapTo` is equivalent to `mergeMapTo` with concurrency parameter\n * set to `1`.\n *\n * ## Example\n * For each click event, tick every second from 0 to 3, with no concurrency\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   concatMapTo(interval(1000).pipe(take(4))),\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n * ```\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link mergeMapTo}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @return {Observable} An observable of values merged together by joining the\n * passed observable with itself, one after the other, for each value emitted\n * from the source.\n * @method concatMapTo\n * @owner Observable\n */\nexport function concatMapTo<T, I, R>(\n  innerObservable: ObservableInput<I>,\n  resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, R> {\n  return concatMap(() => innerObservable, resultSelector);\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Observer, OperatorFunction } from '../types';\nimport { Subscriber } from '../Subscriber';\n/**\n * Counts the number of emissions on the source and emits that number when the\n * source completes.\n *\n * <span class=\"informal\">Tells how many values were emitted, when the source\n * completes.</span>\n *\n * ![](count.png)\n *\n * `count` transforms an Observable that emits values into an Observable that\n * emits a single value that represents the number of values emitted by the\n * source Observable. If the source Observable terminates with an error, `count`\n * will pass this error notification along without emitting a value first. If\n * the source Observable does not terminate at all, `count` will neither emit\n * a value nor terminate. This operator takes an optional `predicate` function\n * as argument, in which case the output emission will represent the number of\n * source values that matched `true` with the `predicate`.\n *\n * ## Examples\n *\n * Counts how many seconds have passed before the first click happened\n * ```javascript\n * const seconds = interval(1000);\n * const clicks = fromEvent(document, 'click');\n * const secondsBeforeClick = seconds.pipe(takeUntil(clicks));\n * const result = secondsBeforeClick.pipe(count());\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Counts how many odd numbers are there between 1 and 7\n * ```javascript\n * const numbers = range(1, 7);\n * const result = numbers.pipe(count(i => i % 2 === 1));\n * result.subscribe(x => console.log(x));\n * // Results in:\n * // 4\n * ```\n *\n * @see {@link max}\n * @see {@link min}\n * @see {@link reduce}\n *\n * @param {function(value: T, i: number, source: Observable<T>): boolean} [predicate] A\n * boolean function to select what values are to be counted. It is provided with\n * arguments of:\n * - `value`: the value from the source Observable.\n * - `index`: the (zero-based) \"index\" of the value from the source Observable.\n * - `source`: the source Observable instance itself.\n * @return {Observable} An Observable of one number that represents the count as\n * described above.\n * @method count\n * @owner Observable\n */\n\nexport function count<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): OperatorFunction<T, number> {\n  return (source: Observable<T>) => source.lift(new CountOperator(predicate, source));\n}\n\nclass CountOperator<T> implements Operator<T, number> {\n  constructor(private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<number>, source: any): any {\n    return source.subscribe(new CountSubscriber(subscriber, this.predicate, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass CountSubscriber<T> extends Subscriber<T> {\n  private count: number = 0;\n  private index: number = 0;\n\n  constructor(destination: Observer<number>,\n              private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.predicate) {\n      this._tryPredicate(value);\n    } else {\n      this.count++;\n    }\n  }\n\n  private _tryPredicate(value: T) {\n    let result: any;\n\n    try {\n      result = this.predicate(value, this.index++, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    if (result) {\n      this.count++;\n    }\n  }\n\n  protected _complete(): void {\n    this.destination.next(this.count);\n    this.destination.complete();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction, SubscribableOrPromise, TeardownLogic } from '../types';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\n/**\n * Emits a value from the source Observable only after a particular time span\n * determined by another Observable has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link debounceTime}, but the time span of\n * emission silence is determined by a second Observable.</span>\n *\n * ![](debounce.png)\n *\n * `debounce` delays values emitted by the source Observable, but drops previous\n * pending delayed emissions if a new value arrives on the source Observable.\n * This operator keeps track of the most recent value from the source\n * Observable, and spawns a duration Observable by calling the\n * `durationSelector` function. The value is emitted only when the duration\n * Observable emits a value or completes, and if no other value was emitted on\n * the source Observable since the duration Observable was spawned. If a new\n * value appears before the duration Observable emits, the previous value will\n * be dropped and will not be emitted on the output Observable.\n *\n * Like {@link debounceTime}, this is a rate-limiting operator, and also a\n * delay-like operator since output emissions do not necessarily occur at the\n * same time as they did on the source Observable.\n *\n * ## Example\n * Emit the most recent click after a burst of clicks\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(debounce(() => interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the timeout\n * duration for each source value, returned as an Observable or a Promise.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified duration Observable returned by\n * `durationSelector`, and may drop some values if they occur too frequently.\n * @method debounce\n * @owner Observable\n */\nexport function debounce<T>(durationSelector: (value: T) => SubscribableOrPromise<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new DebounceOperator(durationSelector));\n}\n\nclass DebounceOperator<T> implements Operator<T, T> {\n  constructor(private durationSelector: (value: T) => SubscribableOrPromise<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DebounceSubscriber(subscriber, this.durationSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DebounceSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private value: T;\n  private hasValue: boolean = false;\n  private durationSubscription: Subscription = null;\n\n  constructor(destination: Subscriber<R>,\n              private durationSelector: (value: T) => SubscribableOrPromise<any>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    try {\n      const result = this.durationSelector.call(this, value);\n\n      if (result) {\n        this._tryNext(value, result);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    this.emitValue();\n    this.destination.complete();\n  }\n\n  private _tryNext(value: T, duration: SubscribableOrPromise<any>): void {\n    let subscription = this.durationSubscription;\n    this.value = value;\n    this.hasValue = true;\n    if (subscription) {\n      subscription.unsubscribe();\n      this.remove(subscription);\n    }\n\n    subscription = subscribeToResult(this, duration);\n    if (subscription && !subscription.closed) {\n      this.add(this.durationSubscription = subscription);\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.emitValue();\n  }\n\n  notifyComplete(): void {\n    this.emitValue();\n  }\n\n  emitValue(): void {\n    if (this.hasValue) {\n      const value = this.value;\n      const subscription = this.durationSubscription;\n      if (subscription) {\n        this.durationSubscription = null;\n        subscription.unsubscribe();\n        this.remove(subscription);\n      }\n      // This must be done *before* passing the value\n      // along to the destination because it's possible for\n      // the value to synchronously re-enter this operator\n      // recursively if the duration selector Observable\n      // emits synchronously\n      this.value = null;\n      this.hasValue = false;\n      super._next(value);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { async } from '../scheduler/async';\nimport { MonoTypeOperatorFunction, SchedulerLike, TeardownLogic } from '../types';\n\n/**\n * Emits a value from the source Observable only after a particular time span\n * has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link delay}, but passes only the most\n * recent value from each burst of emissions.</span>\n *\n * ![](debounceTime.png)\n *\n * `debounceTime` delays values emitted by the source Observable, but drops\n * previous pending delayed emissions if a new value arrives on the source\n * Observable. This operator keeps track of the most recent value from the\n * source Observable, and emits that only when `dueTime` enough time has passed\n * without any other value appearing on the source Observable. If a new value\n * appears before `dueTime` silence occurs, the previous value will be dropped\n * and will not be emitted on the output Observable.\n *\n * This is a rate-limiting operator, because it is impossible for more than one\n * value to be emitted in any time window of duration `dueTime`, but it is also\n * a delay-like operator since output emissions do not occur at the same time as\n * they did on the source Observable. Optionally takes a {@link SchedulerLike} for\n * managing timers.\n *\n * ## Example\n * Emit the most recent click after a burst of clicks\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(debounceTime(1000));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} dueTime The timeout duration in milliseconds (or the time\n * unit determined internally by the optional `scheduler`) for the window of\n * time required to wait for emission silence before emitting the most recent\n * source value.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the timeout for each value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified `dueTime`, and may drop some values if they occur\n * too frequently.\n * @method debounceTime\n * @owner Observable\n */\nexport function debounceTime<T>(dueTime: number, scheduler: SchedulerLike = async): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new DebounceTimeOperator(dueTime, scheduler));\n}\n\nclass DebounceTimeOperator<T> implements Operator<T, T> {\n  constructor(private dueTime: number, private scheduler: SchedulerLike) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DebounceTimeSubscriber<T> extends Subscriber<T> {\n  private debouncedSubscription: Subscription = null;\n  private lastValue: T = null;\n  private hasValue: boolean = false;\n\n  constructor(destination: Subscriber<T>,\n              private dueTime: number,\n              private scheduler: SchedulerLike) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    this.clearDebounce();\n    this.lastValue = value;\n    this.hasValue = true;\n    this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));\n  }\n\n  protected _complete() {\n    this.debouncedNext();\n    this.destination.complete();\n  }\n\n  debouncedNext(): void {\n    this.clearDebounce();\n\n    if (this.hasValue) {\n      const { lastValue } = this;\n      // This must be done *before* passing the value\n      // along to the destination because it's possible for\n      // the value to synchronously re-enter this operator\n      // recursively when scheduled with things like\n      // VirtualScheduler/TestScheduler.\n      this.lastValue = null;\n      this.hasValue = false;\n      this.destination.next(lastValue);\n    }\n  }\n\n  private clearDebounce(): void {\n    const debouncedSubscription = this.debouncedSubscription;\n\n    if (debouncedSubscription !== null) {\n      this.remove(debouncedSubscription);\n      debouncedSubscription.unsubscribe();\n      this.debouncedSubscription = null;\n    }\n  }\n}\n\nfunction dispatchNext(subscriber: DebounceTimeSubscriber<any>) {\n  subscriber.debouncedNext();\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function defaultIfEmpty<T>(defaultValue?: T): MonoTypeOperatorFunction<T>;\nexport function defaultIfEmpty<T, R>(defaultValue?: R): OperatorFunction<T, T | R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Emits a given value if the source Observable completes without emitting any\n * `next` value, otherwise mirrors the source Observable.\n *\n * <span class=\"informal\">If the source Observable turns out to be empty, then\n * this operator will emit a default value.</span>\n *\n * ![](defaultIfEmpty.png)\n *\n * `defaultIfEmpty` emits the values emitted by the source Observable or a\n * specified default value if the source Observable is empty (completes without\n * having emitted any `next` value).\n *\n * ## Example\n * If no clicks happen in 5 seconds, then emit \"no clicks\"\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const clicksBeforeFive = clicks.pipe(takeUntil(interval(5000)));\n * const result = clicksBeforeFive.pipe(defaultIfEmpty('no clicks'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link empty}\n * @see {@link last}\n *\n * @param {any} [defaultValue=null] The default value used if the source\n * Observable is empty.\n * @return {Observable} An Observable that emits either the specified\n * `defaultValue` if the source Observable emits no items, or the values emitted\n * by the source Observable.\n * @method defaultIfEmpty\n * @owner Observable\n */\nexport function defaultIfEmpty<T, R>(defaultValue: R = null): OperatorFunction<T, T | R> {\n  return (source: Observable<T>) => source.lift(new DefaultIfEmptyOperator(defaultValue)) as Observable<T | R>;\n}\n\nclass DefaultIfEmptyOperator<T, R> implements Operator<T, T | R> {\n\n  constructor(private defaultValue: R) {\n  }\n\n  call(subscriber: Subscriber<T | R>, source: any): any {\n    return source.subscribe(new DefaultIfEmptySubscriber(subscriber, this.defaultValue));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DefaultIfEmptySubscriber<T, R> extends Subscriber<T> {\n  private isEmpty: boolean = true;\n\n  constructor(destination: Subscriber<T | R>, private defaultValue: R) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this.isEmpty = false;\n    this.destination.next(value);\n  }\n\n  protected _complete(): void {\n    if (this.isEmpty) {\n      this.destination.next(this.defaultValue);\n    }\n    this.destination.complete();\n  }\n}\n","export function isDate(value: any): value is Date {\n  return value instanceof Date && !isNaN(+value);\n}\n","import { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Notification } from '../Notification';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, PartialObserver, SchedulerAction, SchedulerLike, TeardownLogic } from '../types';\n\n/**\n * Delays the emission of items from the source Observable by a given timeout or\n * until a given Date.\n *\n * <span class=\"informal\">Time shifts each item by some specified amount of\n * milliseconds.</span>\n *\n * ![](delay.png)\n *\n * If the delay argument is a Number, this operator time shifts the source\n * Observable by that amount of time expressed in milliseconds. The relative\n * time intervals between the values are preserved.\n *\n * If the delay argument is a Date, this operator time shifts the start of the\n * Observable execution until the given date occurs.\n *\n * ## Examples\n * Delay each click by one second\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const delayedClicks = clicks.pipe(delay(1000)); // each click emitted after 1 second\n * delayedClicks.subscribe(x => console.log(x));\n * ```\n *\n * Delay all clicks until a future date happens\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const date = new Date('March 15, 2050 12:00:00'); // in the future\n * const delayedClicks = clicks.pipe(delay(date)); // click emitted only after that date\n * delayedClicks.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n *\n * @param {number|Date} delay The delay duration in milliseconds (a `number`) or\n * a `Date` until which the emission of the source items is delayed.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the time-shift for each item.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified timeout or Date.\n * @method delay\n * @owner Observable\n */\nexport function delay<T>(delay: number|Date,\n                         scheduler: SchedulerLike = async): MonoTypeOperatorFunction<T> {\n  const absoluteDelay = isDate(delay);\n  const delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(<number>delay);\n  return (source: Observable<T>) => source.lift(new DelayOperator(delayFor, scheduler));\n}\n\nclass DelayOperator<T> implements Operator<T, T> {\n  constructor(private delay: number,\n              private scheduler: SchedulerLike) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));\n  }\n}\n\ninterface DelayState<T> {\n  source: DelaySubscriber<T>;\n  destination: PartialObserver<T>;\n  scheduler: SchedulerLike;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DelaySubscriber<T> extends Subscriber<T> {\n  private queue: Array<DelayMessage<T>> = [];\n  private active: boolean = false;\n  private errored: boolean = false;\n\n  private static dispatch<T>(this: SchedulerAction<DelayState<T>>, state: DelayState<T>): void {\n    const source = state.source;\n    const queue = source.queue;\n    const scheduler = state.scheduler;\n    const destination = state.destination;\n\n    while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {\n      queue.shift().notification.observe(destination);\n    }\n\n    if (queue.length > 0) {\n      const delay = Math.max(0, queue[0].time - scheduler.now());\n      this.schedule(state, delay);\n    } else {\n      this.unsubscribe();\n      source.active = false;\n    }\n  }\n\n  constructor(destination: Subscriber<T>,\n              private delay: number,\n              private scheduler: SchedulerLike) {\n    super(destination);\n  }\n\n  private _schedule(scheduler: SchedulerLike): void {\n    this.active = true;\n    const destination = this.destination as Subscription;\n    destination.add(scheduler.schedule<DelayState<T>>(DelaySubscriber.dispatch, this.delay, {\n      source: this, destination: this.destination, scheduler: scheduler\n    }));\n  }\n\n  private scheduleNotification(notification: Notification<T>): void {\n    if (this.errored === true) {\n      return;\n    }\n\n    const scheduler = this.scheduler;\n    const message = new DelayMessage(scheduler.now() + this.delay, notification);\n    this.queue.push(message);\n\n    if (this.active === false) {\n      this._schedule(scheduler);\n    }\n  }\n\n  protected _next(value: T) {\n    this.scheduleNotification(Notification.createNext(value));\n  }\n\n  protected _error(err: any) {\n    this.errored = true;\n    this.queue = [];\n    this.destination.error(err);\n    this.unsubscribe();\n  }\n\n  protected _complete() {\n    this.scheduleNotification(Notification.createComplete());\n    this.unsubscribe();\n  }\n}\n\nclass DelayMessage<T> {\n  constructor(public readonly time: number,\n              public readonly notification: Notification<T>) {\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/* tslint:disable:max-line-length */\n/** @deprecated In future versions, empty notifiers will no longer re-emit the source value on the output observable. */\nexport function delayWhen<T>(delayDurationSelector: (value: T, index: number) => Observable<never>, subscriptionDelay?: Observable<any>): MonoTypeOperatorFunction<T>;\nexport function delayWhen<T>(delayDurationSelector: (value: T, index: number) => Observable<any>, subscriptionDelay?: Observable<any>): MonoTypeOperatorFunction<T>;\n/* tslint:disable:max-line-length */\n\n/**\n * Delays the emission of items from the source Observable by a given time span\n * determined by the emissions of another Observable.\n *\n * <span class=\"informal\">It's like {@link delay}, but the time span of the\n * delay duration is determined by a second Observable.</span>\n *\n * ![](delayWhen.png)\n *\n * `delayWhen` time shifts each emitted value from the source Observable by a\n * time span determined by another Observable. When the source emits a value,\n * the `delayDurationSelector` function is called with the source value as\n * argument, and should return an Observable, called the \"duration\" Observable.\n * The source value is emitted on the output Observable only when the duration\n * Observable emits a value or completes.\n * The completion of the notifier triggering the emission of the source value\n * is deprecated behavior and will be removed in future versions.\n *\n * Optionally, `delayWhen` takes a second argument, `subscriptionDelay`, which\n * is an Observable. When `subscriptionDelay` emits its first value or\n * completes, the source Observable is subscribed to and starts behaving like\n * described in the previous paragraph. If `subscriptionDelay` is not provided,\n * `delayWhen` will subscribe to the source Observable as soon as the output\n * Observable is subscribed.\n *\n * ## Example\n * Delay each click by a random amount of time, between 0 and 5 seconds\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const delayedClicks = clicks.pipe(\n *   delayWhen(event => interval(Math.random() * 5000)),\n * );\n * delayedClicks.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link debounce}\n * @see {@link delay}\n *\n * @param {function(value: T, index: number): Observable} delayDurationSelector A function that\n * returns an Observable for each value emitted by the source Observable, which\n * is then used to delay the emission of that item on the output Observable\n * until the Observable returned from this function emits a value.\n * @param {Observable} subscriptionDelay An Observable that triggers the\n * subscription to the source Observable once it emits any value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by an amount of time specified by the Observable returned by\n * `delayDurationSelector`.\n * @method delayWhen\n * @owner Observable\n */\nexport function delayWhen<T>(delayDurationSelector: (value: T, index: number) => Observable<any>,\n                             subscriptionDelay?: Observable<any>): MonoTypeOperatorFunction<T> {\n  if (subscriptionDelay) {\n    return (source: Observable<T>) =>\n      new SubscriptionDelayObservable(source, subscriptionDelay)\n        .lift(new DelayWhenOperator(delayDurationSelector));\n  }\n  return (source: Observable<T>) => source.lift(new DelayWhenOperator(delayDurationSelector));\n}\n\nclass DelayWhenOperator<T> implements Operator<T, T> {\n  constructor(private delayDurationSelector: (value: T, index: number) => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DelayWhenSubscriber(subscriber, this.delayDurationSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DelayWhenSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private completed: boolean = false;\n  private delayNotifierSubscriptions: Array<Subscription> = [];\n  private index: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private delayDurationSelector: (value: T, index: number) => Observable<any>) {\n    super(destination);\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(outerValue);\n    this.removeSubscription(innerSub);\n    this.tryComplete();\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, R>): void {\n    this._error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, R>): void {\n    const value = this.removeSubscription(innerSub);\n    if (value) {\n      this.destination.next(value);\n    }\n    this.tryComplete();\n  }\n\n  protected _next(value: T): void {\n    const index = this.index++;\n    try {\n      const delayNotifier = this.delayDurationSelector(value, index);\n      if (delayNotifier) {\n        this.tryDelay(delayNotifier, value);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    this.completed = true;\n    this.tryComplete();\n    this.unsubscribe();\n  }\n\n  private removeSubscription(subscription: InnerSubscriber<T, R>): T {\n    subscription.unsubscribe();\n\n    const subscriptionIdx = this.delayNotifierSubscriptions.indexOf(subscription);\n    if (subscriptionIdx !== -1) {\n      this.delayNotifierSubscriptions.splice(subscriptionIdx, 1);\n    }\n\n    return subscription.outerValue;\n  }\n\n  private tryDelay(delayNotifier: Observable<any>, value: T): void {\n    const notifierSubscription = subscribeToResult(this, delayNotifier, value);\n\n    if (notifierSubscription && !notifierSubscription.closed) {\n      const destination = this.destination as Subscription;\n      destination.add(notifierSubscription);\n      this.delayNotifierSubscriptions.push(notifierSubscription);\n    }\n  }\n\n  private tryComplete(): void {\n    if (this.completed && this.delayNotifierSubscriptions.length === 0) {\n      this.destination.complete();\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SubscriptionDelayObservable<T> extends Observable<T> {\n  constructor(public source: Observable<T>, private subscriptionDelay: Observable<any>) {\n    super();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>) {\n    this.subscriptionDelay.subscribe(new SubscriptionDelaySubscriber(subscriber, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SubscriptionDelaySubscriber<T> extends Subscriber<T> {\n  private sourceSubscribed: boolean = false;\n\n  constructor(private parent: Subscriber<T>, private source: Observable<T>) {\n    super();\n  }\n\n  protected _next(unused: any) {\n    this.subscribeToSource();\n  }\n\n  protected _error(err: any) {\n    this.unsubscribe();\n    this.parent.error(err);\n  }\n\n  protected _complete() {\n    this.unsubscribe();\n    this.subscribeToSource();\n  }\n\n  private subscribeToSource(): void {\n    if (!this.sourceSubscribed) {\n      this.sourceSubscribed = true;\n      this.unsubscribe();\n      this.source.subscribe(this.parent);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nimport { OperatorFunction } from '../types';\n\n/**\n * Converts an Observable of {@link Notification} objects into the emissions\n * that they represent.\n *\n * <span class=\"informal\">Unwraps {@link Notification} objects as actual `next`,\n * `error` and `complete` emissions. The opposite of {@link materialize}.</span>\n *\n * ![](dematerialize.png)\n *\n * `dematerialize` is assumed to operate an Observable that only emits\n * {@link Notification} objects as `next` emissions, and does not emit any\n * `error`. Such Observable is the output of a `materialize` operation. Those\n * notifications are then unwrapped using the metadata they contain, and emitted\n * as `next`, `error`, and `complete` on the output Observable.\n *\n * Use this operator in conjunction with {@link materialize}.\n *\n * ## Example\n * Convert an Observable of Notifications to an actual Observable\n * ```javascript\n * const notifA = new Notification('N', 'A');\n * const notifB = new Notification('N', 'B');\n * const notifE = new Notification('E', undefined,\n *   new TypeError('x.toUpperCase is not a function')\n * );\n * const materialized = of(notifA, notifB, notifE);\n * const upperCase = materialized.pipe(dematerialize());\n * upperCase.subscribe(x => console.log(x), e => console.error(e));\n *\n * // Results in:\n * // A\n * // B\n * // TypeError: x.toUpperCase is not a function\n * ```\n *\n * @see {@link Notification}\n * @see {@link materialize}\n *\n * @return {Observable} An Observable that emits items and notifications\n * embedded in Notification objects emitted by the source Observable.\n * @method dematerialize\n * @owner Observable\n */\nexport function dematerialize<T>(): OperatorFunction<Notification<T>, T> {\n  return function dematerializeOperatorFunction(source: Observable<Notification<T>>) {\n    return source.lift(new DeMaterializeOperator());\n  };\n}\n\nclass DeMaterializeOperator<T extends Notification<any>, R> implements Operator<T, R> {\n  call(subscriber: Subscriber<any>, source: any): any {\n    return source.subscribe(new DeMaterializeSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DeMaterializeSubscriber<T extends Notification<any>> extends Subscriber<T> {\n  constructor(destination: Subscriber<any>) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    value.observe(this.destination);\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from previous items.\n *\n * If a keySelector function is provided, then it will project each value from the source observable into a new value that it will\n * check for equality with previously projected values. If a keySelector function is not provided, it will use each value from the\n * source observable directly with an equality check against previous values.\n *\n * In JavaScript runtimes that support `Set`, this operator will use a `Set` to improve performance of the distinct value checking.\n *\n * In other runtimes, this operator will use a minimal implementation of `Set` that relies on an `Array` and `indexOf` under the\n * hood, so performance will degrade as more values are checked for distinction. Even in newer browsers, a long-running `distinct`\n * use might result in memory leaks. To help alleviate this in some scenarios, an optional `flushes` parameter is also provided so\n * that the internal `Set` can be \"flushed\", basically clearing it of values.\n *\n * ## Examples\n * A simple example with numbers\n * ```javascript\n * of(1, 1, 2, 2, 2, 1, 2, 3, 4, 3, 2, 1).pipe(\n *     distinct(),\n *   )\n *   .subscribe(x => console.log(x)); // 1, 2, 3, 4\n * ```\n *\n * An example using a keySelector function\n * ```typescript\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'},\n *   ).pipe(\n *     distinct((p: Person) => p.name),\n *   )\n *   .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * ```\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [keySelector] Optional function to select which value you want to check as distinct.\n * @param {Observable} [flushes] Optional Observable for flushing the internal HashSet of the operator.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinct\n * @owner Observable\n */\nexport function distinct<T, K>(keySelector?: (value: T) => K,\n                               flushes?: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new DistinctOperator(keySelector, flushes));\n}\n\nclass DistinctOperator<T, K> implements Operator<T, T> {\n  constructor(private keySelector: (value: T) => K, private flushes: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DistinctSubscriber(subscriber, this.keySelector, this.flushes));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class DistinctSubscriber<T, K> extends OuterSubscriber<T, T> {\n  private values = new Set<K>();\n\n  constructor(destination: Subscriber<T>, private keySelector: (value: T) => K, flushes: Observable<any>) {\n    super(destination);\n\n    if (flushes) {\n      this.add(subscribeToResult(this, flushes));\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: T,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, T>): void {\n    this.values.clear();\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, T>): void {\n    this._error(error);\n  }\n\n  protected _next(value: T): void {\n    if (this.keySelector) {\n      this._useKeySelector(value);\n    } else {\n      this._finalizeNext(value, value);\n    }\n  }\n\n  private _useKeySelector(value: T): void {\n    let key: K;\n    const { destination } = this;\n    try {\n      key = this.keySelector(value);\n    } catch (err) {\n      destination.error(err);\n      return;\n    }\n    this._finalizeNext(key, value);\n  }\n\n  private _finalizeNext(key: K|T, value: T) {\n    const { values } = this;\n    if (!values.has(<K>key)) {\n      values.add(<K>key);\n      this.destination.next(value);\n    }\n  }\n\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function distinctUntilChanged<T>(compare?: (x: T, y: T) => boolean): MonoTypeOperatorFunction<T>;\nexport function distinctUntilChanged<T, K>(compare: (x: K, y: K) => boolean, keySelector: (x: T) => K): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * ## Example\n * A simple example with numbers\n * ```javascript\n * of(1, 1, 2, 2, 2, 1, 1, 2, 3, 3, 4).pipe(\n *     distinctUntilChanged(),\n *   )\n *   .subscribe(x => console.log(x)); // 1, 2, 1, 2, 3, 4\n * ```\n *\n * An example using a compare function\n * ```typescript\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'},\n *     { age: 6, name: 'Foo'},\n *   ).pipe(\n *     distinctUntilChanged((p: Person, q: Person) => p.name === q.name),\n *   )\n *   .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinctUntilChanged\n * @owner Observable\n */\nexport function distinctUntilChanged<T, K>(compare?: (x: K, y: K) => boolean, keySelector?: (x: T) => K): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new DistinctUntilChangedOperator<T, K>(compare, keySelector));\n}\n\nclass DistinctUntilChangedOperator<T, K> implements Operator<T, T> {\n  constructor(private compare: (x: K, y: K) => boolean,\n              private keySelector: (x: T) => K) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DistinctUntilChangedSubscriber<T, K> extends Subscriber<T> {\n  private key: K;\n  private hasKey: boolean = false;\n\n  constructor(destination: Subscriber<T>,\n              compare: (x: K, y: K) => boolean,\n              private keySelector: (x: T) => K) {\n    super(destination);\n    if (typeof compare === 'function') {\n      this.compare = compare;\n    }\n  }\n\n  private compare(x: any, y: any): boolean {\n    return x === y;\n  }\n\n  protected _next(value: T): void {\n\n    const keySelector = this.keySelector;\n    let key: any = value;\n\n    if (keySelector) {\n      key = tryCatch(this.keySelector)(value);\n      if (key === errorObject) {\n        return this.destination.error(errorObject.e);\n      }\n    }\n\n    let result: any = false;\n\n    if (this.hasKey) {\n      result = tryCatch(this.compare)(this.key, key);\n      if (result === errorObject) {\n        return this.destination.error(errorObject.e);\n      }\n    } else {\n      this.hasKey = true;\n    }\n\n    if (Boolean(result) === false) {\n      this.key = key;\n      this.destination.next(value);\n    }\n  }\n}\n","import { distinctUntilChanged } from './distinctUntilChanged';\nimport { MonoTypeOperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function distinctUntilKeyChanged<T>(key: keyof T): MonoTypeOperatorFunction<T>;\nexport function distinctUntilKeyChanged<T, K extends keyof T>(key: K, compare: (x: T[K], y: T[K]) => boolean): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item,\n * using a property accessed by using the key provided to check if the two items are distinct.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * ## Examples\n * An example comparing the name of persons\n * ```typescript\n *  interface Person {\n *     age: number,\n *     name: string\n *  }\n *\n * of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'},\n *     { age: 6, name: 'Foo'},\n *   ).pipe(\n *     distinctUntilKeyChanged('name'),\n *   )\n *   .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n * ```\n *\n * An example comparing the first letters of the name\n * ```typescript\n * interface Person {\n *     age: number,\n *     name: string\n *  }\n *\n * of<Person>(\n *     { age: 4, name: 'Foo1'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo2'},\n *     { age: 6, name: 'Foo3'},\n *   ).pipe(\n *     distinctUntilKeyChanged('name', (x: string, y: string) => x.substring(0, 3) === y.substring(0, 3)),\n *   )\n *   .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo1' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo2' }\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n *\n * @param {string} key String key for object property lookup on each item.\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values based on the key specified.\n * @method distinctUntilKeyChanged\n * @owner Observable\n */\nexport function distinctUntilKeyChanged<T, K extends keyof T>(key: K, compare?: (x: T[K], y: T[K]) => boolean): MonoTypeOperatorFunction<T> {\n  return distinctUntilChanged((x: T, y: T) => compare ? compare(x[key], y[key]) : x[key] === y[key]);\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction, MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function filter<T, S extends T>(predicate: (value: T, index: number) => value is S,\n                                       thisArg?: any): OperatorFunction<T, S>;\nexport function filter<T>(predicate: (value: T, index: number) => boolean,\n                          thisArg?: any): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * ![](filter.png)\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * ## Example\n * Emit only click events whose target was a DIV element\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const clicksOnDivs = clicks.pipe(filter(ev => ev.target.tagName === 'DIV'));\n * clicksOnDivs.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nexport function filter<T>(predicate: (value: T, index: number) => boolean,\n                          thisArg?: any): MonoTypeOperatorFunction<T> {\n  return function filterOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new FilterOperator(predicate, thisArg));\n  };\n}\n\nclass FilterOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number) => boolean,\n              private thisArg?: any) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass FilterSubscriber<T> extends Subscriber<T> {\n\n  count: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number) => boolean,\n              private thisArg: any) {\n    super(destination);\n  }\n\n  // the try catch block below is left specifically for\n  // optimization and perf reasons. a tryCatcher is not necessary here.\n  protected _next(value: T) {\n    let result: any;\n    try {\n      result = this.predicate.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    if (result) {\n      this.destination.next(value);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, PartialObserver, TeardownLogic } from '../types';\nimport { noop } from '../util/noop';\nimport { isFunction } from '../util/isFunction';\n\n/* tslint:disable:max-line-length */\nexport function tap<T>(next?: (x: T) => void, error?: (e: any) => void, complete?: () => void): MonoTypeOperatorFunction<T>;\nexport function tap<T>(observer: PartialObserver<T>): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Perform a side effect for every emission on the source Observable, but return\n * an Observable that is identical to the source.\n *\n * <span class=\"informal\">Intercepts each emission on the source and runs a\n * function, but returns an output which is identical to the source as long as errors don't occur.</span>\n *\n * ![](do.png)\n *\n * Returns a mirrored Observable of the source Observable, but modified so that\n * the provided Observer is called to perform a side effect for every value,\n * error, and completion emitted by the source. Any errors that are thrown in\n * the aforementioned Observer or handlers are safely sent down the error path\n * of the output Observable.\n *\n * This operator is useful for debugging your Observables for the correct values\n * or performing other side effects.\n *\n * Note: this is different to a `subscribe` on the Observable. If the Observable\n * returned by `tap` is not subscribed, the side effects specified by the\n * Observer will never happen. `tap` therefore simply spies on existing\n * execution, it does not trigger an execution to happen like `subscribe` does.\n *\n * ## Example\n * Map every click to the clientX position of that click, while also logging the click event\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const positions = clicks.pipe(\n *   tap(ev => console.log(ev)),\n *   map(ev => ev.clientX),\n * );\n * positions.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link map}\n * @see {@link Observable#subscribe}\n *\n * @param {Observer|function} [nextOrObserver] A normal Observer object or a\n * callback for `next`.\n * @param {function} [error] Callback for errors in the source.\n * @param {function} [complete] Callback for the completion of the source.\n * @return {Observable} An Observable identical to the source, but runs the\n * specified Observer or callback(s) for each item.\n * @name tap\n */\nexport function tap<T>(nextOrObserver?: PartialObserver<T> | ((x: T) => void),\n                       error?: (e: any) => void,\n                       complete?: () => void): MonoTypeOperatorFunction<T> {\n  return function tapOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new DoOperator(nextOrObserver, error, complete));\n  };\n}\n\nclass DoOperator<T> implements Operator<T, T> {\n  constructor(private nextOrObserver?: PartialObserver<T> | ((x: T) => void),\n              private error?: (e: any) => void,\n              private complete?: () => void) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TapSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\n\nclass TapSubscriber<T> extends Subscriber<T> {\n  private _context: any;\n\n  private _tapNext: ((value: T) => void) = noop;\n\n  private _tapError: ((err: any) => void) = noop;\n\n  private _tapComplete: (() => void) = noop;\n\n  constructor(destination: Subscriber<T>,\n              observerOrNext?: PartialObserver<T> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n      super(destination);\n      this._tapError = error || noop;\n      this._tapComplete = complete || noop;\n      if (isFunction(observerOrNext)) {\n        this._context = this;\n        this._tapNext = observerOrNext;\n      } else if (observerOrNext) {\n        this._context = observerOrNext;\n        this._tapNext = observerOrNext.next || noop;\n        this._tapError = observerOrNext.error || noop;\n        this._tapComplete = observerOrNext.complete || noop;\n      }\n    }\n\n  _next(value: T) {\n    try {\n      this._tapNext.call(this._context, value);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(value);\n  }\n\n  _error(err: any) {\n    try {\n      this._tapError.call(this._context, err);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.error(err);\n  }\n\n  _complete() {\n    try {\n      this._tapComplete.call(this._context, );\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    return this.destination.complete();\n  }\n}\n","import { tap } from './tap';\nimport { EmptyError } from '../util/EmptyError';\nimport { MonoTypeOperatorFunction } from '../types';\n\n/**\n * If the source observable completes without emitting a value, it will emit\n * an error. The error will be created at that time by the optional\n * `errorFactory` argument, otherwise, the error will be {@link EmptyError}.\n *\n * ![](throwIfEmpty.png)\n *\n * ## Example\n * ```javascript\n * const click$ = fromEvent(button, 'click');\n *\n * clicks$.pipe(\n *   takeUntil(timer(1000)),\n *   throwIfEmpty(\n *     () => new Error('the button was not clicked within 1 second')\n *   ),\n * )\n * .subscribe({\n *   next() { console.log('The button was clicked'); },\n *   error(err) { console.error(err); },\n * });\n * ```\n *\n * @param {Function} [errorFactory] A factory function called to produce the\n * error to be thrown when the source observable completes without emitting a\n * value.\n */\nexport const throwIfEmpty =\n  <T>(errorFactory: (() => any) = defaultErrorFactory) => tap<T>({\n    hasValue: false,\n    next() { this.hasValue = true; },\n    complete() {\n      if (!this.hasValue) {\n        throw errorFactory();\n      }\n    }\n  } as any);\n\nfunction defaultErrorFactory() {\n  return new EmptyError();\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { empty } from '../observable/empty';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Emits only the first `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Takes the first `count` values from the source, then\n * completes.</span>\n *\n * ![](take.png)\n *\n * `take` returns an Observable that emits only the first `count` values emitted\n * by the source Observable. If the source emits fewer than `count` values then\n * all of its values are emitted. After that, it completes, regardless if the\n * source completes.\n *\n * ## Example\n * Take the first 5 seconds of an infinite 1-second interval Observable\n * ```javascript\n * import { interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const intervalCount = interval(1000);\n * const takeFive = intervalCount.pipe(take(5));\n * takeFive.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * // 3\n * // 4\n * ```\n *\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `take(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of `next` values to emit.\n * @return {Observable<T>} An Observable that emits only the first `count`\n * values emitted by the source Observable, or all of the values from the source\n * if the source emits fewer than `count` values.\n * @method take\n * @owner Observable\n */\nexport function take<T>(count: number): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => {\n    if (count === 0) {\n      return empty();\n    } else {\n      return source.lift(new TakeOperator(count));\n    }\n  };\n}\n\nclass TakeOperator<T> implements Operator<T, T> {\n  constructor(private total: number) {\n    if (this.total < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TakeSubscriber(subscriber, this.total));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeSubscriber<T> extends Subscriber<T> {\n  private count: number = 0;\n\n  constructor(destination: Subscriber<T>, private total: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const total = this.total;\n    const count = ++this.count;\n    if (count <= total) {\n      this.destination.next(value);\n      if (count === total) {\n        this.destination.complete();\n        this.unsubscribe();\n      }\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\nimport { filter } from './filter';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { take } from './take';\n\n/**\n * Emits the single value at the specified `index` in a sequence of emissions\n * from the source Observable.\n *\n * <span class=\"informal\">Emits only the i-th value, then completes.</span>\n *\n * ![](elementAt.png)\n *\n * `elementAt` returns an Observable that emits the item at the specified\n * `index` in the source Observable, or a default value if that `index` is out\n * of range and the `default` argument is provided. If the `default` argument is\n * not given and the `index` is out of range, the output Observable will emit an\n * `ArgumentOutOfRangeError` error.\n *\n * ## Example\n * Emit only the third click event\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(elementAt(2));\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // click 1 = nothing\n * // click 2 = nothing\n * // click 3 = MouseEvent object logged to console\n * ```\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link skip}\n * @see {@link single}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `elementAt(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0` or the\n * Observable has completed before emitting the i-th `next` notification.\n *\n * @param {number} index Is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {T} [defaultValue] The default value returned for missing indices.\n * @return {Observable} An Observable that emits a single item, if it is found.\n * Otherwise, will emit the default value if given. If not, then emits an error.\n * @method elementAt\n * @owner Observable\n */\nexport function elementAt<T>(index: number, defaultValue?: T): MonoTypeOperatorFunction<T> {\n  if (index < 0) { throw new ArgumentOutOfRangeError(); }\n  const hasDefaultValue = arguments.length >= 2;\n  return (source: Observable<T>) => source.pipe(\n    filter((v, i) => i === index),\n    take(1),\n    hasDefaultValue\n      ? defaultIfEmpty(defaultValue)\n      : throwIfEmpty(() => new ArgumentOutOfRangeError()),\n  );\n}\n","import { Observable } from '../Observable';\nimport { fromArray } from '../observable/fromArray';\nimport { scalar } from '../observable/scalar';\nimport { empty } from '../observable/empty';\nimport { concat as concatStatic } from '../observable/concat';\nimport { isScheduler } from '../util/isScheduler';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function endWith<T>(scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\nexport function endWith<T>(v1: T, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\nexport function endWith<T>(v1: T, v2: T, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\nexport function endWith<T>(v1: T, v2: T, v3: T, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\nexport function endWith<T>(v1: T, v2: T, v3: T, v4: T, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\nexport function endWith<T>(v1: T, v2: T, v3: T, v4: T, v5: T, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\nexport function endWith<T>(v1: T, v2: T, v3: T, v4: T, v5: T, v6: T, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\nexport function endWith<T>(...array: Array<T | SchedulerLike>): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits the items you specify as arguments after it finishes emitting\n * items emitted by the source Observable.\n *\n * ![](endWith.png)\n *\n * ## Example\n * ### After the source observable completes, appends an emission and then completes too.\n *\n * ```javascript\n * of('hi', 'how are you?', 'sorry, I have to go now').pipe(\n *   endWith('goodbye!'),\n * )\n * .subscribe(word => console.log(word));\n * // result:\n * // 'hi'\n * // 'how are you?'\n * // 'sorry, I have to go now'\n * // 'goodbye!'\n * ```\n *\n * @param {...T} values - Items you want the modified Observable to emit last.\n * @param {SchedulerLike} [scheduler] - A {@link SchedulerLike} to use for scheduling\n * the emissions of the `next` notifications.\n * @return {Observable} An Observable that emits the items emitted by the source Observable\n *  and then emits the items in the specified Iterable.\n * @method endWith\n * @owner Observable\n */\nexport function endWith<T>(...array: Array<T | SchedulerLike>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => {\n    let scheduler = <SchedulerLike>array[array.length - 1];\n    if (isScheduler(scheduler)) {\n      array.pop();\n    } else {\n      scheduler = null;\n    }\n\n    const len = array.length;\n    if (len === 1 && !scheduler) {\n      return concatStatic(source, scalar(array[0] as T));\n    } else if (len > 0) {\n      return concatStatic(source, fromArray(array as T[], scheduler));\n    } else {\n      return concatStatic<T>(source, empty(scheduler) as any);\n    }\n  };\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Observer, OperatorFunction } from '../types';\n\n/**\n * Returns an Observable that emits whether or not every item of the source satisfies the condition specified.\n *\n * ## Example\n * A simple example emitting true if all elements are less than 5, false otherwise\n * ```javascript\n *  of(1, 2, 3, 4, 5, 6).pipe(\n *     every(x => x < 5),\n * )\n * .subscribe(x => console.log(x)); // -> false\n * ```\n *\n * @param {function} predicate A function for determining if an item meets a specified condition.\n * @param {any} [thisArg] Optional object to use for `this` in the callback.\n * @return {Observable} An Observable of booleans that determines if all items of the source Observable meet the condition specified.\n * @method every\n * @owner Observable\n */\nexport function every<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                         thisArg?: any): OperatorFunction<T, boolean> {\n  return (source: Observable<T>) => source.lift(new EveryOperator(predicate, thisArg, source));\n}\n\nclass EveryOperator<T> implements Operator<T, boolean> {\n  constructor(private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private thisArg?: any,\n              private source?: Observable<T>) {\n  }\n\n  call(observer: Subscriber<boolean>, source: any): any {\n    return source.subscribe(new EverySubscriber(observer, this.predicate, this.thisArg, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass EverySubscriber<T> extends Subscriber<T> {\n  private index: number = 0;\n\n  constructor(destination: Observer<boolean>,\n              private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private thisArg: any,\n              private source?: Observable<T>) {\n    super(destination);\n    this.thisArg = thisArg || this;\n  }\n\n  private notifyComplete(everyValueMatch: boolean): void {\n    this.destination.next(everyValueMatch);\n    this.destination.complete();\n  }\n\n  protected _next(value: T): void {\n    let result = false;\n    try {\n      result = this.predicate.call(this.thisArg, value, this.index++, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    if (!result) {\n      this.notifyComplete(false);\n    }\n  }\n\n  protected _complete(): void {\n    this.notifyComplete(true);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { ObservableInput, OperatorFunction, TeardownLogic } from '../types';\n\nexport function exhaust<T>(): OperatorFunction<ObservableInput<T>, T>;\nexport function exhaust<R>(): OperatorFunction<any, R>;\n\n/**\n * Converts a higher-order Observable into a first-order Observable by dropping\n * inner Observables while the previous inner Observable has not yet completed.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by dropping the\n * next inner Observables while the current inner is still executing.</span>\n *\n * ![](exhaust.png)\n *\n * `exhaust` subscribes to an Observable that emits Observables, also known as a\n * higher-order Observable. Each time it observes one of these emitted inner\n * Observables, the output Observable begins emitting the items emitted by that\n * inner Observable. So far, it behaves like {@link mergeAll}. However,\n * `exhaust` ignores every new inner Observable if the previous Observable has\n * not yet completed. Once that one completes, it will accept and flatten the\n * next inner Observable and repeat this process.\n *\n * ## Example\n * Run a finite timer for each click, only if there is no currently active timer\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map((ev) => interval(1000).pipe(take(5))),\n * );\n * const result = higherOrder.pipe(exhaust());\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link mergeAll}\n * @see {@link exhaustMap}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable that takes a source of Observables and propagates the first observable\n * exclusively until it completes before subscribing to the next.\n * @method exhaust\n * @owner Observable\n */\nexport function exhaust<T>(): OperatorFunction<any, T> {\n  return (source: Observable<T>) => source.lift(new SwitchFirstOperator<T>());\n}\n\nclass SwitchFirstOperator<T> implements Operator<T, T> {\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SwitchFirstSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SwitchFirstSubscriber<T> extends OuterSubscriber<T, T> {\n  private hasCompleted: boolean = false;\n  private hasSubscription: boolean = false;\n\n  constructor(destination: Subscriber<T>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (!this.hasSubscription) {\n      this.hasSubscription = true;\n      this.add(subscribeToResult(this, value));\n    }\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (!this.hasSubscription) {\n      this.destination.complete();\n    }\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    this.remove(innerSub);\n    this.hasSubscription = false;\n    if (this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { ObservableInput, OperatorFunction } from '../types';\nimport { map } from './map';\nimport { from } from '../observable/from';\n\n/* tslint:disable:max-line-length */\nexport function exhaustMap<T, R>(project: (value: T, index: number) => ObservableInput<R>): OperatorFunction<T, R>;\n/** @deprecated resultSelector is no longer supported. Use inner map instead. */\nexport function exhaustMap<T, R>(project: (value: T, index: number) => ObservableInput<R>, resultSelector: undefined): OperatorFunction<T, R>;\n/** @deprecated resultSelector is no longer supported. Use inner map instead. */\nexport function exhaustMap<T, I, R>(project: (value: T, index: number) => ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable only if the previous projected Observable has completed.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link exhaust}.</span>\n *\n * ![](exhaustMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. When it projects a source value to\n * an Observable, the output Observable begins emitting the items emitted by\n * that projected Observable. However, `exhaustMap` ignores every new projected\n * Observable if the previous projected Observable has not yet completed. Once\n * that one completes, it will accept and flatten the next projected Observable\n * and repeat this process.\n *\n * ## Example\n * Run a finite timer for each click, only if there is no currently active timer\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   exhaustMap((ev) => interval(1000).pipe(take(5))),\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaust}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return {Observable} An Observable containing projected Observables\n * of each item of the source, ignoring projected Observables that start before\n * their preceding Observable has completed.\n * @method exhaustMap\n * @owner Observable\n */\nexport function exhaustMap<T, I, R>(\n  project: (value: T, index: number) => ObservableInput<I>,\n  resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n): OperatorFunction<T, I|R> {\n  if (resultSelector) {\n    // DEPRECATED PATH\n    return (source: Observable<T>) => source.pipe(\n      exhaustMap((a, i) => from(project(a, i)).pipe(\n        map((b, ii) => resultSelector(a, b, i, ii)),\n      )),\n    );\n  }\n  return (source: Observable<T>) =>\n    source.lift(new ExhauseMapOperator(project));\n}\n\nclass ExhauseMapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => ObservableInput<R>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new ExhaustMapSubscriber(subscriber, this.project));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ExhaustMapSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private hasSubscription = false;\n  private hasCompleted = false;\n  private index = 0;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => ObservableInput<R>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (!this.hasSubscription) {\n      this.tryNext(value);\n    }\n  }\n\n  private tryNext(value: T): void {\n    let result: ObservableInput<R>;\n    const index = this.index++;\n    try {\n      result = this.project(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.hasSubscription = true;\n    this._innerSub(result, value, index);\n  }\n\n  private _innerSub(result: ObservableInput<R>, value: T, index: number): void {\n    const innerSubscriber = new InnerSubscriber(this, undefined, undefined);\n    const destination = this.destination as Subscription;\n    destination.add(innerSubscriber);\n    subscribeToResult<T, R>(this, result, value, index, innerSubscriber);\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (!this.hasSubscription) {\n      this.destination.complete();\n    }\n    this.unsubscribe();\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyError(err: any): void {\n    this.destination.error(err);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const destination = this.destination as Subscription;\n    destination.remove(innerSub);\n\n    this.hasSubscription = false;\n    if (this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction, OperatorFunction, ObservableInput, SchedulerLike } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function expand<T, R>(project: (value: T, index: number) => ObservableInput<R>, concurrent?: number, scheduler?: SchedulerLike): OperatorFunction<T, R>;\nexport function expand<T>(project: (value: T, index: number) => ObservableInput<T>, concurrent?: number, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Recursively projects each source value to an Observable which is merged in\n * the output Observable.\n *\n * <span class=\"informal\">It's similar to {@link mergeMap}, but applies the\n * projection function to every source value as well as every output value.\n * It's recursive.</span>\n *\n * ![](expand.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger. *Expand* will re-emit on the output\n * Observable every source value. Then, each output value is given to the\n * `project` function which returns an inner Observable to be merged on the\n * output Observable. Those output values resulting from the projection are also\n * given to the `project` function to produce new output values. This is how\n * *expand* behaves recursively.\n *\n * ## Example\n * Start emitting the powers of two on every click, at most 10 of them\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const powersOfTwo = clicks.pipe(\n *   mapTo(1),\n *   expand(x => of(2 * x).pipe(delay(1000))),\n *   take(10),\n * );\n * powersOfTwo.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n *\n * @param {function(value: T, index: number) => Observable} project A function\n * that, when applied to an item emitted by the source or the output Observable,\n * returns an Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for subscribing to\n * each projected inner Observable.\n * @return {Observable} An Observable that emits the source values and also\n * result of applying the projection function to each value emitted on the\n * output Observable and and merging the results of the Observables obtained\n * from this transformation.\n * @method expand\n * @owner Observable\n */\nexport function expand<T, R>(project: (value: T, index: number) => ObservableInput<R>,\n                             concurrent: number = Number.POSITIVE_INFINITY,\n                             scheduler: SchedulerLike = undefined): OperatorFunction<T, R> {\n  concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;\n\n  return (source: Observable<T>) => source.lift(new ExpandOperator(project, concurrent, scheduler));\n}\n\nexport class ExpandOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => ObservableInput<R>,\n              private concurrent: number,\n              private scheduler: SchedulerLike) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new ExpandSubscriber(subscriber, this.project, this.concurrent, this.scheduler));\n  }\n}\n\ninterface DispatchArg<T, R> {\n  subscriber: ExpandSubscriber<T, R>;\n  result: ObservableInput<R>;\n  value: any;\n  index: number;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ExpandSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private index: number = 0;\n  private active: number = 0;\n  private hasCompleted: boolean = false;\n  private buffer: any[];\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => ObservableInput<R>,\n              private concurrent: number,\n              private scheduler: SchedulerLike) {\n    super(destination);\n    if (concurrent < Number.POSITIVE_INFINITY) {\n      this.buffer = [];\n    }\n  }\n\n  private static dispatch<T, R>(arg: DispatchArg<T, R>): void {\n    const {subscriber, result, value, index} = arg;\n    subscriber.subscribeToProjection(result, value, index);\n  }\n\n  protected _next(value: any): void {\n    const destination = this.destination;\n\n    if (destination.closed) {\n      this._complete();\n      return;\n    }\n\n    const index = this.index++;\n    if (this.active < this.concurrent) {\n      destination.next(value);\n      let result = tryCatch(this.project)(value, index);\n      if (result === errorObject) {\n        destination.error(errorObject.e);\n      } else if (!this.scheduler) {\n        this.subscribeToProjection(result, value, index);\n      } else {\n        const state: DispatchArg<T, R> = { subscriber: this, result, value, index };\n        const destination = this.destination as Subscription;\n        destination.add(this.scheduler.schedule<DispatchArg<T, R>>(ExpandSubscriber.dispatch, 0, state));\n      }\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  private subscribeToProjection(result: any, value: T, index: number): void {\n    this.active++;\n    const destination = this.destination as Subscription;\n    destination.add(subscribeToResult<T, R>(this, result, value, index));\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.hasCompleted && this.active === 0) {\n      this.destination.complete();\n    }\n    this.unsubscribe();\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this._next(innerValue);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    const destination = this.destination as Subscription;\n    destination.remove(innerSub);\n    this.active--;\n    if (buffer && buffer.length > 0) {\n      this._next(buffer.shift());\n    }\n    if (this.hasCompleted && this.active === 0) {\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\n * the source terminates on complete or error.\n * @param {function} callback Function to be called when source terminates.\n * @return {Observable} An Observable that mirrors the source, but will call the specified function on termination.\n * @method finally\n * @owner Observable\n */\nexport function finalize<T>(callback: () => void): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new FinallyOperator(callback));\n}\n\nclass FinallyOperator<T> implements Operator<T, T> {\n  constructor(private callback: () => void) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new FinallySubscriber(subscriber, this.callback));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass FinallySubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<T>, callback: () => void) {\n    super(destination);\n    this.add(new Subscription(callback));\n  }\n}\n","import {Observable} from '../Observable';\nimport {Operator} from '../Operator';\nimport {Subscriber} from '../Subscriber';\nimport {OperatorFunction} from '../types';\n\nexport function find<T, S extends T>(predicate: (value: T, index: number, source: Observable<T>) => value is S,\n                                     thisArg?: any): OperatorFunction<T, S | undefined>;\nexport function find<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                        thisArg?: any): OperatorFunction<T, T | undefined>;\n/**\n * Emits only the first value emitted by the source Observable that meets some\n * condition.\n *\n * <span class=\"informal\">Finds the first value that passes some test and emits\n * that.</span>\n *\n * ![](find.png)\n *\n * `find` searches for the first item in the source Observable that matches the\n * specified condition embodied by the `predicate`, and returns the first\n * occurrence in the source. Unlike {@link first}, the `predicate` is required\n * in `find`, and does not emit an error if a valid value is not found.\n *\n * ## Example\n * Find and emit the first click that happens on a DIV element\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(find(ev => ev.target.tagName === 'DIV'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link filter}\n * @see {@link first}\n * @see {@link findIndex}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable<T>} An Observable of the first item that matches the\n * condition.\n * @method find\n * @owner Observable\n */\nexport function find<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                        thisArg?: any): OperatorFunction<T, T | undefined> {\n  if (typeof predicate !== 'function') {\n    throw new TypeError('predicate is not a function');\n  }\n  return (source: Observable<T>) => source.lift(new FindValueOperator(predicate, source, false, thisArg)) as Observable<T | undefined>;\n}\n\nexport class FindValueOperator<T> implements Operator<T, T | number | undefined> {\n  constructor(private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private source: Observable<T>,\n              private yieldIndex: boolean,\n              private thisArg?: any) {\n  }\n\n  call(observer: Subscriber<T>, source: any): any {\n    return source.subscribe(new FindValueSubscriber(observer, this.predicate, this.source, this.yieldIndex, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class FindValueSubscriber<T> extends Subscriber<T> {\n  private index: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private source: Observable<T>,\n              private yieldIndex: boolean,\n              private thisArg?: any) {\n    super(destination);\n  }\n\n  private notifyComplete(value: any): void {\n    const destination = this.destination;\n\n    destination.next(value);\n    destination.complete();\n    this.unsubscribe();\n  }\n\n  protected _next(value: T): void {\n    const {predicate, thisArg} = this;\n    const index = this.index++;\n    try {\n      const result = predicate.call(thisArg || this, value, index, this.source);\n      if (result) {\n        this.notifyComplete(this.yieldIndex ? index : value);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    this.notifyComplete(this.yieldIndex ? -1 : undefined);\n  }\n}\n","import { Observable } from '../Observable';\nimport { FindValueOperator } from '../operators/find';\nimport { OperatorFunction } from '../types';\n/**\n * Emits only the index of the first value emitted by the source Observable that\n * meets some condition.\n *\n * <span class=\"informal\">It's like {@link find}, but emits the index of the\n * found value, not the value itself.</span>\n *\n * ![](findIndex.png)\n *\n * `findIndex` searches for the first item in the source Observable that matches\n * the specified condition embodied by the `predicate`, and returns the\n * (zero-based) index of the first occurrence in the source. Unlike\n * {@link first}, the `predicate` is required in `findIndex`, and does not emit\n * an error if a valid value is not found.\n *\n * ## Example\n * Emit the index of first click that happens on a DIV element\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(findIndex(ev => ev.target.tagName === 'DIV'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link first}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of the index of the first item that\n * matches the condition.\n * @method find\n * @owner Observable\n */\nexport function findIndex<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                             thisArg?: any): OperatorFunction<T, number> {\n  return (source: Observable<T>) => source.lift(new FindValueOperator(predicate, source, true, thisArg)) as Observable<any>;\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { EmptyError } from '../util/EmptyError';\nimport { OperatorFunction } from '../../internal/types';\nimport { filter } from './filter';\nimport { take } from './take';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { identity } from '../util/identity';\n\n/* tslint:disable:max-line-length */\nexport function first<T, D = T>(\n  predicate?: null,\n  defaultValue?: D\n): OperatorFunction<T, T | D>;\nexport function first<T, S extends T>(\n  predicate: (value: T, index: number, source: Observable<T>) => value is S,\n  defaultValue?: S\n): OperatorFunction<T, S>;\nexport function first<T, D = T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  defaultValue?: D\n): OperatorFunction<T, T | D>;\n/* tslint:enable:max-line-length */\n\n/**\n * Emits only the first value (or the first value that meets some condition)\n * emitted by the source Observable.\n *\n * <span class=\"informal\">Emits only the first value. Or emits only the first\n * value that passes some test.</span>\n *\n * ![](first.png)\n *\n * If called with no arguments, `first` emits the first value of the source\n * Observable, then completes. If called with a `predicate` function, `first`\n * emits the first value of the source that matches the specified condition. It\n * may also take a deprecated `resultSelector` function to produce the output\n * value from the input value, and a `defaultValue` to emit in case the source\n * completes before it is able to emit a valid value. Throws an error if\n * `defaultValue` was not provided and a matching element is not found.\n *\n * ## Examples\n * Emit only the first click that happens on the DOM\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(first());\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Emits the first click that happens on a DIV\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(first(ev => ev.target.tagName === 'DIV'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link take}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]\n * An optional function called with each item to test for condition matching.\n * @param {R} [defaultValue] The default value emitted in case no valid value\n * was found on the source.\n * @return {Observable<T|R>} An Observable of the first item that matches the\n * condition.\n * @method first\n * @owner Observable\n */\nexport function first<T, D>(\n  predicate?: ((value: T, index: number, source: Observable<T>) => boolean) | null,\n  defaultValue?: D\n): OperatorFunction<T, T | D> {\n  const hasDefaultValue = arguments.length >= 2;\n  return (source: Observable<T>) => source.pipe(\n    predicate ? filter((v, i) => predicate(v, i, source)) : identity,\n    take(1),\n    hasDefaultValue ? defaultIfEmpty<T | D>(defaultValue) : throwIfEmpty(() => new EmptyError()),\n  );\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../types';\n\n/**\n * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.\n *\n * ![](ignoreElements.png)\n *\n * ## Examples\n * ### Ignores emitted values, reacts to observable's completion.\n * ```javascript\n * of('you', 'talking', 'to', 'me').pipe(\n *   ignoreElements(),\n * )\n * .subscribe(\n *   word => console.log(word),\n *   err => console.log('error:', err),\n *   () => console.log('the end'),\n * );\n * // result:\n * // 'the end'\n * ```\n * @return {Observable} An empty Observable that only calls `complete`\n * or `error`, based on which one is called by the source Observable.\n * @method ignoreElements\n * @owner Observable\n */\nexport function ignoreElements(): OperatorFunction<any, never> {\n  return function ignoreElementsOperatorFunction(source: Observable<any>) {\n    return source.lift(new IgnoreElementsOperator());\n  };\n}\n\nclass IgnoreElementsOperator<T, R> implements Operator<T, R> {\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new IgnoreElementsSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass IgnoreElementsSubscriber<T> extends Subscriber<T> {\n  protected _next(unused: T): void {\n    // Do nothing\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../types';\n\nexport function isEmpty<T>(): OperatorFunction<T, boolean> {\n  return (source: Observable<T>) => source.lift(new IsEmptyOperator());\n}\n\nclass IsEmptyOperator implements Operator<any, boolean> {\n  call (observer: Subscriber<boolean>, source: any): any {\n    return source.subscribe(new IsEmptySubscriber(observer));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass IsEmptySubscriber extends Subscriber<any> {\n  constructor(destination: Subscriber<boolean>) {\n    super(destination);\n  }\n\n  private notifyComplete(isEmpty: boolean): void {\n    const destination = this.destination;\n\n    destination.next(isEmpty);\n    destination.complete();\n  }\n\n  protected _next(value: boolean) {\n    this.notifyComplete(false);\n  }\n\n  protected _complete() {\n    this.notifyComplete(true);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { empty } from '../observable/empty';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Emits only the last `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Remembers the latest `count` values, then emits those\n * only when the source completes.</span>\n *\n * ![](takeLast.png)\n *\n * `takeLast` returns an Observable that emits at most the last `count` values\n * emitted by the source Observable. If the source emits fewer than `count`\n * values then all of its values are emitted. This operator must wait until the\n * `complete` notification emission from the source in order to emit the `next`\n * values on the output Observable, because otherwise it is impossible to know\n * whether or not more values will be emitted on the source. For this reason,\n * all values are emitted synchronously, followed by the complete notification.\n *\n * ## Example\n * Take the last 3 values of an Observable with many values\n * ```javascript\n * const many = range(1, 100);\n * const lastThree = many.pipe(takeLast(3));\n * lastThree.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link take}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `takeLast(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of values to emit from the end of\n * the sequence of values emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits at most the last count\n * values emitted by the source Observable.\n * @method takeLast\n * @owner Observable\n */\nexport function takeLast<T>(count: number): MonoTypeOperatorFunction<T> {\n  return function takeLastOperatorFunction(source: Observable<T>): Observable<T> {\n    if (count === 0) {\n      return empty();\n    } else {\n      return source.lift(new TakeLastOperator(count));\n    }\n  };\n}\n\nclass TakeLastOperator<T> implements Operator<T, T> {\n  constructor(private total: number) {\n    if (this.total < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TakeLastSubscriber(subscriber, this.total));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeLastSubscriber<T> extends Subscriber<T> {\n  private ring: Array<T> = new Array();\n  private count: number = 0;\n\n  constructor(destination: Subscriber<T>, private total: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const ring = this.ring;\n    const total = this.total;\n    const count = this.count++;\n\n    if (ring.length < total) {\n      ring.push(value);\n    } else {\n      const index = count % total;\n      ring[index] = value;\n    }\n  }\n\n  protected _complete(): void {\n    const destination = this.destination;\n    let count = this.count;\n\n    if (count > 0) {\n      const total = this.count >= this.total ? this.total : this.count;\n      const ring  = this.ring;\n\n      for (let i = 0; i < total; i++) {\n        const idx = (count++) % total;\n        destination.next(ring[idx]);\n      }\n    }\n\n    destination.complete();\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { EmptyError } from '../util/EmptyError';\nimport { OperatorFunction } from '../../internal/types';\nimport { filter } from './filter';\nimport { takeLast } from './takeLast';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { identity } from '../util/identity';\n\n/* tslint:disable:max-line-length */\nexport function last<T, D = T>(\n  predicate?: null,\n  defaultValue?: D\n): OperatorFunction<T, T | D>;\nexport function last<T, S extends T>(\n  predicate: (value: T, index: number, source: Observable<T>) => value is S,\n  defaultValue?: S\n): OperatorFunction<T, S>;\nexport function last<T, D = T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  defaultValue?: D\n): OperatorFunction<T, T | D>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits only the last item emitted by the source Observable.\n * It optionally takes a predicate function as a parameter, in which case, rather than emitting\n * the last item from the source Observable, the resulting Observable will emit the last item\n * from the source Observable that satisfies the predicate.\n *\n * ![](last.png)\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {function} [predicate] - The condition any source emitted item has to satisfy.\n * @param {any} [defaultValue] - An optional default value to provide if last\n * predicate isn't met or no values were emitted.\n * @return {Observable} An Observable that emits only the last item satisfying the given condition\n * from the source, or an NoSuchElementException if no such items are emitted.\n * @throws - Throws if no items that match the predicate are emitted by the source Observable.\n */\nexport function last<T, D>(\n  predicate?: ((value: T, index: number, source: Observable<T>) => boolean) | null,\n  defaultValue?: D\n): OperatorFunction<T, T | D> {\n  const hasDefaultValue = arguments.length >= 2;\n  return (source: Observable<T>) => source.pipe(\n    predicate ? filter((v, i) => predicate(v, i, source)) : identity,\n    takeLast(1),\n    hasDefaultValue ? defaultIfEmpty<T | D>(defaultValue) : throwIfEmpty(() => new EmptyError()),\n  );\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../types';\n\n/**\n * Emits the given constant value on the output Observable every time the source\n * Observable emits a value.\n *\n * <span class=\"informal\">Like {@link map}, but it maps every source value to\n * the same output value every time.</span>\n *\n * ![](mapTo.png)\n *\n * Takes a constant `value` as argument, and emits that whenever the source\n * Observable emits a value. In other words, ignores the actual source value,\n * and simply uses the emission moment to know when to emit the given `value`.\n *\n * ## Example\n * Map every click to the string 'Hi'\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const greetings = clicks.pipe(mapTo('Hi'));\n * greetings.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link map}\n *\n * @param {any} value The value to map each source value to.\n * @return {Observable} An Observable that emits the given `value` every time\n * the source Observable emits something.\n * @method mapTo\n * @owner Observable\n */\nexport function mapTo<T, R>(value: R): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift(new MapToOperator(value));\n}\n\nclass MapToOperator<T, R> implements Operator<T, R> {\n\n  value: R;\n\n  constructor(value: R) {\n    this.value = value;\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new MapToSubscriber(subscriber, this.value));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MapToSubscriber<T, R> extends Subscriber<T> {\n\n  value: R;\n\n  constructor(destination: Subscriber<R>, value: R) {\n    super(destination);\n    this.value = value;\n  }\n\n  protected _next(x: T) {\n    this.destination.next(this.value);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nimport { OperatorFunction } from '../types';\n\n/**\n * Represents all of the notifications from the source Observable as `next`\n * emissions marked with their original types within {@link Notification}\n * objects.\n *\n * <span class=\"informal\">Wraps `next`, `error` and `complete` emissions in\n * {@link Notification} objects, emitted as `next` on the output Observable.\n * </span>\n *\n * ![](materialize.png)\n *\n * `materialize` returns an Observable that emits a `next` notification for each\n * `next`, `error`, or `complete` emission of the source Observable. When the\n * source Observable emits `complete`, the output Observable will emit `next` as\n * a Notification of type \"complete\", and then it will emit `complete` as well.\n * When the source Observable emits `error`, the output will emit `next` as a\n * Notification of type \"error\", and then `complete`.\n *\n * This operator is useful for producing metadata of the source Observable, to\n * be consumed as `next` emissions. Use it in conjunction with\n * {@link dematerialize}.\n *\n * ## Example\n * Convert a faulty Observable to an Observable of Notifications\n * ```javascript\n * const letters = of('a', 'b', 13, 'd');\n * const upperCase = letters.pipe(map(x => x.toUpperCase()));\n * const materialized = upperCase.pipe(materialize());\n * materialized.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - Notification {kind: \"N\", value: \"A\", error: undefined, hasValue: true}\n * // - Notification {kind: \"N\", value: \"B\", error: undefined, hasValue: true}\n * // - Notification {kind: \"E\", value: undefined, error: TypeError:\n * //   x.toUpperCase is not a function at MapSubscriber.letters.map.x\n * //   [as project] (http://1…, hasValue: false}\n * ```\n *\n * @see {@link Notification}\n * @see {@link dematerialize}\n *\n * @return {Observable<Notification<T>>} An Observable that emits\n * {@link Notification} objects that wrap the original emissions from the source\n * Observable with metadata.\n * @method materialize\n * @owner Observable\n */\nexport function materialize<T>(): OperatorFunction<T, Notification<T>> {\n  return function materializeOperatorFunction(source: Observable<T>) {\n    return source.lift(new MaterializeOperator());\n  };\n}\n\nclass MaterializeOperator<T> implements Operator<T, Notification<T>> {\n  call(subscriber: Subscriber<Notification<T>>, source: any): any {\n    return source.subscribe(new MaterializeSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MaterializeSubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<Notification<T>>) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    this.destination.next(Notification.createNext(value));\n  }\n\n  protected _error(err: any) {\n    const destination = this.destination;\n    destination.next(Notification.createError(err));\n    destination.complete();\n  }\n\n  protected _complete() {\n    const destination = this.destination;\n    destination.next(Notification.createComplete());\n    destination.complete();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function scan<T>(accumulator: (acc: T, value: T, index: number) => T, seed?: T): MonoTypeOperatorFunction<T>;\nexport function scan<T>(accumulator: (acc: T[], value: T, index: number) => T[], seed?: T[]): OperatorFunction<T, T[]>;\nexport function scan<T, R>(accumulator: (acc: R, value: T, index: number) => R, seed?: R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Applies an accumulator function over the source Observable, and returns each\n * intermediate result, with an optional seed value.\n *\n * <span class=\"informal\">It's like {@link reduce}, but emits the current\n * accumulation whenever the source emits a value.</span>\n *\n * ![](scan.png)\n *\n * Combines together all values emitted on the source, using an accumulator\n * function that knows how to join a new source value into the accumulation from\n * the past. Is similar to {@link reduce}, but emits the intermediate\n * accumulations.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * ## Example\n * Count the number of click events\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const ones = clicks.pipe(mapTo(1));\n * const seed = 0;\n * const count = ones.pipe(scan((acc, one) => acc + one, seed));\n * count.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link reduce}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator\n * The accumulator function called on each source value.\n * @param {T|R} [seed] The initial accumulation value.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method scan\n * @owner Observable\n */\nexport function scan<T, R>(accumulator: (acc: R, value: T, index: number) => R, seed?: T | R): OperatorFunction<T, R> {\n  let hasSeed = false;\n  // providing a seed of `undefined` *should* be valid and trigger\n  // hasSeed! so don't use `seed !== undefined` checks!\n  // For this reason, we have to check it here at the original call site\n  // otherwise inside Operator/Subscriber we won't know if `undefined`\n  // means they didn't provide anything or if they literally provided `undefined`\n  if (arguments.length >= 2) {\n    hasSeed = true;\n  }\n\n  return function scanOperatorFunction(source: Observable<T>): Observable<R> {\n    return source.lift(new ScanOperator(accumulator, seed, hasSeed));\n  };\n}\n\nclass ScanOperator<T, R> implements Operator<T, R> {\n  constructor(private accumulator: (acc: R, value: T, index: number) => R, private seed?: T | R, private hasSeed: boolean = false) {}\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ScanSubscriber<T, R> extends Subscriber<T> {\n  private index: number = 0;\n\n  get seed(): T | R {\n    return this._seed;\n  }\n\n  set seed(value: T | R) {\n    this.hasSeed = true;\n    this._seed = value;\n  }\n\n  constructor(destination: Subscriber<R>, private accumulator: (acc: R, value: T, index: number) => R, private _seed: T | R,\n              private hasSeed: boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (!this.hasSeed) {\n      this.seed = value;\n      this.destination.next(value);\n    } else {\n      return this._tryNext(value);\n    }\n  }\n\n  private _tryNext(value: T): void {\n    const index = this.index++;\n    let result: any;\n    try {\n      result = this.accumulator(<R>this.seed, value, index);\n    } catch (err) {\n      this.destination.error(err);\n    }\n    this.seed = result;\n    this.destination.next(result);\n  }\n}\n","import { Observable } from '../Observable';\nimport { scan } from './scan';\nimport { takeLast } from './takeLast';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../types';\nimport { pipe } from '../util/pipe';\n\n/* tslint:disable:max-line-length */\nexport function reduce<T>(accumulator: (acc: T, value: T, index: number) => T, seed?: T): MonoTypeOperatorFunction<T>;\nexport function reduce<T>(accumulator: (acc: T[], value: T, index: number) => T[], seed: T[]): OperatorFunction<T, T[]>;\nexport function reduce<T, R>(accumulator: (acc: R, value: T, index: number) => R, seed?: R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Applies an accumulator function over the source Observable, and returns the\n * accumulated result when the source completes, given an optional seed value.\n *\n * <span class=\"informal\">Combines together all values emitted on the source,\n * using an accumulator function that knows how to join a new source value into\n * the accumulation from the past.</span>\n *\n * ![](reduce.png)\n *\n * Like\n * [Array.prototype.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce),\n * `reduce` applies an `accumulator` function against an accumulation and each\n * value of the source Observable (from the past) to reduce it to a single\n * value, emitted on the output Observable. Note that `reduce` will only emit\n * one value, only when the source Observable completes. It is equivalent to\n * applying operator {@link scan} followed by operator {@link last}.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * ## Example\n * Count the number of click events that happened in 5 seconds\n * ```javascript\n * const clicksInFiveSeconds = fromEvent(document, 'click').pipe(\n *   takeUntil(interval(5000)),\n * );\n * const ones = clicksInFiveSeconds.pipe(mapTo(1));\n * const seed = 0;\n * const count = ones.reduce((acc, one) => acc + one, seed);\n * count.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link count}\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link scan}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator The accumulator function\n * called on each source value.\n * @param {R} [seed] The initial accumulation value.\n * @return {Observable<R>} An Observable that emits a single value that is the\n * result of accumulating the values emitted by the source Observable.\n * @method reduce\n * @owner Observable\n */\nexport function reduce<T, R>(accumulator: (acc: R, value: T, index?: number) => R, seed?: R): OperatorFunction<T, R> {\n  // providing a seed of `undefined` *should* be valid and trigger\n  // hasSeed! so don't use `seed !== undefined` checks!\n  // For this reason, we have to check it here at the original call site\n  // otherwise inside Operator/Subscriber we won't know if `undefined`\n  // means they didn't provide anything or if they literally provided `undefined`\n  if (arguments.length >= 2) {\n    return function reduceOperatorFunctionWithSeed(source: Observable<T>): Observable<R> {\n      return pipe(scan(accumulator, seed), takeLast(1), defaultIfEmpty(seed))(source);\n    };\n  }\n  return function reduceOperatorFunction(source: Observable<T>): Observable<R> {\n    return pipe(\n      scan((acc: R, value: T, index: number): R => accumulator(acc, value, index + 1)),\n      takeLast(1),\n    )(source);\n  };\n}\n","import { reduce } from './reduce';\nimport { MonoTypeOperatorFunction } from '../types';\n\n/**\n * The Max operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the largest value.\n *\n * ![](max.png)\n *\n * ## Examples\n * Get the maximal value of a series of numbers\n * ```javascript\n * of(5, 4, 7, 2, 8).pipe(\n *   max(),\n * )\n * .subscribe(x => console.log(x)); // -> 8\n * ```\n *\n * Use a comparer function to get the maximal item\n * ```typescript\n * interface Person {\n *   age: number,\n *   name: string\n * }\n * of<Person>(\n *   {age: 7, name: 'Foo'},\n *   {age: 5, name: 'Bar'},\n *   {age: 9, name: 'Beer'},\n * ).pipe(\n *   max<Person>((a: Person, b: Person) => a.age < b.age ? -1 : 1),\n * )\n * .subscribe((x: Person) => console.log(x.name)); // -> 'Beer'\n * ```\n *\n * @see {@link min}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return {Observable} An Observable that emits item with the largest value.\n * @method max\n * @owner Observable\n */\nexport function max<T>(comparer?: (x: T, y: T) => number): MonoTypeOperatorFunction<T> {\n  const max: (x: T, y: T) => T = (typeof comparer === 'function')\n    ? (x, y) => comparer(x, y) > 0 ? x : y\n    : (x, y) => x > y ? x : y;\n\n  return reduce(max);\n}\n","import { merge as mergeStatic } from '../observable/merge';\nimport { Observable } from '../Observable';\nimport { ObservableInput, OperatorFunction, MonoTypeOperatorFunction, SchedulerLike } from '../types';\n\n/* tslint:disable:max-line-length */\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T>(scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T>(concurrent?: number, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2>(v2: ObservableInput<T2>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2>(v2: ObservableInput<T2>, concurrent?: number, scheduler?: SchedulerLike): OperatorFunction<T, T | T2>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, concurrent?: number, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, concurrent?: number, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4 | T5>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, concurrent?: number, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4 | T5>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4 | T5 | T6>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, concurrent?: number, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4 | T5 | T6>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T>(...observables: Array<ObservableInput<T> | SchedulerLike | number>): MonoTypeOperatorFunction<T>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, R>(...observables: Array<ObservableInput<any> | SchedulerLike | number>): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * @deprecated Deprecated in favor of static {@link merge}.\n */\nexport function merge<T, R>(...observables: Array<ObservableInput<any> | SchedulerLike | number>): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift.call(mergeStatic(source, ...observables));\n}\n","import { Observable } from '../Observable';\nimport { OperatorFunction } from '../../internal/types';\nimport { mergeMap } from './mergeMap';\nimport { ObservableInput } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function mergeMapTo<T>(innerObservable: ObservableInput<T>, concurrent?: number): OperatorFunction<any, T>;\n/** @deprecated */\nexport function mergeMapTo<T, I, R>(innerObservable: ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R, concurrent?: number): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in the output Observable.\n *\n * <span class=\"informal\">It's like {@link mergeMap}, but maps each value always\n * to the same inner Observable.</span>\n *\n * ![](mergeMapTo.png)\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then merges those resulting Observables into one\n * single Observable, which is the output Observable.\n *\n * ## Example\n * For each click event, start an interval Observable ticking every 1 second\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(mergeMapTo(interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMapTo}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable`\n * @method mergeMapTo\n * @owner Observable\n */\nexport function mergeMapTo<T, I, R>(\n  innerObservable: ObservableInput<I>,\n  resultSelector?: ((outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) | number,\n  concurrent: number = Number.POSITIVE_INFINITY\n): OperatorFunction<T, I|R> {\n  if (typeof resultSelector === 'function') {\n    return mergeMap(() => innerObservable, resultSelector, concurrent);\n  }\n  if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n  return mergeMap(() => innerObservable, concurrent);\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { ObservableInput, OperatorFunction } from '../types';\n\n/**\n * Applies an accumulator function over the source Observable where the\n * accumulator function itself returns an Observable, then each intermediate\n * Observable returned is merged into the output Observable.\n *\n * <span class=\"informal\">It's like {@link scan}, but the Observables returned\n * by the accumulator are merged into the outer Observable.</span>\n *\n * ## Example\n * Count the number of click events\n * ```javascript\n * const click$ = fromEvent(document, 'click');\n * const one$ = click$.pipe(mapTo(1));\n * const seed = 0;\n * const count$ = one$.pipe(\n *   mergeScan((acc, one) => of(acc + one), seed),\n * );\n * count$.subscribe(x => console.log(x));\n *\n * // Results:\n * 1\n * 2\n * 3\n * 4\n * // ...and so on for each click\n * ```\n *\n * @param {function(acc: R, value: T): Observable<R>} accumulator\n * The accumulator function called on each source value.\n * @param seed The initial accumulation value.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of\n * input Observables being subscribed to concurrently.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method mergeScan\n * @owner Observable\n */\nexport function mergeScan<T, R>(accumulator: (acc: R, value: T) => ObservableInput<R>,\n                                seed: R,\n                                concurrent: number = Number.POSITIVE_INFINITY): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift(new MergeScanOperator(accumulator, seed, concurrent));\n}\n\nexport class MergeScanOperator<T, R> implements Operator<T, R> {\n  constructor(private accumulator: (acc: R, value: T) => ObservableInput<R>,\n              private seed: R,\n              private concurrent: number) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new MergeScanSubscriber(\n      subscriber, this.accumulator, this.seed, this.concurrent\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeScanSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private hasValue: boolean = false;\n  private hasCompleted: boolean = false;\n  private buffer: Observable<any>[] = [];\n  private active: number = 0;\n  protected index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private accumulator: (acc: R, value: T) => ObservableInput<R>,\n              private acc: R,\n              private concurrent: number) {\n    super(destination);\n  }\n\n  protected _next(value: any): void {\n    if (this.active < this.concurrent) {\n      const index = this.index++;\n      const ish = tryCatch(this.accumulator)(this.acc, value);\n      const destination = this.destination;\n      if (ish === errorObject) {\n        destination.error(errorObject.e);\n      } else {\n        this.active++;\n        this._innerSub(ish, value, index);\n      }\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  private _innerSub(ish: any, value: T, index: number): void {\n    const innerSubscriber = new InnerSubscriber(this, undefined, undefined);\n    const destination = this.destination as Subscription;\n    destination.add(innerSubscriber);\n    subscribeToResult<T, R>(this, ish, value, index, innerSubscriber);\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      if (this.hasValue === false) {\n        this.destination.next(this.acc);\n      }\n      this.destination.complete();\n    }\n    this.unsubscribe();\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    const { destination } = this;\n    this.acc = innerValue;\n    this.hasValue = true;\n    destination.next(innerValue);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    const destination = this.destination as Subscription;\n    destination.remove(innerSub);\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      if (this.hasValue === false) {\n        this.destination.next(this.acc);\n      }\n      this.destination.complete();\n    }\n  }\n}\n","import { reduce } from './reduce';\nimport { MonoTypeOperatorFunction } from '../types';\n\n/**\n * The Min operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the smallest value.\n *\n * ![](min.png)\n *\n * ## Examples\n * Get the minimal value of a series of numbers\n * ```javascript\n * of(5, 4, 7, 2, 8).pipe(\n *   min(),\n * )\n * .subscribe(x => console.log(x)); // -> 2\n * ```\n *\n * Use a comparer function to get the minimal item\n * ```typescript\n * interface Person {\n *   age: number,\n *   name: string\n * }\n * of<Person>(\n *   {age: 7, name: 'Foo'},\n *   {age: 5, name: 'Bar'},\n *   {age: 9, name: 'Beer'},\n * ).pipe(\n *   min<Person>( (a: Person, b: Person) => a.age < b.age ? -1 : 1),\n * )\n * .subscribe((x: Person) => console.log(x.name)); // -> 'Bar'\n * ```\n * @see {@link max}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return {Observable<R>} An Observable that emits item with the smallest value.\n * @method min\n * @owner Observable\n */\nexport function min<T>(comparer?: (x: T, y: T) => number): MonoTypeOperatorFunction<T> {\n  const min: (x: T, y: T) => T = (typeof comparer === 'function')\n    ? (x, y) => comparer(x, y) < 0 ? x : y\n    : (x, y) => x < y ? x : y;\n  return reduce(min);\n}\n","import { Subject } from '../Subject';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { ConnectableObservable, connectableObservableDescriptor } from '../observable/ConnectableObservable';\nimport { FactoryOrValue, MonoTypeOperatorFunction, OperatorFunction, UnaryFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function multicast<T>(subjectOrSubjectFactory: FactoryOrValue<Subject<T>>): UnaryFunction<Observable<T>, ConnectableObservable<T>>;\nexport function multicast<T>(SubjectFactory: (this: Observable<T>) => Subject<T>): UnaryFunction<Observable<T>, ConnectableObservable<T>>;\nexport function multicast<T>(SubjectFactory: (this: Observable<T>) => Subject<T>, selector?: MonoTypeOperatorFunction<T>): MonoTypeOperatorFunction<T>;\nexport function multicast<T, R>(SubjectFactory: (this: Observable<T>) => Subject<T>): UnaryFunction<Observable<T>, ConnectableObservable<R>>;\nexport function multicast<T, R>(SubjectFactory: (this: Observable<T>) => Subject<T>, selector?: OperatorFunction<T, R>): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits the results of invoking a specified selector on items\n * emitted by a ConnectableObservable that shares a single subscription to the underlying stream.\n *\n * ![](multicast.png)\n *\n * @param {Function|Subject} subjectOrSubjectFactory - Factory function to create an intermediate subject through\n * which the source sequence's elements will be multicast to the selector function\n * or Subject to push source elements into.\n * @param {Function} [selector] - Optional selector function that can use the multicasted source stream\n * as many times as needed, without causing multiple subscriptions to the source stream.\n * Subscribers to the given source will receive all notifications of the source from the\n * time of the subscription forward.\n * @return {Observable} An Observable that emits the results of invoking the selector\n * on the items emitted by a `ConnectableObservable` that shares a single subscription to\n * the underlying stream.\n * @method multicast\n * @owner Observable\n */\nexport function multicast<T, R>(subjectOrSubjectFactory: Subject<T> | (() => Subject<T>),\n                                selector?: (source: Observable<T>) => Observable<R>): OperatorFunction<T, R> {\n  return function multicastOperatorFunction(source: Observable<T>): Observable<R> {\n    let subjectFactory: () => Subject<T>;\n    if (typeof subjectOrSubjectFactory === 'function') {\n      subjectFactory = <() => Subject<T>>subjectOrSubjectFactory;\n    } else {\n      subjectFactory = function subjectFactory() {\n        return <Subject<T>>subjectOrSubjectFactory;\n      };\n    }\n\n    if (typeof selector === 'function') {\n      return source.lift(new MulticastOperator(subjectFactory, selector));\n    }\n\n    const connectable: any = Object.create(source, connectableObservableDescriptor);\n    connectable.source = source;\n    connectable.subjectFactory = subjectFactory;\n\n    return <ConnectableObservable<R>> connectable;\n  };\n}\n\nexport class MulticastOperator<T, R> implements Operator<T, R> {\n  constructor(private subjectFactory: () => Subject<T>,\n              private selector: (source: Observable<T>) => Observable<R>) {\n  }\n  call(subscriber: Subscriber<R>, source: any): any {\n    const { selector } = this;\n    const subject = this.subjectFactory();\n    const subscription = selector(subject).subscribe(subscriber);\n    subscription.add(source.subscribe(subject));\n    return subscription;\n  }\n}\n","import { Observable } from '../Observable';\nimport { from } from '../observable/from';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { isArray } from '../util/isArray';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { ObservableInput, OperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function onErrorResumeNext<T, R>(v: ObservableInput<R>): OperatorFunction<T, R>;\nexport function onErrorResumeNext<T, T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): OperatorFunction<T, R>;\nexport function onErrorResumeNext<T, T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): OperatorFunction<T, R>;\nexport function onErrorResumeNext<T, T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): OperatorFunction<T, R>;\nexport function onErrorResumeNext<T, T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): OperatorFunction<T, R> ;\nexport function onErrorResumeNext<T, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, R>;\nexport function onErrorResumeNext<T, R>(array: ObservableInput<any>[]): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables no matter what, even if it means swallowing errors.</span>\n *\n * ![](onErrorResumeNext.png)\n *\n * `onErrorResumeNext` is an operator that accepts a series of Observables, provided either directly as\n * arguments or as an array. If no single Observable is provided, returned Observable will simply behave the same\n * as the source.\n *\n * `onErrorResumeNext` returns an Observable that starts by subscribing and re-emitting values from the source Observable.\n * When its stream of values ends - no matter if Observable completed or emitted an error - `onErrorResumeNext`\n * will subscribe to the first Observable that was passed as an argument to the method. It will start re-emitting\n * its values as well and - again - when that stream ends, `onErrorResumeNext` will proceed to subscribing yet another\n * Observable in provided series, no matter if previous Observable completed or ended with an error. This will\n * be happening until there is no more Observables left in the series, at which point returned Observable will\n * complete - even if the last subscribed stream ended with an error.\n *\n * `onErrorResumeNext` can be therefore thought of as version of {@link concat} operator, which is more permissive\n * when it comes to the errors emitted by its input Observables. While `concat` subscribes to the next Observable\n * in series only if previous one successfully completed, `onErrorResumeNext` subscribes even if it ended with\n * an error.\n *\n * Note that you do not get any access to errors emitted by the Observables. In particular do not\n * expect these errors to appear in error callback passed to {@link Observable#subscribe}. If you want to take\n * specific actions based on what error was emitted by an Observable, you should try out {@link catchError} instead.\n *\n *\n * ## Example\n * Subscribe to the next Observable after map fails\n * ```javascript\n * of(1, 2, 3, 0).pipe(\n *   map(x => {\n *       if (x === 0) { throw Error(); }\n         return 10 / x;\n *   }),\n *   onErrorResumeNext(of(1, 2, 3)),\n * )\n * .subscribe(\n *   val => console.log(val),\n *   err => console.log(err),          // Will never be called.\n *   () => console.log('that\\'s it!')\n * );\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // \"that's it!\"\n * ```\n *\n * @see {@link concat}\n * @see {@link catchError}\n *\n * @param {...ObservableInput} observables Observables passed either directly or as an array.\n * @return {Observable} An Observable that emits values from source Observable, but - if it errors - subscribes\n * to the next passed Observable and so on, until it completes or runs out of Observables.\n * @method onErrorResumeNext\n * @owner Observable\n */\n\nexport function onErrorResumeNext<T, R>(...nextSources: Array<ObservableInput<any> |\n                                                       Array<ObservableInput<any>> |\n                                                       ((...values: Array<any>) => R)>): OperatorFunction<T, R> {\n  if (nextSources.length === 1 && isArray(nextSources[0])) {\n    nextSources = <Array<Observable<any>>>nextSources[0];\n  }\n\n  return (source: Observable<T>) => source.lift(new OnErrorResumeNextOperator<T, R>(nextSources));\n}\n\n/* tslint:disable:max-line-length */\nexport function onErrorResumeNextStatic<R>(v: ObservableInput<R>): Observable<R>;\nexport function onErrorResumeNextStatic<T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<R>;\nexport function onErrorResumeNextStatic<T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<R>;\nexport function onErrorResumeNextStatic<T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<R>;\nexport function onErrorResumeNextStatic<T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<R>;\n\nexport function onErrorResumeNextStatic<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\nexport function onErrorResumeNextStatic<R>(array: ObservableInput<any>[]): Observable<R>;\n/* tslint:enable:max-line-length */\n\nexport function onErrorResumeNextStatic<T, R>(...nextSources: Array<ObservableInput<any> |\n                                                              Array<ObservableInput<any>> |\n                                                              ((...values: Array<any>) => R)>): Observable<R> {\n  let source: ObservableInput<any> = null;\n\n  if (nextSources.length === 1 && isArray(nextSources[0])) {\n    nextSources = <Array<ObservableInput<any>>>nextSources[0];\n  }\n  source = nextSources.shift();\n\n  return from(source, null).lift(new OnErrorResumeNextOperator<T, R>(nextSources));\n}\n\nclass OnErrorResumeNextOperator<T, R> implements Operator<T, R> {\n  constructor(private nextSources: Array<ObservableInput<any>>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new OnErrorResumeNextSubscriber(subscriber, this.nextSources));\n  }\n}\n\nclass OnErrorResumeNextSubscriber<T, R> extends OuterSubscriber<T, R> {\n  constructor(protected destination: Subscriber<T>,\n              private nextSources: Array<ObservableInput<any>>) {\n    super(destination);\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, any>): void {\n    this.subscribeToNextSource();\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, any>): void {\n    this.subscribeToNextSource();\n  }\n\n  protected _error(err: any): void {\n    this.subscribeToNextSource();\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.subscribeToNextSource();\n    this.unsubscribe();\n  }\n\n  private subscribeToNextSource(): void {\n    const next = this.nextSources.shift();\n    if (next) {\n      const innerSubscriber = new InnerSubscriber(this, undefined, undefined);\n      const destination = this.destination as Subscription;\n      destination.add(innerSubscriber);\n      subscribeToResult(this, next, undefined, undefined, innerSubscriber);\n    } else {\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../types';\n\n/**\n * Groups pairs of consecutive emissions together and emits them as an array of\n * two values.\n *\n * <span class=\"informal\">Puts the current value and previous value together as\n * an array, and emits that.</span>\n *\n * ![](pairwise.png)\n *\n * The Nth emission from the source Observable will cause the output Observable\n * to emit an array [(N-1)th, Nth] of the previous and the current value, as a\n * pair. For this reason, `pairwise` emits on the second and subsequent\n * emissions from the source Observable, but not on the first emission, because\n * there is no previous value in that case.\n *\n * ## Example\n * On every click (starting from the second), emit the relative distance to the previous click\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const pairs = clicks.pipe(pairwise());\n * const distance = pairs.pipe(\n *   map(pair => {\n *     const x0 = pair[0].clientX;\n *     const y0 = pair[0].clientY;\n *     const x1 = pair[1].clientX;\n *     const y1 = pair[1].clientY;\n *     return Math.sqrt(Math.pow(x0 - x1, 2) + Math.pow(y0 - y1, 2));\n *   }),\n * );\n * distance.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n *\n * @return {Observable<Array<T>>} An Observable of pairs (as arrays) of\n * consecutive values from the source Observable.\n * @method pairwise\n * @owner Observable\n */\nexport function pairwise<T>(): OperatorFunction<T, [T, T]> {\n  return (source: Observable<T>) => source.lift(new PairwiseOperator());\n}\n\nclass PairwiseOperator<T> implements Operator<T, [T, T]> {\n  call(subscriber: Subscriber<[T, T]>, source: any): any {\n    return source.subscribe(new PairwiseSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass PairwiseSubscriber<T> extends Subscriber<T> {\n  private prev: T;\n  private hasPrev: boolean = false;\n\n  constructor(destination: Subscriber<[T, T]>) {\n    super(destination);\n  }\n\n  _next(value: T): void {\n    if (this.hasPrev) {\n      this.destination.next([this.prev, value]);\n    } else {\n      this.hasPrev = true;\n    }\n\n    this.prev = value;\n  }\n}\n","export function not(pred: Function, thisArg: any): Function {\n  function notPred(): any {\n    return !((<any> notPred).pred.apply((<any> notPred).thisArg, arguments));\n  }\n  (<any> notPred).pred = pred;\n  (<any> notPred).thisArg = thisArg;\n  return notPred;\n}","import { not } from '../util/not';\nimport { filter } from './filter';\nimport { Observable } from '../Observable';\nimport { UnaryFunction } from '../types';\n\n/**\n * Splits the source Observable into two, one with values that satisfy a\n * predicate, and another with values that don't satisfy the predicate.\n *\n * <span class=\"informal\">It's like {@link filter}, but returns two Observables:\n * one like the output of {@link filter}, and the other with values that did not\n * pass the condition.</span>\n *\n * ![](partition.png)\n *\n * `partition` outputs an array with two Observables that partition the values\n * from the source Observable through the given `predicate` function. The first\n * Observable in that array emits source values for which the predicate argument\n * returns true. The second Observable emits source values for which the\n * predicate returns false. The first behaves like {@link filter} and the second\n * behaves like {@link filter} with the predicate negated.\n *\n * ## Example\n * Partition click events into those on DIV elements and those elsewhere\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const parts = clicks.pipe(partition(ev => ev.target.tagName === 'DIV'));\n * const clicksOnDivs = parts[0];\n * const clicksElsewhere = parts[1];\n * clicksOnDivs.subscribe(x => console.log('DIV clicked: ', x));\n * clicksElsewhere.subscribe(x => console.log('Other clicked: ', x));\n * ```\n *\n * @see {@link filter}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted on the first Observable in the returned array, if\n * `false` the value is emitted on the second Observable in the array. The\n * `index` parameter is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {[Observable<T>, Observable<T>]} An array with two Observables: one\n * with values that passed the predicate, and another with values that did not\n * pass the predicate.\n * @method partition\n * @owner Observable\n */\nexport function partition<T>(predicate: (value: T, index: number) => boolean,\n                             thisArg?: any): UnaryFunction<Observable<T>, [Observable<T>, Observable<T>]> {\n  return (source: Observable<T>) => [\n    filter(predicate, thisArg)(source),\n    filter(not(predicate, thisArg) as any)(source)\n  ] as [Observable<T>, Observable<T>];\n}\n","import { Observable } from '../Observable';\nimport { map } from './map';\nimport { OperatorFunction } from '../types';\n\n/**\n * Maps each source value (an object) to its specified nested property.\n *\n * <span class=\"informal\">Like {@link map}, but meant only for picking one of\n * the nested properties of every emitted object.</span>\n *\n * ![](pluck.png)\n *\n * Given a list of strings describing a path to an object property, retrieves\n * the value of a specified nested property from all values in the source\n * Observable. If a property can't be resolved, it will return `undefined` for\n * that value.\n *\n * ## Example\n * Map every click to the tagName of the clicked target element\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const tagNames = clicks.pipe(pluck('target', 'tagName'));\n * tagNames.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link map}\n *\n * @param {...string} properties The nested properties to pluck from each source\n * value (an object).\n * @return {Observable} A new Observable of property values from the source values.\n * @method pluck\n * @owner Observable\n */\nexport function pluck<T, R>(...properties: string[]): OperatorFunction<T, R> {\n  const length = properties.length;\n  if (length === 0) {\n    throw new Error('list of properties cannot be empty.');\n  }\n  return (source: Observable<T>) => map(plucker(properties, length))(source as any);\n}\n\nfunction plucker(props: string[], length: number): (x: string) => any {\n  const mapper = (x: string) => {\n    let currentProp = x;\n    for (let i = 0; i < length; i++) {\n      const p = currentProp[props[i]];\n      if (typeof p !== 'undefined') {\n        currentProp = p;\n      } else {\n        return undefined;\n      }\n    }\n    return currentProp;\n  };\n\n  return mapper;\n}\n","import { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { multicast } from './multicast';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { MonoTypeOperatorFunction, OperatorFunction, UnaryFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function publish<T>(): UnaryFunction<Observable<T>, ConnectableObservable<T>>;\nexport function publish<T, R>(selector: OperatorFunction<T, R>): OperatorFunction<T, R>;\nexport function publish<T>(selector: MonoTypeOperatorFunction<T>): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns a ConnectableObservable, which is a variety of Observable that waits until its connect method is called\n * before it begins emitting items to those Observers that have subscribed to it.\n *\n * ![](publish.png)\n *\n * @param {Function} [selector] - Optional selector function which can use the multicasted source sequence as many times\n * as needed, without causing multiple subscriptions to the source sequence.\n * Subscribers to the given source will receive all notifications of the source from the time of the subscription on.\n * @return A ConnectableObservable that upon connection causes the source Observable to emit items to its Observers.\n * @method publish\n * @owner Observable\n */\nexport function publish<T, R>(selector?: OperatorFunction<T, R>): MonoTypeOperatorFunction<T> | OperatorFunction<T, R> {\n  return selector ?\n    multicast(() => new Subject<T>(), selector) :\n    multicast(new Subject<T>());\n}\n","import { Observable } from '../Observable';\nimport { BehaviorSubject } from '../BehaviorSubject';\nimport { multicast } from './multicast';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { UnaryFunction } from '../types';\n\n/**\n * @param value\n * @return {ConnectableObservable<T>}\n * @method publishBehavior\n * @owner Observable\n */\nexport function publishBehavior<T>(value: T):  UnaryFunction<Observable<T>, ConnectableObservable<T>> {\n  return (source: Observable<T>) => multicast(new BehaviorSubject<T>(value))(source) as ConnectableObservable<T>;\n}\n","import { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { multicast } from './multicast';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { UnaryFunction } from '../types';\n\n/**\n * Returns a connectable observable sequence that shares a single subscription to the\n * underlying sequence containing only the last notification.\n *\n * ![](publishLast.png)\n *\n * Similar to {@link publish}, but it waits until the source observable completes and stores\n * the last emitted value.\n * Similarly to {@link publishReplay} and {@link publishBehavior}, this keeps storing the last\n * value even if it has no more subscribers. If subsequent subscriptions happen, they will\n * immediately get that last stored value and complete.\n *\n * ## Example\n *\n * ```js\n * const connectable =\n *   interval(1000)\n *     .pipe(\n *       tap(x => console.log(\"side effect\", x)),\n *       take(3),\n *       publishLast());\n *\n * connectable.subscribe(\n *   x => console.log(  \"Sub. A\", x),\n *   err => console.log(\"Sub. A Error\", err),\n *   () => console.log( \"Sub. A Complete\"));\n *\n * connectable.subscribe(\n *   x => console.log(  \"Sub. B\", x),\n *   err => console.log(\"Sub. B Error\", err),\n *   () => console.log( \"Sub. B Complete\"));\n *\n * connectable.connect();\n *\n * // Results:\n * //    \"side effect 0\"\n * //    \"side effect 1\"\n * //    \"side effect 2\"\n * //    \"Sub. A 2\"\n * //    \"Sub. B 2\"\n * //    \"Sub. A Complete\"\n * //    \"Sub. B Complete\"\n * ```\n *\n * @see {@link ConnectableObservable}\n * @see {@link publish}\n * @see {@link publishReplay}\n * @see {@link publishBehavior}\n *\n * @return {ConnectableObservable} An observable sequence that contains the elements of a\n * sequence produced by multicasting the source sequence.\n * @method publishLast\n * @owner Observable\n */\n\nexport function publishLast<T>(): UnaryFunction<Observable<T>, ConnectableObservable<T>> {\n  return (source: Observable<T>) => multicast(new AsyncSubject<T>())(source);\n}\n","import { Observable } from '../Observable';\nimport { ReplaySubject } from '../ReplaySubject';\nimport { multicast } from './multicast';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { UnaryFunction, MonoTypeOperatorFunction, OperatorFunction, SchedulerLike } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function publishReplay<T>(bufferSize?: number, windowTime?: number, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\nexport function publishReplay<T, R>(bufferSize?: number, windowTime?: number, selector?: OperatorFunction<T, R>, scheduler?: SchedulerLike): OperatorFunction<T, R>;\nexport function publishReplay<T>(bufferSize?: number, windowTime?: number, selector?: MonoTypeOperatorFunction<T>, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\nexport function publishReplay<T, R>(bufferSize?: number,\n                                    windowTime?: number,\n                                    selectorOrScheduler?: SchedulerLike | OperatorFunction<T, R>,\n                                    scheduler?: SchedulerLike): UnaryFunction<Observable<T>, ConnectableObservable<R>> {\n\n  if (selectorOrScheduler && typeof selectorOrScheduler !== 'function') {\n    scheduler = selectorOrScheduler;\n  }\n\n  const selector = typeof selectorOrScheduler === 'function' ? selectorOrScheduler : undefined;\n  const subject = new ReplaySubject<T>(bufferSize, windowTime, scheduler);\n\n  return (source: Observable<T>) => multicast(() => subject, selector)(source) as ConnectableObservable<R>;\n}\n","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { MonoTypeOperatorFunction, OperatorFunction } from '../types';\nimport { race as raceStatic } from '../observable/race';\n\n/* tslint:disable:max-line-length */\n/** @deprecated Deprecated in favor of static race. */\nexport function race<T>(observables: Array<Observable<T>>): MonoTypeOperatorFunction<T>;\n/** @deprecated Deprecated in favor of static race. */\nexport function race<T, R>(observables: Array<Observable<T>>): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static race. */\nexport function race<T>(...observables: Array<Observable<T> | Array<Observable<T>>>): MonoTypeOperatorFunction<T>;\n/** @deprecated Deprecated in favor of static race. */\nexport function race<T, R>(...observables: Array<Observable<any> | Array<Observable<any>>>): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that mirrors the first source Observable to emit an item\n * from the combination of this Observable and supplied Observables.\n * @param {...Observables} ...observables Sources used to race for which Observable emits first.\n * @return {Observable} An Observable that mirrors the output of the first Observable to emit an item.\n * @method race\n * @owner Observable\n * @deprecated Deprecated in favor of static {@link race}.\n */\nexport function race<T>(...observables: Array<Observable<T> | Array<Observable<T>>>): MonoTypeOperatorFunction<T> {\n  return function raceOperatorFunction(source: Observable<T>) {\n    // if the only argument is an array, it was most likely called with\n    // `pair([obs1, obs2, ...])`\n    if (observables.length === 1 && isArray(observables[0])) {\n      observables = <Array<Observable<T>>>observables[0];\n    }\n\n    return source.lift.call(raceStatic<T>(source, ...observables));\n  };\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { empty } from '../observable/empty';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Returns an Observable that repeats the stream of items emitted by the source Observable at most count times.\n *\n * ![](repeat.png)\n *\n * @param {number} [count] The number of times the source Observable items are repeated, a count of 0 will yield\n * an empty Observable.\n * @return {Observable} An Observable that repeats the stream of items emitted by the source Observable at most\n * count times.\n * @method repeat\n * @owner Observable\n */\nexport function repeat<T>(count: number = -1): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => {\n    if (count === 0) {\n      return empty();\n    } else if (count < 0) {\n      return source.lift(new RepeatOperator(-1, source));\n    } else {\n      return source.lift(new RepeatOperator(count - 1, source));\n    }\n  };\n}\n\nclass RepeatOperator<T> implements Operator<T, T> {\n  constructor(private count: number,\n              private source: Observable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RepeatSubscriber(subscriber, this.count, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RepeatSubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<any>,\n              private count: number,\n              private source: Observable<T>) {\n    super(destination);\n  }\n  complete() {\n    if (!this.isStopped) {\n      const { source, count } = this;\n      if (count === 0) {\n        return super.complete();\n      } else if (count > -1) {\n        this.count = count - 1;\n      }\n      source.subscribe(this._unsubscribeAndRecycle());\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of a `complete`. If the source\n * Observable calls `complete`, this method will emit to the Observable returned from `notifier`. If that Observable\n * calls `complete` or `error`, then this method will call `complete` or `error` on the child subscription. Otherwise\n * this method will resubscribe to the source Observable.\n *\n * ![](repeatWhen.png)\n *\n * @param {function(notifications: Observable): Observable} notifier - Receives an Observable of notifications with\n * which a user can `complete` or `error`, aborting the repetition.\n * @return {Observable} The source Observable modified with repeat logic.\n * @method repeatWhen\n * @owner Observable\n */\nexport function repeatWhen<T>(notifier: (notifications: Observable<any>) => Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new RepeatWhenOperator(notifier));\n}\n\nclass RepeatWhenOperator<T> implements Operator<T, T> {\n  constructor(protected notifier: (notifications: Observable<any>) => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RepeatWhenSubscriber(subscriber, this.notifier, source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RepeatWhenSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private notifications: Subject<any>;\n  private retries: Observable<any>;\n  private retriesSubscription: Subscription;\n  private sourceIsBeingSubscribedTo: boolean = true;\n\n  constructor(destination: Subscriber<R>,\n              private notifier: (notifications: Observable<any>) => Observable<any>,\n              private source: Observable<T>) {\n    super(destination);\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.sourceIsBeingSubscribedTo = true;\n    this.source.subscribe(this);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, R>): void {\n    if (this.sourceIsBeingSubscribedTo === false) {\n      return super.complete();\n    }\n  }\n\n  complete() {\n    this.sourceIsBeingSubscribedTo = false;\n\n    if (!this.isStopped) {\n      if (!this.retries) {\n        this.subscribeToRetries();\n      }\n      if (!this.retriesSubscription || this.retriesSubscription.closed) {\n        return super.complete();\n      }\n\n      this._unsubscribeAndRecycle();\n      this.notifications.next();\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    const { notifications, retriesSubscription } = this;\n    if (notifications) {\n      notifications.unsubscribe();\n      this.notifications = null;\n    }\n    if (retriesSubscription) {\n      retriesSubscription.unsubscribe();\n      this.retriesSubscription = null;\n    }\n    this.retries = null;\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribeAndRecycle(): Subscriber<T> {\n    const { _unsubscribe } = this;\n\n    this._unsubscribe = null;\n    super._unsubscribeAndRecycle();\n    this._unsubscribe = _unsubscribe;\n\n    return this;\n  }\n\n  private subscribeToRetries() {\n    this.notifications = new Subject();\n    const retries = tryCatch(this.notifier)(this.notifications);\n    if (retries === errorObject) {\n      return super.complete();\n    }\n    this.retries = retries;\n    this.retriesSubscription = subscribeToResult(this, retries);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\n\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will resubscribe to the source Observable for a maximum of `count` resubscriptions (given\n * as a number parameter) rather than propagating the `error` call.\n *\n * ![](retry.png)\n *\n * Any and all items emitted by the source Observable will be emitted by the resulting Observable, even those emitted\n * during failed subscriptions. For example, if an Observable fails at first but emits [1, 2] then succeeds the second\n * time and emits: [1, 2, 3, 4, 5] then the complete stream of emissions and notifications\n * would be: [1, 2, 1, 2, 3, 4, 5, `complete`].\n * @param {number} count - Number of retry attempts before failing.\n * @return {Observable} The source Observable modified with the retry logic.\n * @method retry\n * @owner Observable\n */\nexport function retry<T>(count: number = -1): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new RetryOperator(count, source));\n}\n\nclass RetryOperator<T> implements Operator<T, T> {\n  constructor(private count: number,\n              private source: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RetrySubscriber(subscriber, this.count, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RetrySubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<any>,\n              private count: number,\n              private source: Observable<T>) {\n    super(destination);\n  }\n  error(err: any) {\n    if (!this.isStopped) {\n      const { source, count } = this;\n      if (count === 0) {\n        return super.error(err);\n      } else if (count > -1) {\n        this.count = count - 1;\n      }\n      source.subscribe(this._unsubscribeAndRecycle());\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will emit the Throwable that caused the error to the Observable returned from `notifier`.\n * If that Observable calls `complete` or `error` then this method will call `complete` or `error` on the child\n * subscription. Otherwise this method will resubscribe to the source Observable.\n *\n * ![](retryWhen.png)\n *\n * @param {function(errors: Observable): Observable} notifier - Receives an Observable of notifications with which a\n * user can `complete` or `error`, aborting the retry.\n * @return {Observable} The source Observable modified with retry logic.\n * @method retryWhen\n * @owner Observable\n */\nexport function retryWhen<T>(notifier: (errors: Observable<any>) => Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new RetryWhenOperator(notifier, source));\n}\n\nclass RetryWhenOperator<T> implements Operator<T, T> {\n  constructor(protected notifier: (errors: Observable<any>) => Observable<any>,\n              protected source: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RetryWhenSubscriber(subscriber, this.notifier, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RetryWhenSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private errors: Subject<any>;\n  private retries: Observable<any>;\n  private retriesSubscription: Subscription;\n\n  constructor(destination: Subscriber<R>,\n              private notifier: (errors: Observable<any>) => Observable<any>,\n              private source: Observable<T>) {\n    super(destination);\n  }\n\n  error(err: any) {\n    if (!this.isStopped) {\n\n      let errors = this.errors;\n      let retries: any = this.retries;\n      let retriesSubscription = this.retriesSubscription;\n\n      if (!retries) {\n        errors = new Subject();\n        retries = tryCatch(this.notifier)(errors);\n        if (retries === errorObject) {\n          return super.error(errorObject.e);\n        }\n        retriesSubscription = subscribeToResult(this, retries);\n      } else {\n        this.errors = null;\n        this.retriesSubscription = null;\n      }\n\n      this._unsubscribeAndRecycle();\n\n      this.errors = errors;\n      this.retries = retries;\n      this.retriesSubscription = retriesSubscription;\n\n      errors.next(err);\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    const { errors, retriesSubscription } = this;\n    if (errors) {\n      errors.unsubscribe();\n      this.errors = null;\n    }\n    if (retriesSubscription) {\n      retriesSubscription.unsubscribe();\n      this.retriesSubscription = null;\n    }\n    this.retries = null;\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    const { _unsubscribe } = this;\n\n    this._unsubscribe = null;\n    this._unsubscribeAndRecycle();\n    this._unsubscribe = _unsubscribe;\n\n    this.source.subscribe(this);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Emits the most recently emitted value from the source Observable whenever\n * another Observable, the `notifier`, emits.\n *\n * <span class=\"informal\">It's like {@link sampleTime}, but samples whenever\n * the `notifier` Observable emits something.</span>\n *\n * ![](sample.png)\n *\n * Whenever the `notifier` Observable emits a value or completes, `sample`\n * looks at the source Observable and emits whichever value it has most recently\n * emitted since the previous sampling, unless the source has not emitted\n * anything since the previous sampling. The `notifier` is subscribed to as soon\n * as the output Observable is subscribed.\n *\n * ## Example\n * On every click, sample the most recent \"seconds\" timer\n * ```javascript\n * const seconds = interval(1000);\n * const clicks = fromEvent(document, 'click');\n * const result = seconds.pipe(sample(clicks));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {Observable<any>} notifier The Observable to use for sampling the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable whenever the notifier Observable\n * emits value or completes.\n * @method sample\n * @owner Observable\n */\nexport function sample<T>(notifier: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SampleOperator(notifier));\n}\n\nclass SampleOperator<T> implements Operator<T, T> {\n  constructor(private notifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    const sampleSubscriber = new SampleSubscriber(subscriber);\n    const subscription = source.subscribe(sampleSubscriber);\n    subscription.add(subscribeToResult(sampleSubscriber, this.notifier));\n    return subscription;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SampleSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private value: T;\n  private hasValue: boolean = false;\n\n  protected _next(value: T) {\n    this.value = value;\n    this.hasValue = true;\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.emitValue();\n  }\n\n  notifyComplete(): void {\n    this.emitValue();\n  }\n\n  emitValue() {\n    if (this.hasValue) {\n      this.hasValue = false;\n      this.destination.next(this.value);\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nimport { MonoTypeOperatorFunction, SchedulerAction, SchedulerLike, TeardownLogic } from '../types';\n\n/**\n * Emits the most recently emitted value from the source Observable within\n * periodic time intervals.\n *\n * <span class=\"informal\">Samples the source Observable at periodic time\n * intervals, emitting what it samples.</span>\n *\n * ![](sampleTime.png)\n *\n * `sampleTime` periodically looks at the source Observable and emits whichever\n * value it has most recently emitted since the previous sampling, unless the\n * source has not emitted anything since the previous sampling. The sampling\n * happens periodically in time every `period` milliseconds (or the time unit\n * defined by the optional `scheduler` argument). The sampling starts as soon as\n * the output Observable is subscribed.\n *\n * ## Example\n * Every second, emit the most recent click at most once\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(sampleTime(1000));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {number} period The sampling period expressed in milliseconds or the\n * time unit determined internally by the optional `scheduler`.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the sampling.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable at the specified time interval.\n * @method sampleTime\n * @owner Observable\n */\nexport function sampleTime<T>(period: number, scheduler: SchedulerLike = async): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SampleTimeOperator(period, scheduler));\n}\n\nclass SampleTimeOperator<T> implements Operator<T, T> {\n  constructor(private period: number,\n              private scheduler: SchedulerLike) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SampleTimeSubscriber(subscriber, this.period, this.scheduler));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SampleTimeSubscriber<T> extends Subscriber<T> {\n  lastValue: T;\n  hasValue: boolean = false;\n\n  constructor(destination: Subscriber<T>,\n              private period: number,\n              private scheduler: SchedulerLike) {\n    super(destination);\n    this.add(scheduler.schedule(dispatchNotification, period, { subscriber: this, period }));\n  }\n\n  protected _next(value: T) {\n    this.lastValue = value;\n    this.hasValue = true;\n  }\n\n  notifyNext() {\n    if (this.hasValue) {\n      this.hasValue = false;\n      this.destination.next(this.lastValue);\n    }\n  }\n}\n\nfunction dispatchNotification<T>(this: SchedulerAction<any>, state: any) {\n  let { subscriber, period } = state;\n  subscriber.notifyNext();\n  this.schedule(state, period);\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\n\nimport { Observer, OperatorFunction } from '../types';\n\n/**\n * Compares all values of two observables in sequence using an optional comparor function\n * and returns an observable of a single boolean value representing whether or not the two sequences\n * are equal.\n *\n * <span class=\"informal\">Checks to see of all values emitted by both observables are equal, in order.</span>\n *\n * ![](sequenceEqual.png)\n *\n * `sequenceEqual` subscribes to two observables and buffers incoming values from each observable. Whenever either\n * observable emits a value, the value is buffered and the buffers are shifted and compared from the bottom\n * up; If any value pair doesn't match, the returned observable will emit `false` and complete. If one of the\n * observables completes, the operator will wait for the other observable to complete; If the other\n * observable emits before completing, the returned observable will emit `false` and complete. If one observable never\n * completes or emits after the other complets, the returned observable will never complete.\n *\n * ## Example\n * figure out if the Konami code matches\n * ```javascript\n * const codes = from([\n *   'ArrowUp',\n *   'ArrowUp',\n *   'ArrowDown',\n *   'ArrowDown',\n *   'ArrowLeft',\n *   'ArrowRight',\n *   'ArrowLeft',\n *   'ArrowRight',\n *   'KeyB',\n *   'KeyA',\n *   'Enter', // no start key, clearly.\n * ]);\n *\n * const keys = fromEvent(document, 'keyup').pipe(map(e => e.code));\n * const matches = keys.pipe(\n *   bufferCount(11, 1),\n *   mergeMap(\n *     last11 => from(last11).pipe(sequenceEqual(codes)),\n *   ),\n * );\n * matches.subscribe(matched => console.log('Successful cheat at Contra? ', matched));\n * ```\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n * @see {@link withLatestFrom}\n *\n * @param {Observable} compareTo The observable sequence to compare the source sequence to.\n * @param {function} [comparor] An optional function to compare each value pair\n * @return {Observable} An Observable of a single boolean value representing whether or not\n * the values emitted by both observables were equal in sequence.\n * @method sequenceEqual\n * @owner Observable\n */\nexport function sequenceEqual<T>(compareTo: Observable<T>,\n                                 comparor?: (a: T, b: T) => boolean): OperatorFunction<T, boolean> {\n  return (source: Observable<T>) => source.lift(new SequenceEqualOperator(compareTo, comparor));\n}\n\nexport class SequenceEqualOperator<T> implements Operator<T, boolean> {\n  constructor(private compareTo: Observable<T>,\n              private comparor: (a: T, b: T) => boolean) {\n  }\n\n  call(subscriber: Subscriber<boolean>, source: any): any {\n    return source.subscribe(new SequenceEqualSubscriber(subscriber, this.compareTo, this.comparor));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SequenceEqualSubscriber<T, R> extends Subscriber<T> {\n  private _a: T[] = [];\n  private _b: T[] = [];\n  private _oneComplete = false;\n\n  constructor(destination: Observer<R>,\n              private compareTo: Observable<T>,\n              private comparor: (a: T, b: T) => boolean) {\n    super(destination);\n    (this.destination as Subscription).add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination, this)));\n  }\n\n  protected _next(value: T): void {\n    if (this._oneComplete && this._b.length === 0) {\n      this.emit(false);\n    } else {\n      this._a.push(value);\n      this.checkValues();\n    }\n  }\n\n  public _complete(): void {\n    if (this._oneComplete) {\n      this.emit(this._a.length === 0 && this._b.length === 0);\n    } else {\n      this._oneComplete = true;\n    }\n    this.unsubscribe();\n  }\n\n  checkValues() {\n    const { _a, _b, comparor } = this;\n    while (_a.length > 0 && _b.length > 0) {\n      let a = _a.shift();\n      let b = _b.shift();\n      let areEqual = false;\n      if (comparor) {\n        areEqual = tryCatch(comparor)(a, b);\n        if (areEqual === errorObject) {\n          this.destination.error(errorObject.e);\n        }\n      } else {\n        areEqual = a === b;\n      }\n      if (!areEqual) {\n        this.emit(false);\n      }\n    }\n  }\n\n  emit(value: boolean) {\n    const { destination } = this;\n    destination.next(value);\n    destination.complete();\n  }\n\n  nextB(value: T) {\n    if (this._oneComplete && this._a.length === 0) {\n      this.emit(false);\n    } else {\n      this._b.push(value);\n      this.checkValues();\n    }\n  }\n\n  completeB() {\n    if (this._oneComplete) {\n      this.emit(this._a.length === 0 && this._b.length === 0);\n    } else {\n      this._oneComplete = true;\n    }\n  }\n}\n\nclass SequenceEqualCompareToSubscriber<T, R> extends Subscriber<T> {\n  constructor(destination: Observer<R>, private parent: SequenceEqualSubscriber<T, R>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this.parent.nextB(value);\n  }\n\n  protected _error(err: any): void {\n    this.parent.error(err);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.parent.completeB();\n    this.unsubscribe();\n  }\n}\n","import { Observable } from '../Observable';\nimport { multicast } from './multicast';\nimport { refCount } from './refCount';\nimport { Subject } from '../Subject';\n\nimport { MonoTypeOperatorFunction } from '../types';\n\nfunction shareSubjectFactory() {\n  return new Subject();\n}\n\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n * This is an alias for `multicast(() => new Subject()), refCount()`.\n *\n * ![](share.png)\n *\n * @return {Observable<T>} An Observable that upon connection causes the source Observable to emit items to its Observers.\n * @method share\n * @owner Observable\n */\nexport function share<T>(): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => refCount()(multicast(shareSubjectFactory)(source)) as Observable<T>;\n}\n","import { Observable } from '../Observable';\nimport { ReplaySubject } from '../ReplaySubject';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * Share source and replay specified number of emissions on subscription.\n *\n * This operator is a specialization of `replay` that connects to a source observable\n * and multicasts through a `ReplaySubject` constructed with the specified arguments.\n * A successfully completed source will stay cached in the `shareReplayed observable` forever,\n * but an errored source can be retried.\n *\n * ## Why use shareReplay?\n * You generally want to use `shareReplay` when you have side-effects or taxing computations\n * that you do not wish to be executed amongst multiple subscribers.\n * It may also be valuable in situations where you know you will have late subscribers to\n * a stream that need access to previously emitted values.\n * This ability to replay values on subscription is what differentiates {@link share} and `shareReplay`.\n *\n * ![](shareReplay.png)\n *\n * ## Example\n * ```javascript\n * const obs$ = interval(1000);\n * const subscription = obs$.pipe(\n *   take(4),\n *   shareReplay(3)\n * );\n * subscription.subscribe(x => console.log('source A: ', x));\n * subscription.subscribe(y => console.log('source B: ', y));\n *\n * ```\n *\n * @see {@link publish}\n * @see {@link share}\n * @see {@link publishReplay}\n *\n * @param {Number} [bufferSize=Number.POSITIVE_INFINITY] Maximum element count of the replay buffer.\n * @param {Number} [windowTime=Number.POSITIVE_INFINITY] Maximum time length of the replay buffer in milliseconds.\n * @param {Scheduler} [scheduler] Scheduler where connected observers within the selector function\n * will be invoked on.\n * @return {Observable} An observable sequence that contains the elements of a sequence produced\n * by multicasting the source sequence within a selector function.\n * @method shareReplay\n * @owner Observable\n */\nexport function shareReplay<T>(\n  bufferSize: number = Number.POSITIVE_INFINITY,\n  windowTime: number = Number.POSITIVE_INFINITY,\n  scheduler?: SchedulerLike\n): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(shareReplayOperator(bufferSize, windowTime, scheduler));\n}\n\nfunction shareReplayOperator<T>(bufferSize?: number, windowTime?: number, scheduler?: SchedulerLike) {\n  let subject: ReplaySubject<T>;\n  let refCount = 0;\n  let subscription: Subscription;\n  let hasError = false;\n  let isComplete = false;\n\n  return function shareReplayOperation(this: Subscriber<T>, source: Observable<T>) {\n    refCount++;\n    if (!subject || hasError) {\n      hasError = false;\n      subject = new ReplaySubject<T>(bufferSize, windowTime, scheduler);\n      subscription = source.subscribe({\n        next(value) { subject.next(value); },\n        error(err) {\n          hasError = true;\n          subject.error(err);\n        },\n        complete() {\n          isComplete = true;\n          subject.complete();\n        },\n      });\n    }\n\n    const innerSub = subject.subscribe(this);\n\n    return () => {\n      refCount--;\n      innerSub.unsubscribe();\n      if (subscription && refCount === 0 && isComplete) {\n        subscription.unsubscribe();\n      }\n    };\n  };\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { EmptyError } from '../util/EmptyError';\n\nimport { Observer, MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Returns an Observable that emits the single item emitted by the source Observable that matches a specified\n * predicate, if that Observable emits one such item. If the source Observable emits more than one such item or no\n * items, notify of an IllegalArgumentException or NoSuchElementException respectively. If the source Observable\n * emits items but none match the specified predicate then `undefined` is emiited.\n *\n * ![](single.png)\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {Function} predicate - A predicate function to evaluate items emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits the single item emitted by the source Observable that matches\n * the predicate or `undefined` when no items match.\n *\n * @method single\n * @owner Observable\n */\nexport function single<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SingleOperator(predicate, source));\n}\n\nclass SingleOperator<T> implements Operator<T, T> {\n  constructor(private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SingleSubscriber(subscriber, this.predicate, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SingleSubscriber<T> extends Subscriber<T> {\n  private seenValue: boolean = false;\n  private singleValue: T;\n  private index: number = 0;\n\n  constructor(destination: Observer<T>,\n              private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n    super(destination);\n  }\n\n  private applySingleValue(value: T): void {\n    if (this.seenValue) {\n      this.destination.error('Sequence contains more than one element');\n    } else {\n      this.seenValue = true;\n      this.singleValue = value;\n    }\n  }\n\n  protected _next(value: T): void {\n    const index = this.index++;\n\n    if (this.predicate) {\n      this.tryNext(value, index);\n    } else {\n      this.applySingleValue(value);\n    }\n  }\n\n  private tryNext(value: T, index: number): void {\n    try {\n      if (this.predicate(value, index, this.source)) {\n        this.applySingleValue(value);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    const destination = this.destination;\n\n    if (this.index > 0) {\n      destination.next(this.seenValue ? this.singleValue : undefined);\n      destination.complete();\n    } else {\n      destination.error(new EmptyError);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Returns an Observable that skips the first `count` items emitted by the source Observable.\n *\n * ![](skip.png)\n *\n * @param {Number} count - The number of times, items emitted by source Observable should be skipped.\n * @return {Observable} An Observable that skips values emitted by the source Observable.\n *\n * @method skip\n * @owner Observable\n */\nexport function skip<T>(count: number): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipOperator(count));\n}\n\nclass SkipOperator<T> implements Operator<T, T> {\n  constructor(private total: number) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SkipSubscriber(subscriber, this.total));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipSubscriber<T> extends Subscriber<T> {\n  count: number = 0;\n\n  constructor(destination: Subscriber<T>, private total: number) {\n    super(destination);\n  }\n\n  protected _next(x: T) {\n    if (++this.count > this.total) {\n      this.destination.next(x);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Skip the last `count` values emitted by the source Observable.\n *\n * ![](skipLast.png)\n *\n * `skipLast` returns an Observable that accumulates a queue with a length\n * enough to store the first `count` values. As more values are received,\n * values are taken from the front of the queue and produced on the result\n * sequence. This causes values to be delayed.\n *\n * ## Example\n * Skip the last 2 values of an Observable with many values\n * ```javascript\n * const many = range(1, 5);\n * const skipLastTwo = many.pipe(skipLast(2));\n * skipLastTwo.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 1 2 3\n * ```\n *\n * @see {@link skip}\n * @see {@link skipUntil}\n * @see {@link skipWhile}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `skipLast(i)`, it throws\n * ArgumentOutOrRangeError if `i < 0`.\n *\n * @param {number} count Number of elements to skip from the end of the source Observable.\n * @returns {Observable<T>} An Observable that skips the last count values\n * emitted by the source Observable.\n * @method skipLast\n * @owner Observable\n */\nexport function skipLast<T>(count: number): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipLastOperator(count));\n}\n\nclass SkipLastOperator<T> implements Operator<T, T> {\n  constructor(private _skipCount: number) {\n    if (this._skipCount < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    if (this._skipCount === 0) {\n      // If we don't want to skip any values then just subscribe\n      // to Subscriber without any further logic.\n      return source.subscribe(new Subscriber(subscriber));\n    } else {\n      return source.subscribe(new SkipLastSubscriber(subscriber, this._skipCount));\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipLastSubscriber<T> extends Subscriber<T> {\n  private _ring: T[];\n  private _count: number = 0;\n\n  constructor(destination: Subscriber<T>, private _skipCount: number) {\n    super(destination);\n    this._ring = new Array<T>(_skipCount);\n  }\n\n  protected _next(value: T): void {\n    const skipCount = this._skipCount;\n    const count = this._count++;\n\n    if (count < skipCount) {\n      this._ring[count] = value;\n    } else {\n      const currentIndex = count % skipCount;\n      const ring = this._ring;\n      const oldValue = ring[currentIndex];\n\n      ring[currentIndex] = value;\n      this.destination.next(oldValue);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction, TeardownLogic, ObservableInput } from '../types';\nimport { Subscription } from '../Subscription';\n\n/**\n * Returns an Observable that skips items emitted by the source Observable until a second Observable emits an item.\n *\n * ![](skipUntil.png)\n *\n * @param {Observable} notifier - The second Observable that has to emit an item before the source Observable's elements begin to\n * be mirrored by the resulting Observable.\n * @return {Observable<T>} An Observable that skips items from the source Observable until the second Observable emits\n * an item, then emits the remaining items.\n * @method skipUntil\n * @owner Observable\n */\nexport function skipUntil<T>(notifier: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipUntilOperator(notifier));\n}\n\nclass SkipUntilOperator<T> implements Operator<T, T> {\n  constructor(private notifier: Observable<any>) {\n  }\n\n  call(destination: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SkipUntilSubscriber(destination, this.notifier));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipUntilSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private hasValue: boolean = false;\n  private innerSubscription: Subscription;\n\n  constructor(destination: Subscriber<R>, notifier: ObservableInput<any>) {\n    super(destination);\n    const innerSubscriber = new InnerSubscriber(this, undefined, undefined);\n    this.add(innerSubscriber);\n    this.innerSubscription = innerSubscriber;\n    subscribeToResult(this, notifier, undefined, undefined, innerSubscriber);\n  }\n\n  protected _next(value: T) {\n    if (this.hasValue) {\n      super._next(value);\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.hasValue = true;\n    if (this.innerSubscription) {\n      this.innerSubscription.unsubscribe();\n    }\n  }\n\n  notifyComplete() {\n    /* do nothing */\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Returns an Observable that skips all items emitted by the source Observable as long as a specified condition holds\n * true, but emits all further source items as soon as the condition becomes false.\n *\n * ![](skipWhile.png)\n *\n * @param {Function} predicate - A function to test each item emitted from the source Observable.\n * @return {Observable<T>} An Observable that begins emitting items emitted by the source Observable when the\n * specified predicate becomes false.\n * @method skipWhile\n * @owner Observable\n */\nexport function skipWhile<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipWhileOperator(predicate));\n}\n\nclass SkipWhileOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number) => boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SkipWhileSubscriber(subscriber, this.predicate));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipWhileSubscriber<T> extends Subscriber<T> {\n  private skipping: boolean = true;\n  private index: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number) => boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const destination = this.destination;\n    if (this.skipping) {\n      this.tryCallPredicate(value);\n    }\n\n    if (!this.skipping) {\n      destination.next(value);\n    }\n  }\n\n  private tryCallPredicate(value: T): void {\n    try {\n      const result = this.predicate(value, this.index++);\n      this.skipping = Boolean(result);\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { fromArray } from '../observable/fromArray';\nimport { scalar } from '../observable/scalar';\nimport { empty } from '../observable/empty';\nimport { concat as concatStatic } from '../observable/concat';\nimport { isScheduler } from '../util/isScheduler';\nimport { MonoTypeOperatorFunction, OperatorFunction, SchedulerLike } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function startWith<T>(scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\nexport function startWith<T, D = T>(v1: D, scheduler?: SchedulerLike): OperatorFunction<T, T | D>;\nexport function startWith<T, D = T, E = T>(v1: D, v2: E, scheduler?: SchedulerLike): OperatorFunction<T, T | D | E>;\nexport function startWith<T, D = T, E = T, F = T>(v1: D, v2: E, v3: F, scheduler?: SchedulerLike): OperatorFunction<T, T | D | E | F>;\nexport function startWith<T, D = T, E = T, F = T, G = T>(v1: D, v2:  E, v3: F, v4: G, scheduler?: SchedulerLike): OperatorFunction<T, T | D | E | F | G>;\nexport function startWith<T, D = T, E = T, F = T, G = T, H = T>(v1: D, v2: E, v3: F, v4: G, v5: H, scheduler?: SchedulerLike): OperatorFunction<T, T | D | E | F | G | H>;\nexport function startWith<T, D = T, E = T, F = T, G = T, H = T, I = T>(v1: D, v2: E, v3: F, v4: G, v5: H, v6: I, scheduler?: SchedulerLike): OperatorFunction<T, T | D | E | F | G | H | I>;\nexport function startWith<T, D = T>(...array: Array<D | SchedulerLike>): OperatorFunction<T, T | D>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits the items you specify as arguments before it begins to emit\n * items emitted by the source Observable.\n *\n * <span class=\"informal\">First emits its arguments in order, and then any\n * emissions from the source.</span>\n *\n * ![](startWith.png)\n *\n * ## Examples\n *\n * Start the chain of emissions with `\"first\"`, `\"second\"`\n *\n * ```javascript\n *   of(\"from source\")\n *    .pipe(startWith(\"first\", \"second\"))\n *    .subscribe(x => console.log(x));\n *\n * // results:\n * //   \"first\"\n * //   \"second\"\n * //   \"from source\"\n * ```\n *\n * @param {...T} values - Items you want the modified Observable to emit first.\n * @param {SchedulerLike} [scheduler] - A {@link SchedulerLike} to use for scheduling\n * the emissions of the `next` notifications.\n * @return {Observable} An Observable that emits the items in the specified Iterable and then emits the items\n * emitted by the source Observable.\n * @method startWith\n * @owner Observable\n */\nexport function startWith<T, D>(...array: Array<T | SchedulerLike>): OperatorFunction<T, T | D> {\n  return (source: Observable<T>) => {\n    let scheduler = <SchedulerLike>array[array.length - 1];\n    if (isScheduler(scheduler)) {\n      array.pop();\n    } else {\n      scheduler = null;\n    }\n\n    const len = array.length;\n    if (len === 1 && !scheduler) {\n      return concatStatic(scalar(array[0] as T), source);\n    } else if (len > 0) {\n      return concatStatic(fromArray(array as T[], scheduler), source);\n    } else {\n      return concatStatic<T>(empty(scheduler) as any, source);\n    }\n  };\n}\n","import { SchedulerLike, SchedulerAction } from '../types';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { asap } from '../scheduler/asap';\nimport { isNumeric } from '../util/isNumeric';\n\nexport interface DispatchArg<T> {\n  source: Observable<T>;\n  subscriber: Subscriber<T>;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class SubscribeOnObservable<T> extends Observable<T> {\n  /** @nocollapse */\n  static create<T>(source: Observable<T>, delay: number = 0, scheduler: SchedulerLike = asap): Observable<T> {\n    return new SubscribeOnObservable(source, delay, scheduler);\n  }\n\n  /** @nocollapse */\n  static dispatch<T>(this: SchedulerAction<T>, arg: DispatchArg<T>): Subscription {\n    const { source, subscriber } = arg;\n    return this.add(source.subscribe(subscriber));\n  }\n\n  constructor(public source: Observable<T>,\n              private delayTime: number = 0,\n              private scheduler: SchedulerLike = asap) {\n    super();\n    if (!isNumeric(delayTime) || delayTime < 0) {\n      this.delayTime = 0;\n    }\n    if (!scheduler || typeof scheduler.schedule !== 'function') {\n      this.scheduler = asap;\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>) {\n    const delay = this.delayTime;\n    const source = this.source;\n    const scheduler = this.scheduler;\n\n    return scheduler.schedule<DispatchArg<any>>(SubscribeOnObservable.dispatch, delay, {\n      source, subscriber\n    });\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { SubscribeOnObservable } from '../observable/SubscribeOnObservable';\nimport { MonoTypeOperatorFunction, SchedulerLike, TeardownLogic } from '../types';\n\n/**\n * Asynchronously subscribes Observers to this Observable on the specified {@link SchedulerLike}.\n *\n * ![](subscribeOn.png)\n *\n * @param {SchedulerLike} scheduler - The {@link SchedulerLike} to perform subscription actions on.\n * @return {Observable<T>} The source Observable modified so that its subscriptions happen on the specified {@link SchedulerLike}.\n .\n * @method subscribeOn\n * @owner Observable\n */\nexport function subscribeOn<T>(scheduler: SchedulerLike, delay: number = 0): MonoTypeOperatorFunction<T> {\n  return function subscribeOnOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new SubscribeOnOperator<T>(scheduler, delay));\n  };\n}\n\nclass SubscribeOnOperator<T> implements Operator<T, T> {\n  constructor(private scheduler: SchedulerLike,\n              private delay: number) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return new SubscribeOnObservable<T>(\n      source, this.delay, this.scheduler\n    ).subscribe(subscriber);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { ObservableInput, OperatorFunction } from '../types';\nimport { map } from './map';\nimport { from } from '../observable/from';\n\n/* tslint:disable:max-line-length */\nexport function switchMap<T, R>(project: (value: T, index: number) => ObservableInput<R>): OperatorFunction<T, R>;\n/** @deprecated resultSelector is no longer supported, use inner map instead */\nexport function switchMap<T, R>(project: (value: T, index: number) => ObservableInput<R>, resultSelector: undefined): OperatorFunction<T, R>;\n/** @deprecated resultSelector is no longer supported, use inner map instead */\nexport function switchMap<T, I, R>(project: (value: T, index: number) => ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables.</span>\n *\n * ![](switchMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * ## Example\n * Rerun an interval Observable on every click event\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(switchMap((ev) => interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchAll}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional deprecated `resultSelector`) to each item\n * emitted by the source Observable and taking only the values from the most recently\n * projected inner Observable.\n * @method switchMap\n * @owner Observable\n */\nexport function switchMap<T, I, R>(\n  project: (value: T, index: number) => ObservableInput<I>,\n  resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n): OperatorFunction<T, I|R> {\n  if (typeof resultSelector === 'function') {\n    return (source: Observable<T>) => source.pipe(\n      switchMap((a, i) => from(project(a, i)).pipe(\n        map((b, ii) => resultSelector(a, b, i, ii))\n      ))\n    );\n  }\n  return (source: Observable<T>) => source.lift(new SwitchMapOperator(project));\n}\n\nclass SwitchMapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => ObservableInput<R>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new SwitchMapSubscriber(subscriber, this.project));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SwitchMapSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private index: number = 0;\n  private innerSubscription: Subscription;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => ObservableInput<R>) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    let result: ObservableInput<R>;\n    const index = this.index++;\n    try {\n      result = this.project(value, index);\n    } catch (error) {\n      this.destination.error(error);\n      return;\n    }\n    this._innerSub(result, value, index);\n  }\n\n  private _innerSub(result: ObservableInput<R>, value: T, index: number) {\n    const innerSubscription = this.innerSubscription;\n    if (innerSubscription) {\n      innerSubscription.unsubscribe();\n    }\n    const innerSubscriber = new InnerSubscriber(this, undefined, undefined);\n    const destination = this.destination as Subscription;\n    destination.add(innerSubscriber);\n    this.innerSubscription = subscribeToResult(this, result, value, index, innerSubscriber);\n  }\n\n  protected _complete(): void {\n    const {innerSubscription} = this;\n    if (!innerSubscription || innerSubscription.closed) {\n      super._complete();\n    }\n    this.unsubscribe();\n  }\n\n  protected _unsubscribe() {\n    this.innerSubscription = null;\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const destination = this.destination as Subscription;\n    destination.remove(innerSub);\n    this.innerSubscription = null;\n    if (this.isStopped) {\n      super._complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n      this.destination.next(innerValue);\n  }\n}\n","import { OperatorFunction, ObservableInput } from '../types';\nimport { switchMap } from './switchMap';\nimport { identity } from '../util/identity';\n\nexport function switchAll<T>(): OperatorFunction<ObservableInput<T>, T>;\nexport function switchAll<R>(): OperatorFunction<any, R>;\n\nexport function switchAll<T>(): OperatorFunction<ObservableInput<T>, T> {\n  return switchMap(identity);\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { ObservableInput, OperatorFunction } from '../types';\nimport { switchMap } from './switchMap';\n\n/* tslint:disable:max-line-length */\nexport function switchMapTo<R>(observable: ObservableInput<R>): OperatorFunction<any, R>;\n/** @deprecated resultSelector is no longer supported. Switch to using switchMap with an inner map */\nexport function switchMapTo<T, R>(observable: ObservableInput<R>, resultSelector: undefined): OperatorFunction<T, R>;\n/** @deprecated resultSelector is no longer supported. Switch to using switchMap with an inner map */\nexport function switchMapTo<T, I, R>(observable: ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to the same Observable which is flattened multiple\n * times with {@link switchMap} in the output Observable.\n *\n * <span class=\"informal\">It's like {@link switchMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * ![](switchMapTo.png)\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. The output Observables\n * emits values only from the most recently emitted instance of\n * `innerObservable`.\n *\n * ## Example\n * Rerun an interval Observable on every click event\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(switchMapTo(interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMapTo}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link mergeMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through the deprecated `resultSelector`)\n * every time a value is emitted on the source Observable, and taking only the values\n * from the most recently projected inner Observable.\n * @method switchMapTo\n * @owner Observable\n */\nexport function switchMapTo<T, I, R>(\n  innerObservable: ObservableInput<I>,\n  resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, I|R> {\n  return resultSelector ? switchMap(() => innerObservable, resultSelector) : switchMap(() => innerObservable);\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Emits the values emitted by the source Observable until a `notifier`\n * Observable emits a value.\n *\n * <span class=\"informal\">Lets values pass until a second Observable,\n * `notifier`, emits a value. Then, it completes.</span>\n *\n * ![](takeUntil.png)\n *\n * `takeUntil` subscribes and begins mirroring the source Observable. It also\n * monitors a second Observable, `notifier` that you provide. If the `notifier`\n * emits a value, the output Observable stops mirroring the source Observable\n * and completes. If the `notifier` doesn't emit any value and completes\n * then `takeUntil` will pass all values.\n *\n * ## Example\n * Tick every second until the first click happens\n * ```javascript\n * const interval = interval(1000);\n * const clicks = fromEvent(document, 'click');\n * const result = interval.pipe(takeUntil(clicks));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param {Observable} notifier The Observable whose first emitted value will\n * cause the output Observable of `takeUntil` to stop emitting values from the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable until such time as `notifier` emits its first value.\n * @method takeUntil\n * @owner Observable\n */\nexport function takeUntil<T>(notifier: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new TakeUntilOperator(notifier));\n}\n\nclass TakeUntilOperator<T> implements Operator<T, T> {\n  constructor(private notifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    const takeUntilSubscriber = new TakeUntilSubscriber(subscriber);\n    const notifierSubscription = subscribeToResult(takeUntilSubscriber, this.notifier);\n    if (notifierSubscription && !takeUntilSubscriber.seenValue) {\n      takeUntilSubscriber.add(notifierSubscription);\n      return source.subscribe(takeUntilSubscriber);\n    }\n    return takeUntilSubscriber;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeUntilSubscriber<T, R> extends OuterSubscriber<T, R> {\n  seenValue = false;\n\n  constructor(destination: Subscriber<any>, ) {\n    super(destination);\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.seenValue = true;\n    this.complete();\n  }\n\n  notifyComplete(): void {\n    // noop\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction, MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\nexport function takeWhile<T, S extends T>(predicate: (value: T, index: number) => value is S): OperatorFunction<T, S>;\nexport function takeWhile<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T>;\n\n/**\n * Emits values emitted by the source Observable so long as each value satisfies\n * the given `predicate`, and then completes as soon as this `predicate` is not\n * satisfied.\n *\n * <span class=\"informal\">Takes values from the source only while they pass the\n * condition given. When the first value does not satisfy, it completes.</span>\n *\n * ![](takeWhile.png)\n *\n * `takeWhile` subscribes and begins mirroring the source Observable. Each value\n * emitted on the source is given to the `predicate` function which returns a\n * boolean, representing a condition to be satisfied by the source values. The\n * output Observable emits the source values until such time as the `predicate`\n * returns false, at which point `takeWhile` stops mirroring the source\n * Observable and completes the output Observable.\n *\n * ## Example\n * Emit click events only while the clientX property is greater than 200\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(takeWhile(ev => ev.clientX > 200));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates a value emitted by the source Observable and returns a boolean.\n * Also takes the (zero-based) index as the second argument.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable so long as each value satisfies the condition defined by the\n * `predicate`, then completes.\n * @method takeWhile\n * @owner Observable\n */\nexport function takeWhile<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new TakeWhileOperator(predicate));\n}\n\nclass TakeWhileOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number) => boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TakeWhileSubscriber(subscriber, this.predicate));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeWhileSubscriber<T> extends Subscriber<T> {\n  private index: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number) => boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const destination = this.destination;\n    let result: boolean;\n    try {\n      result = this.predicate(value, this.index++);\n    } catch (err) {\n      destination.error(err);\n      return;\n    }\n    this.nextOrComplete(value, result);\n  }\n\n  private nextOrComplete(value: T, predicateResult: boolean): void {\n    const destination = this.destination;\n    if (Boolean(predicateResult)) {\n      destination.next(value);\n    } else {\n      destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction, SubscribableOrPromise, TeardownLogic } from '../types';\n\nexport interface ThrottleConfig {\n  leading?: boolean;\n  trailing?: boolean;\n}\n\nexport const defaultThrottleConfig: ThrottleConfig = {\n  leading: true,\n  trailing: false\n};\n\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for a duration determined by another Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link throttleTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * ![](throttle.png)\n *\n * `throttle` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled by calling the `durationSelector` function with the source value,\n * which returns the \"duration\" Observable. When the duration Observable emits a\n * value or completes, the timer is disabled, and this process repeats for the\n * next source value.\n *\n * ## Example\n * Emit clicks at a rate of at most one click per second\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(throttle(ev => interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration for each source value, returned as an Observable or a Promise.\n * @param {Object} config a configuration object to define `leading` and `trailing` behavior. Defaults\n * to `{ leading: true, trailing: false }`.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttle\n * @owner Observable\n */\nexport function throttle<T>(durationSelector: (value: T) => SubscribableOrPromise<any>,\n                            config: ThrottleConfig = defaultThrottleConfig): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new ThrottleOperator(durationSelector, config.leading, config.trailing));\n}\n\nclass ThrottleOperator<T> implements Operator<T, T> {\n  constructor(private durationSelector: (value: T) => SubscribableOrPromise<any>,\n              private leading: boolean,\n              private trailing: boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(\n      new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing)\n    );\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc\n * @ignore\n * @extends {Ignored}\n */\nclass ThrottleSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private _throttled: Subscription;\n  private _sendValue: T;\n  private _hasValue = false;\n\n  constructor(protected destination: Subscriber<T>,\n              private durationSelector: (value: T) => SubscribableOrPromise<number>,\n              private _leading: boolean,\n              private _trailing: boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this._hasValue = true;\n    this._sendValue = value;\n\n    if (!this._throttled) {\n      if (this._leading) {\n        this.send();\n      } else {\n        this.throttle(value);\n      }\n    }\n  }\n\n  private send() {\n    const { _hasValue, _sendValue } = this;\n    if (_hasValue) {\n      this.destination.next(_sendValue);\n      this.throttle(_sendValue);\n    }\n    this._hasValue = false;\n    this._sendValue = null;\n  }\n\n  private throttle(value: T): void {\n    const duration = this.tryDurationSelector(value);\n    if (duration) {\n      this.add(this._throttled = subscribeToResult(this, duration));\n    }\n  }\n\n  private tryDurationSelector(value: T): SubscribableOrPromise<any> {\n    try {\n      return this.durationSelector(value);\n    } catch (err) {\n      this.destination.error(err);\n      return null;\n    }\n  }\n\n  private throttlingDone() {\n    const { _throttled, _trailing } = this;\n    if (_throttled) {\n      _throttled.unsubscribe();\n    }\n    this._throttled = null;\n\n    if (_trailing) {\n      this.send();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.throttlingDone();\n  }\n\n  notifyComplete(): void {\n    this.throttlingDone();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { async } from '../scheduler/async';\nimport { Observable } from '../Observable';\nimport { ThrottleConfig, defaultThrottleConfig } from './throttle';\nimport { MonoTypeOperatorFunction, SchedulerLike, TeardownLogic } from '../types';\n\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for `duration` milliseconds, then repeats this process.\n *\n * <span class=\"informal\">Lets a value pass, then ignores source values for the\n * next `duration` milliseconds.</span>\n *\n * ![](throttleTime.png)\n *\n * `throttleTime` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled. After `duration` milliseconds (or the time unit determined\n * internally by the optional `scheduler`) has passed, the timer is disabled,\n * and this process repeats for the next source value. Optionally takes a\n * {@link SchedulerLike} for managing timers.\n *\n * ## Example\n * Emit clicks at a rate of at most one click per second\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(throttleTime(1000));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {number} duration Time to wait before emitting another value after\n * emitting the last value, measured in milliseconds or the time unit determined\n * internally by the optional `scheduler`.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the throttling.\n * @param {Object} config a configuration object to define `leading` and\n * `trailing` behavior. Defaults to `{ leading: true, trailing: false }`.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttleTime\n * @owner Observable\n */\nexport function throttleTime<T>(duration: number,\n                                scheduler: SchedulerLike = async,\n                                config: ThrottleConfig = defaultThrottleConfig): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing));\n}\n\nclass ThrottleTimeOperator<T> implements Operator<T, T> {\n  constructor(private duration: number,\n              private scheduler: SchedulerLike,\n              private leading: boolean,\n              private trailing: boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(\n      new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing)\n    );\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ThrottleTimeSubscriber<T> extends Subscriber<T> {\n  private throttled: Subscription;\n  private _hasTrailingValue: boolean = false;\n  private _trailingValue: T = null;\n\n  constructor(destination: Subscriber<T>,\n              private duration: number,\n              private scheduler: SchedulerLike,\n              private leading: boolean,\n              private trailing: boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    if (this.throttled) {\n      if (this.trailing) {\n        this._trailingValue = value;\n        this._hasTrailingValue = true;\n      }\n    } else {\n      this.add(this.throttled = this.scheduler.schedule<DispatchArg<T>>(dispatchNext, this.duration, { subscriber: this }));\n      if (this.leading) {\n        this.destination.next(value);\n      }\n    }\n  }\n\n  protected _complete() {\n    if (this._hasTrailingValue) {\n      this.destination.next(this._trailingValue);\n      this.destination.complete();\n    } else {\n      this.destination.complete();\n    }\n  }\n\n  clearThrottle() {\n    const throttled = this.throttled;\n    if (throttled) {\n      if (this.trailing && this._hasTrailingValue) {\n        this.destination.next(this._trailingValue);\n        this._trailingValue = null;\n        this._hasTrailingValue = false;\n      }\n      throttled.unsubscribe();\n      this.remove(throttled);\n      this.throttled = null;\n    }\n  }\n}\n\ninterface DispatchArg<T> {\n  subscriber: ThrottleTimeSubscriber<T>;\n}\n\nfunction dispatchNext<T>(arg: DispatchArg<T>) {\n  const { subscriber } = arg;\n  subscriber.clearThrottle();\n}\n","\nimport { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { SchedulerLike, OperatorFunction } from '../types';\nimport { scan } from './scan';\nimport { defer } from '../observable/defer';\nimport { map } from './map';\n\nexport function timeInterval<T>(scheduler: SchedulerLike = async): OperatorFunction<T, TimeInterval<T>> {\n  return (source: Observable<T>) => defer(() => {\n    return source.pipe(\n      // HACK: the typings seem off with scan\n      scan(\n        ({ current }, value) => ({ value, current: scheduler.now(), last: current }),\n        { current: scheduler.now(), value: undefined,  last: undefined }\n      ) as any,\n      map<any, TimeInterval<T>>(({ current, last, value }) => new TimeInterval(value, current - last)),\n    );\n  });\n}\n\nexport class TimeInterval<T> {\n  constructor(public value: T, public interval: number) {}\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nimport { Observable } from '../Observable';\nimport { isDate } from '../util/isDate';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { ObservableInput, OperatorFunction, MonoTypeOperatorFunction, SchedulerAction, SchedulerLike, TeardownLogic } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function timeoutWith<T, R>(due: number | Date, withObservable: ObservableInput<R>, scheduler?: SchedulerLike): OperatorFunction<T, T | R>;\n/* tslint:enable:max-line-length */\n\n/**\n *\n * Errors if Observable does not emit a value in given time span, in case of which\n * subscribes to the second Observable.\n *\n * <span class=\"informal\">It's a version of `timeout` operator that let's you specify fallback Observable.</span>\n *\n * ![](timeoutWith.png)\n *\n * `timeoutWith` is a variation of `timeout` operator. It behaves exactly the same,\n * still accepting as a first argument either a number or a Date, which control - respectively -\n * when values of source Observable should be emitted or when it should complete.\n *\n * The only difference is that it accepts a second, required parameter. This parameter\n * should be an Observable which will be subscribed when source Observable fails any timeout check.\n * So whenever regular `timeout` would emit an error, `timeoutWith` will instead start re-emitting\n * values from second Observable. Note that this fallback Observable is not checked for timeouts\n * itself, so it can emit values and complete at arbitrary points in time. From the moment of a second\n * subscription, Observable returned from `timeoutWith` simply mirrors fallback stream. When that\n * stream completes, it completes as well.\n *\n * Scheduler, which in case of `timeout` is provided as as second argument, can be still provided\n * here - as a third, optional parameter. It still is used to schedule timeout checks and -\n * as a consequence - when second Observable will be subscribed, since subscription happens\n * immediately after failing check.\n *\n * ## Example\n * Add fallback observable\n * ```javascript\n * const seconds = interval(1000);\n * const minutes = interval(60 * 1000);\n *\n * seconds.pipe(timeoutWith(900, minutes))\n *   .subscribe(\n *     value => console.log(value), // After 900ms, will start emitting `minutes`,\n *                                  // since first value of `seconds` will not arrive fast enough.\n *     err => console.log(err),     // Would be called after 900ms in case of `timeout`,\n *                                  // but here will never be called.\n *   );\n * ```\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {Observable<T>} withObservable Observable which will be subscribed if source fails timeout check.\n * @param {SchedulerLike} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source or, when timeout check fails, of an Observable\n *                          passed as a second parameter.\n * @method timeoutWith\n * @owner Observable\n */\nexport function timeoutWith<T, R>(due: number | Date,\n                                  withObservable: ObservableInput<R>,\n                                  scheduler: SchedulerLike = async): OperatorFunction<T, T | R> {\n  return (source: Observable<T>) => {\n    let absoluteTimeout = isDate(due);\n    let waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(<number>due);\n    return source.lift(new TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler));\n  };\n}\n\nclass TimeoutWithOperator<T> implements Operator<T, T> {\n  constructor(private waitFor: number,\n              private absoluteTimeout: boolean,\n              private withObservable: ObservableInput<any>,\n              private scheduler: SchedulerLike) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TimeoutWithSubscriber(\n      subscriber, this.absoluteTimeout, this.waitFor, this.withObservable, this.scheduler\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TimeoutWithSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private action: SchedulerAction<TimeoutWithSubscriber<T, R>> = null;\n\n  constructor(destination: Subscriber<T>,\n              private absoluteTimeout: boolean,\n              private waitFor: number,\n              private withObservable: ObservableInput<any>,\n              private scheduler: SchedulerLike) {\n    super(destination);\n    this.scheduleTimeout();\n  }\n\n  private static dispatchTimeout<T, R>(subscriber: TimeoutWithSubscriber<T, R>): void {\n    const { withObservable } = subscriber;\n    (<any> subscriber)._unsubscribeAndRecycle();\n    subscriber.add(subscribeToResult(subscriber, withObservable));\n  }\n\n  private scheduleTimeout(): void {\n    const { action } = this;\n    if (action) {\n      // Recycle the action if we've already scheduled one. All the production\n      // Scheduler Actions mutate their state/delay time and return themeselves.\n      // VirtualActions are immutable, so they create and return a clone. In this\n      // case, we need to set the action reference to the most recent VirtualAction,\n      // to ensure that's the one we clone from next time.\n      this.action = (<SchedulerAction<TimeoutWithSubscriber<T, R>>> action.schedule(this, this.waitFor));\n    } else {\n      this.add(this.action = (<SchedulerAction<TimeoutWithSubscriber<T, R>>> this.scheduler.schedule<TimeoutWithSubscriber<T, R>>(\n        TimeoutWithSubscriber.dispatchTimeout, this.waitFor, this\n      )));\n    }\n  }\n\n  protected _next(value: T): void {\n    if (!this.absoluteTimeout) {\n      this.scheduleTimeout();\n    }\n    super._next(value);\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    this.action = null;\n    this.scheduler = null;\n    this.withObservable = null;\n  }\n}\n","import { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TimeoutError } from '../util/TimeoutError';\nimport { MonoTypeOperatorFunction, SchedulerAction, SchedulerLike, TeardownLogic } from '../types';\nimport { timeoutWith } from './timeoutWith';\nimport { throwError } from '../observable/throwError';\n\n/**\n *\n * Errors if Observable does not emit a value in given time span.\n *\n * <span class=\"informal\">Timeouts on Observable that doesn't emit values fast enough.</span>\n *\n * ![](timeout.png)\n *\n * `timeout` operator accepts as an argument either a number or a Date.\n *\n * If number was provided, it returns an Observable that behaves like a source\n * Observable, unless there is a period of time where there is no value emitted.\n * So if you provide `100` as argument and first value comes after 50ms from\n * the moment of subscription, this value will be simply re-emitted by the resulting\n * Observable. If however after that 100ms passes without a second value being emitted,\n * stream will end with an error and source Observable will be unsubscribed.\n * These checks are performed throughout whole lifecycle of Observable - from the moment\n * it was subscribed to, until it completes or errors itself. Thus every value must be\n * emitted within specified period since previous value.\n *\n * If provided argument was Date, returned Observable behaves differently. It throws\n * if Observable did not complete before provided Date. This means that periods between\n * emission of particular values do not matter in this case. If Observable did not complete\n * before provided Date, source Observable will be unsubscribed. Other than that, resulting\n * stream behaves just as source Observable.\n *\n * `timeout` accepts also a Scheduler as a second parameter. It is used to schedule moment (or moments)\n * when returned Observable will check if source stream emitted value or completed.\n *\n * ## Examples\n * Check if ticks are emitted within certain timespan\n * ```javascript\n * const seconds = interval(1000);\n *\n * seconds.pipe(timeout(1100))      // Let's use bigger timespan to be safe,\n *                                  // since `interval` might fire a bit later then scheduled.\n * .subscribe(\n *     value => console.log(value), // Will emit numbers just as regular `interval` would.\n *     err => console.log(err),     // Will never be called.\n * );\n *\n * seconds.pipe(timeout(900))\n * .subscribe(\n *     value => console.log(value), // Will never be called.\n *     err => console.log(err),     // Will emit error before even first value is emitted,\n *                                  // since it did not arrive within 900ms period.\n * );\n * ```\n *\n * Use Date to check if Observable completed\n * ```javascript\n * const seconds = interval(1000);\n *\n * seconds.pipe(\n *   timeout(new Date(\"December 17, 2020 03:24:00\")),\n * )\n * .subscribe(\n *     value => console.log(value), // Will emit values as regular `interval` would\n *                                  // until December 17, 2020 at 03:24:00.\n *     err => console.log(err)      // On December 17, 2020 at 03:24:00 it will emit an error,\n *                                  // since Observable did not complete by then.\n * );\n * ```\n * @see {@link timeoutWith}\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {SchedulerLike} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source, unless timeout checks fail.\n * @method timeout\n * @owner Observable\n */\nexport function timeout<T>(due: number | Date,\n                           scheduler: SchedulerLike = async): MonoTypeOperatorFunction<T> {\n  return timeoutWith(due, throwError(new TimeoutError()), scheduler);\n}\n","\nimport { async } from '../scheduler/async';\nimport { OperatorFunction, SchedulerLike, Timestamp as TimestampInterface } from '../types';\nimport { map } from './map';\n\n/**\n * @param scheduler\n * @return {Observable<Timestamp<any>>|WebSocketSubject<T>|Observable<T>}\n * @method timestamp\n * @owner Observable\n */\nexport function timestamp<T>(scheduler: SchedulerLike = async): OperatorFunction<T, Timestamp<T>> {\n  return map((value: T) => new Timestamp(value, scheduler.now()));\n  // return (source: Observable<T>) => source.lift(new TimestampOperator(scheduler));\n}\n\nexport class Timestamp<T> implements TimestampInterface<T> {\n  constructor(public value: T, public timestamp: number) {\n  }\n}\n","import { reduce } from './reduce';\nimport { OperatorFunction } from '../types';\n\nfunction toArrayReducer<T>(arr: T[], item: T, index: number) {\n  if (index === 0) {\n    return [item];\n  }\n  arr.push(item);\n  return arr;\n}\n\nexport function toArray<T>(): OperatorFunction<T, T[]> {\n  return reduce(toArrayReducer, []) as OperatorFunction<T, T[]>;\n}\n","import { Observable } from '../Observable';\nimport { OperatorFunction } from '../types';\nimport { Subject } from '../Subject';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { Operator } from '../Operator';\n\n/**\n * Branch out the source Observable values as a nested Observable whenever\n * `windowBoundaries` emits.\n *\n * <span class=\"informal\">It's like {@link buffer}, but emits a nested Observable\n * instead of an array.</span>\n *\n * ![](window.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping\n * windows. It emits the current window and opens a new one whenever the\n * Observable `windowBoundaries` emits an item. Because each window is an\n * Observable, the output is a higher-order Observable.\n *\n * ## Example\n * In every window of 1 second each, emit at most 2 click events\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const interval = interval(1000);\n * const result = clicks.pipe(\n *   window(interval),\n *   map(win => win.take(2)), // each window has at most 2 emissions\n *   mergeAll(),              // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link buffer}\n *\n * @param {Observable<any>} windowBoundaries An Observable that completes the\n * previous window and starts a new window.\n * @return {Observable<Observable<T>>} An Observable of windows, which are\n * Observables emitting values of the source Observable.\n * @method window\n * @owner Observable\n */\nexport function window<T>(windowBoundaries: Observable<any>): OperatorFunction<T, Observable<T>> {\n  return function windowOperatorFunction(source: Observable<T>) {\n    return source.lift(new WindowOperator(windowBoundaries));\n  };\n}\n\nclass WindowOperator<T> implements Operator<T, Observable<T>> {\n\n  constructor(private windowBoundaries: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    const windowSubscriber = new WindowSubscriber(subscriber);\n    const sourceSubscription = source.subscribe(windowSubscriber);\n    if (!sourceSubscription.closed) {\n      windowSubscriber.add(subscribeToResult(windowSubscriber, this.windowBoundaries));\n    }\n    return sourceSubscription;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowSubscriber<T> extends OuterSubscriber<T, any> {\n\n  private window: Subject<T> = new Subject<T>();\n\n  constructor(destination: Subscriber<Observable<T>>) {\n    super(destination);\n    destination.next(this.window);\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    this.openWindow();\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, any>): void {\n    this._error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, any>): void {\n    this._complete();\n  }\n\n  protected _next(value: T): void {\n    this.window.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.window.error(err);\n    this.destination.error(err);\n  }\n\n  protected _complete(): void {\n    this.window.complete();\n    this.destination.complete();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    this.window = null;\n  }\n\n  private openWindow(): void  {\n    const prevWindow = this.window;\n    if (prevWindow) {\n      prevWindow.complete();\n    }\n    const destination = this.destination;\n    const newWindow = this.window = new Subject<T>();\n    destination.next(newWindow);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { OperatorFunction } from '../types';\n\n/**\n * Branch out the source Observable values as a nested Observable with each\n * nested Observable emitting at most `windowSize` values.\n *\n * <span class=\"informal\">It's like {@link bufferCount}, but emits a nested\n * Observable instead of an array.</span>\n *\n * ![](windowCount.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows every `startWindowEvery`\n * items, each containing no more than `windowSize` items. When the source\n * Observable completes or encounters an error, the output Observable emits\n * the current window and propagates the notification from the source\n * Observable. If `startWindowEvery` is not provided, then new windows are\n * started immediately at the start of the source and when each window completes\n * with size `windowSize`.\n *\n * ## Examples\n * Ignore every 3rd click event, starting from the first one\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowCount(3)),\n *   map(win => win.skip(1)), // skip first of every 3 clicks\n *   mergeAll(),              // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Ignore every 3rd click event, starting from the third one\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowCount(2, 3),\n *   mergeAll(),              // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link window}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferCount}\n *\n * @param {number} windowSize The maximum number of values emitted by each\n * window.\n * @param {number} [startWindowEvery] Interval at which to start a new window.\n * For example if `startWindowEvery` is `2`, then a new window will be started\n * on every other value from the source. A new window is started at the\n * beginning of the source by default.\n * @return {Observable<Observable<T>>} An Observable of windows, which in turn\n * are Observable of values.\n * @method windowCount\n * @owner Observable\n */\nexport function windowCount<T>(windowSize: number,\n                               startWindowEvery: number = 0): OperatorFunction<T, Observable<T>> {\n  return function windowCountOperatorFunction(source: Observable<T>) {\n    return source.lift(new WindowCountOperator<T>(windowSize, startWindowEvery));\n  };\n}\n\nclass WindowCountOperator<T> implements Operator<T, Observable<T>> {\n\n  constructor(private windowSize: number,\n              private startWindowEvery: number) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source.subscribe(new WindowCountSubscriber(subscriber, this.windowSize, this.startWindowEvery));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowCountSubscriber<T> extends Subscriber<T> {\n  private windows: Subject<T>[] = [ new Subject<T>() ];\n  private count: number = 0;\n\n  constructor(protected destination: Subscriber<Observable<T>>,\n              private windowSize: number,\n              private startWindowEvery: number) {\n    super(destination);\n    destination.next(this.windows[0]);\n  }\n\n  protected _next(value: T) {\n    const startWindowEvery = (this.startWindowEvery > 0) ? this.startWindowEvery : this.windowSize;\n    const destination = this.destination;\n    const windowSize = this.windowSize;\n    const windows = this.windows;\n    const len = windows.length;\n\n    for (let i = 0; i < len && !this.closed; i++) {\n      windows[i].next(value);\n    }\n    const c = this.count - windowSize + 1;\n    if (c >= 0 && c % startWindowEvery === 0 && !this.closed) {\n      windows.shift().complete();\n    }\n    if (++this.count % startWindowEvery === 0 && !this.closed) {\n      const window = new Subject<T>();\n      windows.push(window);\n      destination.next(window);\n    }\n  }\n\n  protected _error(err: any) {\n    const windows = this.windows;\n    if (windows) {\n      while (windows.length > 0 && !this.closed) {\n        windows.shift().error(err);\n      }\n    }\n    this.destination.error(err);\n  }\n\n  protected _complete() {\n    const windows = this.windows;\n    if (windows) {\n      while (windows.length > 0 && !this.closed) {\n        windows.shift().complete();\n      }\n    }\n    this.destination.complete();\n  }\n\n  protected _unsubscribe() {\n    this.count = 0;\n    this.windows = null;\n  }\n}\n","import { Subject } from '../Subject';\nimport { Operator } from '../Operator';\nimport { async } from '../scheduler/async';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nimport { OperatorFunction, SchedulerLike, SchedulerAction } from '../types';\n\n/**\n * Branch out the source Observable values as a nested Observable periodically\n * in time.\n *\n * <span class=\"informal\">It's like {@link bufferTime}, but emits a nested\n * Observable instead of an array.</span>\n *\n * ![](windowTime.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable starts a new window periodically, as\n * determined by the `windowCreationInterval` argument. It emits each window\n * after a fixed timespan, specified by the `windowTimeSpan` argument. When the\n * source Observable completes or encounters an error, the output Observable\n * emits the current window and propagates the notification from the source\n * Observable. If `windowCreationInterval` is not provided, the output\n * Observable starts a new window when the previous window of duration\n * `windowTimeSpan` completes. If `maxWindowCount` is provided, each window\n * will emit at most fixed number of values. Window will complete immediately\n * after emitting last value and next one still will open as specified by\n * `windowTimeSpan` and `windowCreationInterval` arguments.\n *\n * ## Examples\n * In every window of 1 second each, emit at most 2 click events\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowTime(1000),\n *   map(win => win.take(2)),   // each window has at most 2 emissions\n *   mergeAll(),                // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Every 5 seconds start a window 1 second long, and emit at most 2 click events per window\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowTime(1000, 5000),\n *   map(win => win.take(2)),   // each window has at most 2 emissions\n *   mergeAll(),                // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Same as example above but with maxWindowCount instead of take\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowTime(1000, 5000, 2), // each window has still at most 2 emissions\n *   mergeAll(),                // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferTime}\n *\n * @param {number} windowTimeSpan The amount of time to fill each window.\n * @param {number} [windowCreationInterval] The interval at which to start new\n * windows.\n * @param {number} [maxWindowSize=Number.POSITIVE_INFINITY] Max number of\n * values each window can emit before completion.\n * @param {SchedulerLike} [scheduler=async] The scheduler on which to schedule the\n * intervals that determine window boundaries.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowTime\n * @owner Observable\n */\nexport function windowTime<T>(windowTimeSpan: number,\n                              scheduler?: SchedulerLike): OperatorFunction<T, Observable<T>>;\nexport function windowTime<T>(windowTimeSpan: number,\n                              windowCreationInterval: number,\n                              scheduler?: SchedulerLike): OperatorFunction<T, Observable<T>>;\nexport function windowTime<T>(windowTimeSpan: number,\n                              windowCreationInterval: number,\n                              maxWindowSize: number,\n                              scheduler?: SchedulerLike): OperatorFunction<T, Observable<T>>;\n\nexport function windowTime<T>(windowTimeSpan: number): OperatorFunction<T, Observable<T>> {\n  let scheduler: SchedulerLike = async;\n  let windowCreationInterval: number = null;\n  let maxWindowSize: number = Number.POSITIVE_INFINITY;\n\n  if (isScheduler(arguments[3])) {\n    scheduler = arguments[3];\n  }\n\n  if (isScheduler(arguments[2])) {\n    scheduler = arguments[2];\n  } else if (isNumeric(arguments[2])) {\n    maxWindowSize = arguments[2];\n  }\n\n  if (isScheduler(arguments[1])) {\n    scheduler = arguments[1];\n  } else if (isNumeric(arguments[1])) {\n    windowCreationInterval = arguments[1];\n  }\n\n  return function windowTimeOperatorFunction(source: Observable<T>) {\n    return source.lift(new WindowTimeOperator<T>(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler));\n  };\n}\n\nclass WindowTimeOperator<T> implements Operator<T, Observable<T>> {\n\n  constructor(private windowTimeSpan: number,\n              private windowCreationInterval: number | null,\n              private maxWindowSize: number,\n              private scheduler: SchedulerLike) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source.subscribe(new WindowTimeSubscriber(\n      subscriber, this.windowTimeSpan, this.windowCreationInterval, this.maxWindowSize, this.scheduler\n    ));\n  }\n}\n\ninterface CreationState<T> {\n  windowTimeSpan: number;\n  windowCreationInterval: number;\n  subscriber: WindowTimeSubscriber<T>;\n  scheduler: SchedulerLike;\n}\n\ninterface TimeSpanOnlyState<T> {\n    window: CountedSubject<T>;\n    windowTimeSpan: number;\n    subscriber: WindowTimeSubscriber<T>;\n  }\n\ninterface CloseWindowContext<T> {\n  action: SchedulerAction<CreationState<T>>;\n  subscription: Subscription;\n}\n\ninterface CloseState<T> {\n  subscriber: WindowTimeSubscriber<T>;\n  window: CountedSubject<T>;\n  context: CloseWindowContext<T>;\n}\n\nclass CountedSubject<T> extends Subject<T> {\n  private _numberOfNextedValues: number = 0;\n\n  next(value?: T): void {\n    this._numberOfNextedValues++;\n    super.next(value);\n  }\n\n  get numberOfNextedValues(): number {\n    return this._numberOfNextedValues;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowTimeSubscriber<T> extends Subscriber<T> {\n  private windows: CountedSubject<T>[] = [];\n\n  constructor(protected destination: Subscriber<Observable<T>>,\n              private windowTimeSpan: number,\n              private windowCreationInterval: number | null,\n              private maxWindowSize: number,\n              private scheduler: SchedulerLike) {\n    super(destination);\n\n    const window = this.openWindow();\n    if (windowCreationInterval !== null && windowCreationInterval >= 0) {\n      const closeState: CloseState<T> = { subscriber: this, window, context: <any>null };\n      const creationState: CreationState<T> = { windowTimeSpan, windowCreationInterval, subscriber: this, scheduler };\n      this.add(scheduler.schedule<CloseState<T>>(dispatchWindowClose, windowTimeSpan, closeState));\n      this.add(scheduler.schedule<CreationState<T>>(dispatchWindowCreation, windowCreationInterval, creationState));\n    } else {\n      const timeSpanOnlyState: TimeSpanOnlyState<T> = { subscriber: this, window, windowTimeSpan };\n      this.add(scheduler.schedule<TimeSpanOnlyState<T>>(dispatchWindowTimeSpanOnly, windowTimeSpan, timeSpanOnlyState));\n    }\n  }\n\n  protected _next(value: T): void {\n    const windows = this.windows;\n    const len = windows.length;\n    for (let i = 0; i < len; i++) {\n      const window = windows[i];\n      if (!window.closed) {\n        window.next(value);\n        if (window.numberOfNextedValues >= this.maxWindowSize) {\n          this.closeWindow(window);\n        }\n      }\n    }\n  }\n\n  protected _error(err: any): void {\n    const windows = this.windows;\n    while (windows.length > 0) {\n      windows.shift().error(err);\n    }\n    this.destination.error(err);\n  }\n\n  protected _complete(): void {\n    const windows = this.windows;\n    while (windows.length > 0) {\n      const window = windows.shift();\n      if (!window.closed) {\n        window.complete();\n      }\n    }\n    this.destination.complete();\n  }\n\n  public openWindow(): CountedSubject<T> {\n    const window = new CountedSubject<T>();\n    this.windows.push(window);\n    const destination = this.destination;\n    destination.next(window);\n    return window;\n  }\n\n  public closeWindow(window: CountedSubject<T>): void {\n    window.complete();\n    const windows = this.windows;\n    windows.splice(windows.indexOf(window), 1);\n  }\n}\n\nfunction dispatchWindowTimeSpanOnly<T>(this: SchedulerAction<TimeSpanOnlyState<T>>, state: TimeSpanOnlyState<T>): void {\n  const { subscriber, windowTimeSpan, window } = state;\n  if (window) {\n    subscriber.closeWindow(window);\n  }\n  state.window = subscriber.openWindow();\n  this.schedule(state, windowTimeSpan);\n}\n\nfunction dispatchWindowCreation<T>(this: SchedulerAction<CreationState<T>>, state: CreationState<T>): void {\n  const { windowTimeSpan, subscriber, scheduler, windowCreationInterval } = state;\n  const window = subscriber.openWindow();\n  const action = this;\n  let context: CloseWindowContext<T> = { action, subscription: <any>null };\n  const timeSpanState: CloseState<T> = { subscriber, window, context };\n  context.subscription = scheduler.schedule<CloseState<T>>(dispatchWindowClose, windowTimeSpan, timeSpanState);\n  action.add(context.subscription);\n  action.schedule(state, windowCreationInterval);\n}\n\nfunction dispatchWindowClose<T>(state: CloseState<T>): void {\n  const { subscriber, window, context } = state;\n  if (context && context.action && context.subscription) {\n    context.action.remove(context.subscription);\n  }\n  subscriber.closeWindow(window);\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../types';\n\n/**\n * Branch out the source Observable values as a nested Observable starting from\n * an emission from `openings` and ending when the output of `closingSelector`\n * emits.\n *\n * <span class=\"informal\">It's like {@link bufferToggle}, but emits a nested\n * Observable instead of an array.</span>\n *\n * ![](windowToggle.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows that contain those items\n * emitted by the source Observable between the time when the `openings`\n * Observable emits an item and when the Observable returned by\n * `closingSelector` emits an item.\n *\n * ## Example\n * Every other second, emit the click events from the next 500ms\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const openings = interval(1000);\n * const result = clicks.pipe(\n *   windowToggle(openings, i => i % 2 ? interval(500) : empty()),\n *   mergeAll(),\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowWhen}\n * @see {@link bufferToggle}\n *\n * @param {Observable<O>} openings An observable of notifications to start new\n * windows.\n * @param {function(value: O): Observable} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns an Observable,\n * which, when it emits (either `next` or `complete`), signals that the\n * associated window should complete.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowToggle\n * @owner Observable\n */\nexport function windowToggle<T, O>(openings: Observable<O>,\n                                   closingSelector: (openValue: O) => Observable<any>): OperatorFunction<T, Observable<T>> {\n  return (source: Observable<T>) => source.lift(new WindowToggleOperator<T, O>(openings, closingSelector));\n}\n\nclass WindowToggleOperator<T, O> implements Operator<T, Observable<T>> {\n\n  constructor(private openings: Observable<O>,\n              private closingSelector: (openValue: O) => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source.subscribe(new WindowToggleSubscriber(\n      subscriber, this.openings, this.closingSelector\n    ));\n  }\n}\n\ninterface WindowContext<T> {\n  window: Subject<T>;\n  subscription: Subscription;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowToggleSubscriber<T, O> extends OuterSubscriber<T, any> {\n  private contexts: WindowContext<T>[] = [];\n  private openSubscription: Subscription;\n\n  constructor(destination: Subscriber<Observable<T>>,\n              private openings: Observable<O>,\n              private closingSelector: (openValue: O) => Observable<any>) {\n    super(destination);\n    this.add(this.openSubscription = subscribeToResult(this, openings, openings as any));\n  }\n\n  protected _next(value: T) {\n    const { contexts } = this;\n    if (contexts) {\n      const len = contexts.length;\n      for (let i = 0; i < len; i++) {\n        contexts[i].window.next(value);\n      }\n    }\n  }\n\n  protected _error(err: any) {\n\n    const { contexts } = this;\n    this.contexts = null;\n\n    if (contexts) {\n      const len = contexts.length;\n      let index = -1;\n\n      while (++index < len) {\n        const context = contexts[index];\n        context.window.error(err);\n        context.subscription.unsubscribe();\n      }\n    }\n\n    super._error(err);\n  }\n\n  protected _complete() {\n    const { contexts } = this;\n    this.contexts = null;\n    if (contexts) {\n      const len = contexts.length;\n      let index = -1;\n      while (++index < len) {\n        const context = contexts[index];\n        context.window.complete();\n        context.subscription.unsubscribe();\n      }\n    }\n    super._complete();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    const { contexts } = this;\n    this.contexts = null;\n    if (contexts) {\n      const len = contexts.length;\n      let index = -1;\n      while (++index < len) {\n        const context = contexts[index];\n        context.window.unsubscribe();\n        context.subscription.unsubscribe();\n      }\n    }\n  }\n\n  notifyNext(outerValue: any, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n\n    if (outerValue === this.openings) {\n\n      const { closingSelector } = this;\n      const closingNotifier = tryCatch(closingSelector)(innerValue);\n\n      if (closingNotifier === errorObject) {\n        return this.error(errorObject.e);\n      } else {\n        const window = new Subject<T>();\n        const subscription = new Subscription();\n        const context = { window, subscription };\n        this.contexts.push(context);\n        const innerSubscription = subscribeToResult(this, closingNotifier, context as any);\n\n        if (innerSubscription.closed) {\n          this.closeWindow(this.contexts.length - 1);\n        } else {\n          (<any> innerSubscription).context = context;\n          subscription.add(innerSubscription);\n        }\n\n        this.destination.next(window);\n\n      }\n    } else {\n      this.closeWindow(this.contexts.indexOf(outerValue));\n    }\n  }\n\n  notifyError(err: any): void {\n    this.error(err);\n  }\n\n  notifyComplete(inner: Subscription): void {\n    if (inner !== this.openSubscription) {\n      this.closeWindow(this.contexts.indexOf((<any> inner).context));\n    }\n  }\n\n  private closeWindow(index: number): void {\n    if (index === -1) {\n      return;\n    }\n\n    const { contexts } = this;\n    const context = contexts[index];\n    const { window, subscription } = context;\n    contexts.splice(index, 1);\n    window.complete();\n    subscription.unsubscribe();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../types';\n\n/**\n * Branch out the source Observable values as a nested Observable using a\n * factory function of closing Observables to determine when to start a new\n * window.\n *\n * <span class=\"informal\">It's like {@link bufferWhen}, but emits a nested\n * Observable instead of an array.</span>\n *\n * ![](windowWhen.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping windows.\n * It emits the current window and opens a new one whenever the Observable\n * produced by the specified `closingSelector` function emits an item. The first\n * window is opened immediately when subscribing to the output Observable.\n *\n * ## Example\n * Emit only the first two clicks events in every window of [1-5] random seconds\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowWhen(() => interval(1000 + Math.random() * 4000)),\n *   map(win => win.pipe(take(2))),     // each window has at most 2 emissions\n *   mergeAll(),                        // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link bufferWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals (on either `next` or\n * `complete`) when to close the previous window and start a new one.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowWhen\n * @owner Observable\n */\nexport function windowWhen<T>(closingSelector: () => Observable<any>): OperatorFunction<T, Observable<T>> {\n  return function windowWhenOperatorFunction(source: Observable<T>) {\n    return source.lift(new WindowOperator<T>(closingSelector));\n  };\n}\n\nclass WindowOperator<T> implements Operator<T, Observable<T>> {\n  constructor(private closingSelector: () => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source.subscribe(new WindowSubscriber(subscriber, this.closingSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowSubscriber<T> extends OuterSubscriber<T, any> {\n  private window: Subject<T>;\n  private closingNotification: Subscription;\n\n  constructor(protected destination: Subscriber<Observable<T>>,\n              private closingSelector: () => Observable<any>) {\n    super(destination);\n    this.openWindow();\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    this.openWindow(innerSub);\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, any>): void {\n    this._error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, any>): void {\n    this.openWindow(innerSub);\n  }\n\n  protected _next(value: T): void {\n    this.window.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.window.error(err);\n    this.destination.error(err);\n    this.unsubscribeClosingNotification();\n  }\n\n  protected _complete(): void {\n    this.window.complete();\n    this.destination.complete();\n    this.unsubscribeClosingNotification();\n  }\n\n  private unsubscribeClosingNotification(): void {\n    if (this.closingNotification) {\n      this.closingNotification.unsubscribe();\n    }\n  }\n\n  private openWindow(innerSub: InnerSubscriber<T, any> = null): void {\n    if (innerSub) {\n      this.remove(innerSub);\n      innerSub.unsubscribe();\n    }\n\n    const prevWindow = this.window;\n    if (prevWindow) {\n      prevWindow.complete();\n    }\n\n    const window = this.window = new Subject<T>();\n    this.destination.next(window);\n\n    const closingNotifier = tryCatch(this.closingSelector)();\n    if (closingNotifier === errorObject) {\n      const err = errorObject.e;\n      this.destination.error(err);\n      this.window.error(err);\n    } else {\n      this.add(this.closingNotification = subscribeToResult(this, closingNotifier));\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { ObservableInput, OperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function withLatestFrom<T, R>(project: (v1: T) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, T2, R>(v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): OperatorFunction<T, R> ;\nexport function withLatestFrom<T, T2>(v2: ObservableInput<T2>): OperatorFunction<T, [T, T2]>;\nexport function withLatestFrom<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): OperatorFunction<T, [T, T2, T3]>;\nexport function withLatestFrom<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): OperatorFunction<T, [T, T2, T3, T4]>;\nexport function withLatestFrom<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): OperatorFunction<T, [T, T2, T3, T4, T5]>;\nexport function withLatestFrom<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): OperatorFunction<T, [T, T2, T3, T4, T5, T6]> ;\nexport function withLatestFrom<T, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, R>;\nexport function withLatestFrom<T, R>(array: ObservableInput<any>[]): OperatorFunction<T, R>;\nexport function withLatestFrom<T, R>(array: ObservableInput<any>[], project: (...values: Array<any>) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines the source Observable with other Observables to create an Observable\n * whose values are calculated from the latest values of each, only when the\n * source emits.\n *\n * <span class=\"informal\">Whenever the source Observable emits a value, it\n * computes a formula using that value plus the latest values from other input\n * Observables, then emits the output of that formula.</span>\n *\n * ![](withLatestFrom.png)\n *\n * `withLatestFrom` combines each value from the source Observable (the\n * instance) with the latest values from the other input Observables only when\n * the source emits a value, optionally using a `project` function to determine\n * the value to be emitted on the output Observable. All input Observables must\n * emit at least one value before the output Observable will emit a value.\n *\n * ## Example\n * On every click event, emit an array with the latest timer event plus the click event\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const timer = interval(1000);\n * const result = clicks.pipe(withLatestFrom(timer));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineLatest}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Function} [project] Projection function for combining values\n * together. Receives all values in order of the Observables passed, where the\n * first parameter is a value from the source Observable. (e.g.\n * `a.pipe(withLatestFrom(b, c), map(([a1, b1, c1]) => a1 + b1 + c1))`). If this is not\n * passed, arrays will be emitted on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method withLatestFrom\n * @owner Observable\n */\nexport function withLatestFrom<T, R>(...args: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, R> {\n  return (source: Observable<T>) => {\n    let project: any;\n    if (typeof args[args.length - 1] === 'function') {\n      project = args.pop();\n    }\n    const observables = <Observable<any>[]>args;\n    return source.lift(new WithLatestFromOperator(observables, project));\n  };\n}\n\nclass WithLatestFromOperator<T, R> implements Operator<T, R> {\n  constructor(private observables: Observable<any>[],\n              private project?: (...values: any[]) => Observable<R>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WithLatestFromSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private values: any[];\n  private toRespond: number[] = [];\n\n  constructor(destination: Subscriber<R>,\n              private observables: Observable<any>[],\n              private project?: (...values: any[]) => Observable<R>) {\n    super(destination);\n    const len = observables.length;\n    this.values = new Array(len);\n\n    for (let i = 0; i < len; i++) {\n      this.toRespond.push(i);\n    }\n\n    for (let i = 0; i < len; i++) {\n      let observable = observables[i];\n      this.add(subscribeToResult<T, R>(this, observable, <any>observable, i));\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.values[outerIndex] = innerValue;\n    const toRespond = this.toRespond;\n    if (toRespond.length > 0) {\n      const found = toRespond.indexOf(outerIndex);\n      if (found !== -1) {\n        toRespond.splice(found, 1);\n      }\n    }\n  }\n\n  notifyComplete() {\n    // noop\n  }\n\n  protected _next(value: T) {\n    if (this.toRespond.length === 0) {\n      const args = [value, ...this.values];\n      if (this.project) {\n        this._tryProject(args);\n      } else {\n        this.destination.next(args);\n      }\n    }\n  }\n\n  private _tryProject(args: any[]) {\n    let result: any;\n    try {\n      result = this.project.apply(this, args);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { zip as zipStatic } from '../observable/zip';\nimport { Observable } from '../Observable';\nimport { ObservableInput, OperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, R>(project: (v1: T) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2, R>(v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): OperatorFunction<T, R> ;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2>(v2: ObservableInput<T2>): OperatorFunction<T, [T, T2]>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): OperatorFunction<T, [T, T2, T3]>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): OperatorFunction<T, [T, T2, T3, T4]>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): OperatorFunction<T, [T, T2, T3, T4, T5]>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): OperatorFunction<T, [T, T2, T3, T4, T5, T6]> ;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, R>(...observables: Array<ObservableInput<T> | ((...values: Array<T>) => R)>): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, R>(array: Array<ObservableInput<T>>): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, TOther, R>(array: Array<ObservableInput<TOther>>, project: (v1: T, ...values: Array<TOther>) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * @deprecated Deprecated in favor of static {@link zip}.\n */\nexport function zip<T, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, R> {\n  return function zipOperatorFunction(source: Observable<T>) {\n    return source.lift.call(zipStatic<R>(source, ...observables));\n  };\n}","import { ZipOperator } from '../observable/zip';\nimport { Observable } from '../Observable';\nimport { OperatorFunction, ObservableInput } from '../types';\n\nexport function zipAll<T>(): OperatorFunction<ObservableInput<T>, T[]>;\nexport function zipAll<T>(): OperatorFunction<any, T[]>;\nexport function zipAll<T, R>(project: (...values: T[]) => R): OperatorFunction<ObservableInput<T>, R>;\nexport function zipAll<R>(project: (...values: Array<any>) => R): OperatorFunction<any, R>;\n\nexport function zipAll<T, R>(project?: (...values: Array<any>) => R): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift(new ZipOperator(project));\n}\n","\n/* Operator exports */\nexport { audit } from '../internal/operators/audit';\nexport { auditTime } from '../internal/operators/auditTime';\nexport { buffer } from '../internal/operators/buffer';\nexport { bufferCount } from '../internal/operators/bufferCount';\nexport { bufferTime } from '../internal/operators/bufferTime';\nexport { bufferToggle } from '../internal/operators/bufferToggle';\nexport { bufferWhen } from '../internal/operators/bufferWhen';\nexport { catchError } from '../internal/operators/catchError';\nexport { combineAll } from '../internal/operators/combineAll';\nexport { combineLatest } from '../internal/operators/combineLatest';\nexport { concat } from '../internal/operators/concat';\nexport { concatAll } from '../internal/operators/concatAll';\nexport { concatMap } from '../internal/operators/concatMap';\nexport { concatMapTo } from '../internal/operators/concatMapTo';\nexport { count } from '../internal/operators/count';\nexport { debounce } from '../internal/operators/debounce';\nexport { debounceTime } from '../internal/operators/debounceTime';\nexport { defaultIfEmpty } from '../internal/operators/defaultIfEmpty';\nexport { delay } from '../internal/operators/delay';\nexport { delayWhen } from '../internal/operators/delayWhen';\nexport { dematerialize } from '../internal/operators/dematerialize';\nexport { distinct } from '../internal/operators/distinct';\nexport { distinctUntilChanged } from '../internal/operators/distinctUntilChanged';\nexport { distinctUntilKeyChanged } from '../internal/operators/distinctUntilKeyChanged';\nexport { elementAt } from '../internal/operators/elementAt';\nexport { endWith } from '../internal/operators/endWith';\nexport { every } from '../internal/operators/every';\nexport { exhaust } from '../internal/operators/exhaust';\nexport { exhaustMap } from '../internal/operators/exhaustMap';\nexport { expand } from '../internal/operators/expand';\nexport { filter } from '../internal/operators/filter';\nexport { finalize } from '../internal/operators/finalize';\nexport { find } from '../internal/operators/find';\nexport { findIndex } from '../internal/operators/findIndex';\nexport { first } from '../internal/operators/first';\nexport { groupBy } from '../internal/operators/groupBy';\nexport { ignoreElements } from '../internal/operators/ignoreElements';\nexport { isEmpty } from '../internal/operators/isEmpty';\nexport { last } from '../internal/operators/last';\nexport { map } from '../internal/operators/map';\nexport { mapTo } from '../internal/operators/mapTo';\nexport { materialize } from '../internal/operators/materialize';\nexport { max } from '../internal/operators/max';\nexport { merge } from '../internal/operators/merge';\nexport { mergeAll } from '../internal/operators/mergeAll';\nexport { mergeMap } from '../internal/operators/mergeMap';\nexport { mergeMap as flatMap } from '../internal/operators/mergeMap';\nexport { mergeMapTo } from '../internal/operators/mergeMapTo';\nexport { mergeScan } from '../internal/operators/mergeScan';\nexport { min } from '../internal/operators/min';\nexport { multicast } from '../internal/operators/multicast';\nexport { observeOn } from '../internal/operators/observeOn';\nexport { onErrorResumeNext } from '../internal/operators/onErrorResumeNext';\nexport { pairwise } from '../internal/operators/pairwise';\nexport { partition } from '../internal/operators/partition';\nexport { pluck } from '../internal/operators/pluck';\nexport { publish } from '../internal/operators/publish';\nexport { publishBehavior } from '../internal/operators/publishBehavior';\nexport { publishLast } from '../internal/operators/publishLast';\nexport { publishReplay } from '../internal/operators/publishReplay';\nexport { race } from '../internal/operators/race';\nexport { reduce } from '../internal/operators/reduce';\nexport { repeat } from '../internal/operators/repeat';\nexport { repeatWhen } from '../internal/operators/repeatWhen';\nexport { retry } from '../internal/operators/retry';\nexport { retryWhen } from '../internal/operators/retryWhen';\nexport { refCount } from '../internal/operators/refCount';\nexport { sample } from '../internal/operators/sample';\nexport { sampleTime } from '../internal/operators/sampleTime';\nexport { scan } from '../internal/operators/scan';\nexport { sequenceEqual } from '../internal/operators/sequenceEqual';\nexport { share } from '../internal/operators/share';\nexport { shareReplay } from '../internal/operators/shareReplay';\nexport { single } from '../internal/operators/single';\nexport { skip } from '../internal/operators/skip';\nexport { skipLast } from '../internal/operators/skipLast';\nexport { skipUntil } from '../internal/operators/skipUntil';\nexport { skipWhile } from '../internal/operators/skipWhile';\nexport { startWith } from '../internal/operators/startWith';\nexport { subscribeOn } from '../internal/operators/subscribeOn';\nexport { switchAll } from '../internal/operators/switchAll';\nexport { switchMap } from '../internal/operators/switchMap';\nexport { switchMapTo } from '../internal/operators/switchMapTo';\nexport { take } from '../internal/operators/take';\nexport { takeLast } from '../internal/operators/takeLast';\nexport { takeUntil } from '../internal/operators/takeUntil';\nexport { takeWhile } from '../internal/operators/takeWhile';\nexport { tap } from '../internal/operators/tap';\nexport { throttle } from '../internal/operators/throttle';\nexport { throttleTime } from '../internal/operators/throttleTime';\nexport { throwIfEmpty } from '../internal/operators/throwIfEmpty';\nexport { timeInterval } from '../internal/operators/timeInterval';\nexport { timeout } from '../internal/operators/timeout';\nexport { timeoutWith } from '../internal/operators/timeoutWith';\nexport { timestamp } from '../internal/operators/timestamp';\nexport { toArray } from '../internal/operators/toArray';\nexport { window } from '../internal/operators/window';\nexport { windowCount } from '../internal/operators/windowCount';\nexport { windowTime } from '../internal/operators/windowTime';\nexport { windowToggle } from '../internal/operators/windowToggle';\nexport { windowWhen } from '../internal/operators/windowWhen';\nexport { withLatestFrom } from '../internal/operators/withLatestFrom';\nexport { zip } from '../internal/operators/zip';\nexport { zipAll } from '../internal/operators/zipAll';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {isBrowser as ɵa} from './lib/root';","import { IDS } from './types';\n\nexport interface StoreSnapshotAction {\n  type: string | null;\n  entityIds: IDS[] | null;\n  skip: boolean;\n}\n\nexport const currentAction: StoreSnapshotAction = {\n  type: null,\n  entityIds: null,\n  skip: false,\n};\n\nlet customActionActive = false;\n\nexport function resetCustomAction() {\n  customActionActive = false;\n}\n\n// public API for custom actions. Custom action always wins\nexport function logAction(type: string, entityIds?) {\n  setAction(type, entityIds);\n  customActionActive = true;\n}\n\nexport function setAction(type: string, entityIds?) {\n  if (customActionActive === false) {\n    currentAction.type = type;\n    currentAction.entityIds = entityIds;\n  }\n}\n\nexport function setSkipAction(skip = true) {\n  currentAction.skip = skip;\n}\n\nexport function action(action: string, entityIds?) {\n  return function (target: any, propertyKey: string, descriptor: PropertyDescriptor) {\n    const originalMethod = descriptor.value;\n    descriptor.value = function (...args) {\n      logAction(action, entityIds);\n      return originalMethod.apply(this, args);\n    };\n\n    return descriptor;\n  };\n}\n","import { EntityState, ID } from './index';\n\n// @internal\nexport function hasEntity<E>(entities: EntityState<E>, id: ID) {\n  return entities.hasOwnProperty(id);\n}\n","import { EntityState, PreAddEntity } from './types';\nimport { hasEntity } from './hasEntity';\n\nexport type AddEntitiesParams<State, Entity> = {\n  state: State;\n  entities: Entity[];\n  idKey: string;\n  options: AddEntitiesOptions;\n  preAddEntity: PreAddEntity<Entity>;\n};\n\nexport type AddEntitiesOptions = { prepend?: boolean; loading?: boolean };\n\n// @internal\nexport function addEntities<S extends EntityState<E>, E>({ state, entities, idKey, options = {}, preAddEntity }: AddEntitiesParams<S, E>) {\n  let newEntities = {};\n  let newIds = [];\n  let hasNewEntities = false;\n\n  for (const entity of entities) {\n    if (hasEntity(state.entities, entity[idKey]) === false) {\n      // evaluate the middleware first to support dynamic ids\n      const current = preAddEntity(entity);\n      const entityId = current[idKey];\n      newEntities[entityId] = current;\n      if (options.prepend) newIds.unshift(entityId);\n      else newIds.push(entityId);\n\n      hasNewEntities = true;\n    }\n  }\n\n  return hasNewEntities\n    ? {\n        newState: {\n          ...state,\n          entities: {\n            ...state.entities,\n            ...newEntities\n          },\n          ids: options.prepend ? [...newIds, ...state.ids] : [...state.ids, ...newIds]\n        },\n        newIds\n      }\n    : null;\n}\n","// @internal\nexport function isNil(v) {\n  return v === null || v === undefined;\n}\n","import { isNil } from './isNil';\n\n// @internal\nexport function coerceArray<T>(value: T | T[]): T[] {\n  if (isNil(value)) {\n    return [];\n  }\n  return Array.isArray(value) ? value : [value];\n}\n","export const DEFAULT_ID_KEY = 'id';\n","export enum EntityActions {\n  Set = 'Set',\n  Add = 'Add',\n  Update = 'Update',\n  Remove = 'Remove',\n}\n\nexport interface EntityAction<IDType> {\n  type: EntityActions;\n  ids: IDType[];\n}\n","export const isBrowser = typeof window !== 'undefined';\nexport const isNotBrowser = !isBrowser;\n// export const isNativeScript = typeof global !== 'undefined' && (<any>global).__runtimeVersion !== 'undefined'; TODO is this used?\nexport const hasLocalStorage = () => {\n  try {\n    return typeof localStorage !== 'undefined';\n  } catch {\n    return false;\n  }\n};\nexport const hasSessionStorage = () => {\n  try {\n    return typeof sessionStorage !== 'undefined';\n  } catch {\n    return false;\n  }\n};\n","import { isBrowser } from './root';\n\nexport let __DEV__ = true;\n\nexport function enableAkitaProdMode() {\n  __DEV__ = false;\n  if (isBrowser) {\n    delete (window as any).$$stores;\n    delete (window as any).$$queries;\n  }\n}\n\n// @internal\nexport function isDev() {\n  return __DEV__;\n}\n","// @internal\nexport function isObject(value: any) {\n  const type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n","// @internal\nexport function isArray<T>(value: any): value is T[] {\n  return Array.isArray(value);\n}\n","import { ID, IDS } from './types';\nimport { isNil } from './isNil';\nimport { isObject } from './isObject';\nimport { isArray } from './isArray';\n\nexport type SetActiveOptions = { prev?: boolean; next?: boolean; wrap?: boolean };\n\n// @internal\nexport function getActiveEntities(idOrOptions: IDS | SetActiveOptions | null, ids: ID[], currentActive: IDS | null) {\n  let result;\n\n  if (isArray(idOrOptions)) {\n    result = idOrOptions;\n  } else {\n    if (isObject(idOrOptions)) {\n      if (isNil(currentActive)) return;\n      (idOrOptions as SetActiveOptions) = Object.assign({ wrap: true }, idOrOptions);\n      const currentIdIndex = ids.indexOf(currentActive as ID);\n      if ((idOrOptions as SetActiveOptions).prev) {\n        const isFirst = currentIdIndex === 0;\n        if (isFirst && !(idOrOptions as SetActiveOptions).wrap) return;\n        result = isFirst ? ids[ids.length - 1] : (ids[currentIdIndex - 1] as any);\n      } else if ((idOrOptions as SetActiveOptions).next) {\n        const isLast = ids.length === currentIdIndex + 1;\n        if (isLast && !(idOrOptions as SetActiveOptions).wrap) return;\n        result = isLast ? ids[0] : (ids[currentIdIndex + 1] as any);\n      }\n    } else {\n      if (idOrOptions === currentActive) return;\n      result = idOrOptions as ID;\n    }\n  }\n\n  return result;\n}\n","import { EntityState } from './index';\n\n// @internal\nexport const getInitialEntitiesState = () =>\n  ({\n    entities: {},\n    ids: [],\n    loading: true,\n    error: null\n  } as EntityState);\n","import { isNil } from './isNil';\n\n// @internal\nexport function isDefined(val: any) {\n  return isNil(val) === false;\n}\n","import { isArray } from './isArray';\n\n// @internal\nexport function isEmpty<T>(arr: T) {\n  if (isArray(arr)) {\n    return arr.length === 0;\n  }\n  return false;\n}\n","// @internal\nexport function isFunction(value: any): value is Function {\n  return typeof value === 'function';\n}\n","// @internal\nexport function isUndefined(value: any): value is undefined {\n  return value === undefined;\n}\n","import { ActiveState, EntityState, ID, IDS, MultiActiveState } from './types';\nimport { hasEntity } from './hasEntity';\nimport { isArray } from './isArray';\n\n// @internal\nexport function hasActiveState<E>(state: EntityState<E>): state is EntityState<E> & (ActiveState | MultiActiveState) {\n  return state.hasOwnProperty('active');\n}\n\n// @internal\nexport function isMultiActiveState(active: IDS): active is ID[] {\n  return isArray(active);\n}\n\n// @internal\nexport function resolveActiveEntity<E>({ active, ids, entities }: EntityState<E> & (ActiveState | MultiActiveState)) {\n  if (isMultiActiveState(active)) {\n    return getExitingActives(active, ids);\n  }\n\n  if (hasEntity(entities, active) === false) {\n    return null;\n  }\n\n  return active;\n}\n\n// @internal\nexport function getExitingActives(currentActivesIds: ID[], newIds: ID[]) {\n  const filtered = currentActivesIds.filter(id => newIds.indexOf(id) > -1);\n  /** Return the same reference if nothing has changed */\n  if (filtered.length === currentActivesIds.length) {\n    return currentActivesIds;\n  }\n\n  return filtered;\n}\n","import { EntityState, ID, StateWithActive } from './types';\nimport { isNil } from './isNil';\nimport { hasActiveState, isMultiActiveState, resolveActiveEntity } from './activeState';\n\nexport type RemoveEntitiesParams<State, Entity> = {\n  state: StateWithActive<State>;\n  ids: any[];\n};\n\n// @internal\nexport function removeEntities<S extends EntityState<E>, E>({ state, ids }: RemoveEntitiesParams<S, E>): S {\n  if (isNil(ids)) return removeAllEntities(state);\n  const entities = state.entities;\n  let newEntities = {};\n\n  for (const id of state.ids) {\n    if (ids.includes(id) === false) {\n      newEntities[id] = entities[id];\n    }\n  }\n\n  const newState = {\n    ...state,\n    entities: newEntities,\n    ids: state.ids.filter(current => ids.includes(current) === false)\n  };\n\n  if (hasActiveState(state)) {\n    newState.active = resolveActiveEntity(newState);\n  }\n\n  return newState;\n}\n\n// @internal\nexport function removeAllEntities<S>(state: StateWithActive<S>): S {\n  return {\n    ...state,\n    entities: {},\n    ids: [],\n    active: isMultiActiveState(state.active) ? [] : null\n  };\n}\n","import { PreAddEntity } from './types';\n\n// @internal\nexport function toEntitiesObject<E>(entities: E[], idKey: string, preAddEntity: PreAddEntity<E>) {\n  const acc = {\n    entities: {},\n    ids: []\n  };\n\n  for (const entity of entities) {\n    // evaluate the middleware first to support dynamic ids\n    const current = preAddEntity(entity);\n    acc.entities[current[idKey]] = current;\n    acc.ids.push(current[idKey]);\n  }\n\n  return acc;\n}\n","import { Entities, EntityState, HashMap, ID, PreAddEntity } from './types';\nimport { toEntitiesObject } from './toEntitiesObject';\nimport { isArray } from './isArray';\nimport { hasActiveState, resolveActiveEntity } from './activeState';\n\nexport type SetEntities<Entity> = Entity[] | Entities<Entity> | HashMap<Entity>;\n\nexport type SetEntitiesParams<State, Entity> = {\n  state: State;\n  entities: SetEntities<Entity>;\n  idKey: string;\n  preAddEntity: PreAddEntity<Entity>;\n  isNativePreAdd?: boolean;\n};\n\n// @internal\nexport function isEntityState<Entity>(state): state is Entities<Entity> {\n  return state.entities && state.ids;\n}\n\n// @internal\nfunction applyMiddleware<E>(entities: HashMap<E>, preAddEntity: PreAddEntity<E>) {\n  let mapped = {};\n  for (const id of Object.keys(entities)) {\n    mapped[id] = preAddEntity(entities[id]);\n  }\n\n  return mapped;\n}\n\n// @internal\nexport function setEntities<S extends EntityState<E>, E>({ state, entities, idKey, preAddEntity, isNativePreAdd }: SetEntitiesParams<S, E>): S {\n  let newEntities: HashMap<E>;\n  let newIds: ID[];\n\n  if (isArray(entities)) {\n    const resolve = toEntitiesObject(entities, idKey, preAddEntity);\n    newEntities = resolve.entities;\n    newIds = resolve.ids;\n  } else if (isEntityState(entities)) {\n    newEntities = isNativePreAdd ? entities.entities : applyMiddleware(entities.entities, preAddEntity);\n    newIds = entities.ids;\n  } else {\n    // it's an object\n    newEntities = isNativePreAdd ? entities : applyMiddleware(entities, preAddEntity);\n    newIds = Object.keys(newEntities).map(id => (isNaN(id as any) ? id : Number(id)));\n  }\n\n  const newState = {\n    ...state,\n    entities: newEntities,\n    ids: newIds,\n    loading: false\n  };\n\n  if (hasActiveState(state)) {\n    (newState as any).active = resolveActiveEntity(newState as any);\n  }\n\n  return newState;\n}\n","export interface AkitaConfig {\n  /**\n   * Whether to allowed the reset() stores functionality\n   */\n  resettable?: boolean;\n  ttl?: number;\n  producerFn?: (state: any, fn: any) => any;\n}\n\nlet CONFIG: AkitaConfig = {\n  resettable: false,\n  ttl: null,\n  producerFn: undefined\n};\n\nexport function akitaConfig(config: AkitaConfig) {\n  CONFIG = { ...CONFIG, ...config };\n}\n\n// @internal\nexport function getAkitaConfig() {\n  return CONFIG;\n}\n\nexport function getGlobalProducerFn() {\n  return CONFIG.producerFn;\n}\n","// @internal\nexport function deepFreeze(o) {\n  Object.freeze(o);\n\n  const oIsFunction = typeof o === 'function';\n  const hasOwnProp = Object.prototype.hasOwnProperty;\n\n  Object.getOwnPropertyNames(o).forEach(function(prop) {\n    if (\n      hasOwnProp.call(o, prop) &&\n      (oIsFunction ? prop !== 'caller' && prop !== 'callee' && prop !== 'arguments' : true) &&\n      o[prop] !== null &&\n      (typeof o[prop] === 'object' || typeof o[prop] === 'function') &&\n      !Object.isFrozen(o[prop])\n    ) {\n      deepFreeze(o[prop]);\n    }\n  });\n\n  return o;\n}\n","import { ReplaySubject, Subject } from 'rxjs';\nimport { StoreSnapshotAction } from './actions';\n\n// @internal\nexport const $$deleteStore = new Subject<string>();\n// @internal\nexport const $$addStore = new ReplaySubject<string>(50, 5000);\n// @internal\nexport const $$updateStore = new Subject<{ storeName: string; action: StoreSnapshotAction }>();\n\n// @internal\nexport function dispatchDeleted(storeName: string) {\n  $$deleteStore.next(storeName);\n}\n\n// @internal\nexport function dispatchAdded(storeName: string) {\n  $$addStore.next(storeName);\n}\n\n// @internal\nexport function dispatchUpdate(storeName: string, action: StoreSnapshotAction) {\n  $$updateStore.next({ storeName, action });\n}\n","// @internal\nexport class AkitaError extends Error {\n  constructor(message: string) {\n    super(message);\n  }\n}\n\n// @internal\nexport function assertStoreHasName(name: string, className: string) {\n  if (!name) {\n    console.error(`@StoreConfig({ name }) is missing in ${className}`);\n  }\n}\n","// @internal\nexport function toBoolean(value: any): boolean {\n  return value != null && `${value}` !== 'false';\n}\n","import { toBoolean } from './toBoolean';\n\n// @internal\nexport function isPlainObject(value) {\n  return toBoolean(value) && value.constructor.name === 'Object';\n}\n","import { AkitaConfig } from './config';\n\nexport type StoreConfigOptions = {\n  name: string;\n  resettable?: AkitaConfig['resettable'];\n  cache?: { ttl: number };\n  deepFreezeFn?: (o: any) => any;\n  idKey?: string;\n  producerFn?: AkitaConfig['producerFn'];\n};\n\nexport type UpdatableStoreConfigOptions = {\n  cache?: { ttl: number };\n};\n\nexport const configKey = 'akitaConfig';\n\nexport function StoreConfig(metadata: StoreConfigOptions) {\n  return function(constructor: Function) {\n    constructor[configKey] = { idKey: 'id' };\n\n    for (let i = 0, keys = Object.keys(metadata); i < keys.length; i++) {\n      const key = keys[i];\n      /* name is preserved read only key */\n      if (key === 'name') {\n        constructor[configKey]['storeName'] = metadata[key];\n      } else {\n        constructor[configKey][key] = metadata[key];\n      }\n    }\n  };\n}\n","import { Query } from './query';\nimport { isBrowser } from './root';\nimport { Store } from './store';\n\n// @internal\nexport const __stores__: { [storeName: string]: Store<any> } = {};\n\n// @internal\nexport const __queries__: { [storeName: string]: Query<any> } = {};\n\nif (isBrowser) {\n  (window as any).$$stores = __stores__;\n  (window as any).$$queries = __queries__;\n}\n","import { BehaviorSubject, Observable, of, Subject } from 'rxjs';\nimport { logAction } from './actions';\nimport { tap } from 'rxjs/operators';\n\n// @internal\nconst transactionFinished = new Subject();\n\n// @internal\nconst transactionInProcess = new BehaviorSubject(false);\n\nexport type TransactionManager = {\n  activeTransactions: number;\n  batchTransaction: Subject<boolean> | null;\n};\n\n// @internal\nexport const transactionManager: TransactionManager = {\n  activeTransactions: 0,\n  batchTransaction: null\n};\n\n// @internal\nexport function startBatch() {\n  if (!isTransactionInProcess()) {\n    transactionManager.batchTransaction = new Subject();\n  }\n  transactionManager.activeTransactions++;\n  transactionInProcess.next(true);\n}\n\n// @internal\nexport function endBatch() {\n  if (--transactionManager.activeTransactions === 0) {\n    transactionManager.batchTransaction.next(true);\n    transactionManager.batchTransaction.complete();\n    transactionInProcess.next(false);\n    transactionFinished.next(true);\n  }\n}\n\n// @internal\nexport function isTransactionInProcess() {\n  return transactionManager.activeTransactions > 0;\n}\n\n// @internal\nexport function commit(): Observable<boolean> {\n  return transactionManager.batchTransaction ? transactionManager.batchTransaction.asObservable() : of(true);\n}\n\n/**\n *  A logical transaction.\n *  Use this transaction to optimize the dispatch of all the stores.\n *  The following code will update the store, BUT  emits only once\n *\n *  @example\n *  applyTransaction(() => {\n *    this.todosStore.add(new Todo(1, title));\n *    this.todosStore.add(new Todo(2, title));\n *  });\n *\n */\nexport function applyTransaction<T>(action: () => T, thisArg = undefined): T {\n  startBatch();\n  try {\n    return action.apply(thisArg);\n  } finally {\n    logAction('@Transaction');\n    endBatch();\n  }\n}\n\n/**\n *  A logical transaction.\n *  Use this transaction to optimize the dispatch of all the stores.\n *\n *  The following code will update the store, BUT  emits only once.\n *\n *  @example\n *  @transaction\n *  addTodos() {\n *    this.todosStore.add(new Todo(1, title));\n *    this.todosStore.add(new Todo(2, title));\n *  }\n *\n *\n */\nexport function transaction() {\n  return function(target: any, propertyKey: string, descriptor: PropertyDescriptor) {\n    const originalMethod = descriptor.value;\n\n    descriptor.value = function(...args) {\n      return applyTransaction(() => {\n        return originalMethod.apply(this, args);\n      }, this);\n    };\n\n    return descriptor;\n  };\n}\n\n/**\n *\n * RxJS custom operator that wraps the callback inside transaction\n *\n * @example\n *\n * return http.get().pipe(\n *    withTransaction(response > {\n *      store.setActive(1);\n *      store.update();\n *      store.updateEntity(1, {});\n *    })\n * )\n *\n */\nexport function withTransaction<T>(next: (value: T) => void) {\n  return function(source: Observable<T>): Observable<T> {\n    return source.pipe(tap(value => applyTransaction(() => next(value))));\n  };\n}\n","import { BehaviorSubject, Observable } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { currentAction, resetCustomAction, setAction, StoreSnapshotAction } from './actions';\nimport { getAkitaConfig, getGlobalProducerFn } from './config';\nimport { deepFreeze } from './deepFreeze';\nimport { dispatchAdded, dispatchDeleted, dispatchUpdate } from './dispatchers';\nimport { __DEV__, isDev } from './env';\nimport { assertStoreHasName } from './errors';\nimport { isDefined } from './isDefined';\nimport { isFunction } from './isFunction';\nimport { isPlainObject } from './isPlainObject';\nimport { isBrowser } from './root';\nimport { configKey, StoreConfigOptions, UpdatableStoreConfigOptions } from './storeConfig';\nimport { __stores__ } from './stores';\nimport { commit, isTransactionInProcess } from './transaction';\nimport { StoreCache, UpdateStateCallback } from './types';\n\ninterface StoreSnapshot<S> {\n  state: S;\n  action?: StoreSnapshotAction;\n}\n\n/**\n *\n * Store for managing any type of data\n *\n * @example\n *\n * export interface SessionState {\n *   token: string;\n *   userDetails: UserDetails\n * }\n *\n * export function createInitialState(): SessionState {\n *  return {\n *    token: '',\n *    userDetails: null\n *  };\n * }\n *\n * @StoreConfig({ name: 'session' })\n * export class SessionStore extends Store<SessionState> {\n *   constructor() {\n *    super(createInitialState());\n *   }\n * }\n */\nexport class Store<S = any> {\n  private store: BehaviorSubject<Readonly<StoreSnapshot<S>>>;\n  private storeValue: S;\n  private inTransaction = false;\n  private _initialState: S;\n  protected cache: StoreCache = {\n    active: new BehaviorSubject<boolean>(false),\n    ttl: null,\n  };\n\n  constructor(initialState: Partial<S>, protected options: Partial<StoreConfigOptions> = {}) {\n    this.onInit(initialState as S);\n  }\n\n  /**\n   *  Set the loading state\n   *\n   *  @example\n   *\n   *  store.setLoading(true)\n   *\n   */\n  setLoading(loading = false) {\n    if (loading !== (this._value() as S & { loading: boolean }).loading) {\n      isDev() && setAction('Set Loading');\n      this._setState((state) => ({ ...state, loading } as S & { loading: boolean }));\n    }\n  }\n\n  /**\n   *\n   * Set whether the data is cached\n   *\n   * @example\n   *\n   * store.setHasCache(true)\n   * store.setHasCache(false)\n   * store.setHasCache(true, { restartTTL: true })\n   *\n   */\n  setHasCache(hasCache: boolean, options: { restartTTL: boolean } = { restartTTL: false }) {\n    if (hasCache !== this.cache.active.value) {\n      this.cache.active.next(hasCache);\n    }\n\n    if (options.restartTTL) {\n      const ttlConfig = this.getCacheTTL();\n      if (ttlConfig) {\n        if (this.cache.ttl !== null) {\n          clearTimeout(this.cache.ttl);\n        }\n        this.cache.ttl = <any>setTimeout(() => this.setHasCache(false), ttlConfig);\n      }\n    }\n  }\n\n  /**\n   *\n   * Sometimes we need to access the store value from a store\n   *\n   * @example middleware\n   *\n   */\n  getValue() {\n    return this.storeValue;\n  }\n\n  /**\n   *  Set the error state\n   *\n   *  @example\n   *\n   *  store.setError({text: 'unable to load data' })\n   *\n   */\n  setError<T>(error: T) {\n    if (error !== (this._value() as S & { error: any }).error) {\n      isDev() && setAction('Set Error');\n      this._setState((state) => ({ ...state, error } as S & { error: any }));\n    }\n  }\n\n  // @internal\n  _select<R>(project: (store: S) => R): Observable<R> {\n    return this.store.asObservable().pipe(\n      map((snapshot) => project(snapshot.state)),\n      distinctUntilChanged()\n    );\n  }\n\n  // @internal\n  _value(): S {\n    return this.storeValue;\n  }\n\n  // @internal\n  _cache(): BehaviorSubject<boolean> {\n    return this.cache.active;\n  }\n\n  // @internal\n  get config(): StoreConfigOptions {\n    return this.constructor[configKey] || {};\n  }\n\n  // @internal\n  get storeName() {\n    return (this.config as StoreConfigOptions & { storeName: string }).storeName || (this.options as StoreConfigOptions & { storeName: string }).storeName || this.options.name;\n  }\n\n  // @internal\n  get deepFreeze() {\n    return this.config.deepFreezeFn || this.options.deepFreezeFn || deepFreeze;\n  }\n\n  // @internal\n  get cacheConfig() {\n    return this.config.cache || this.options.cache;\n  }\n\n  get _producerFn() {\n    return this.config.producerFn || this.options.producerFn || getGlobalProducerFn();\n  }\n\n  // @internal\n  get resettable() {\n    return isDefined(this.config.resettable) ? this.config.resettable : this.options.resettable;\n  }\n\n  // @internal\n  _setState(newState: ((state: Readonly<S>) => S) | S, _dispatchAction = true) {\n    if (isFunction(newState)) {\n      const _newState = newState(this._value());\n      this.storeValue = __DEV__ ? this.deepFreeze(_newState) : _newState;\n    } else {\n      this.storeValue = newState;\n    }\n\n    if (!this.store) {\n      this.store = new BehaviorSubject({ state: this.storeValue });\n\n      if (isDev()) {\n        this.store.subscribe(({ action }) => {\n          if (action) {\n            dispatchUpdate(this.storeName, action);\n          }\n        });\n      }\n\n      return;\n    }\n\n    if (isTransactionInProcess()) {\n      this.handleTransaction();\n      return;\n    }\n\n    this.dispatch(this.storeValue, _dispatchAction);\n  }\n\n  /**\n   *\n   * Reset the current store back to the initial value\n   *\n   * @example\n   *\n   * store.reset()\n   *\n   */\n  reset() {\n    if (this.isResettable()) {\n      isDev() && setAction('Reset');\n      this._setState(() => Object.assign({}, this._initialState));\n      this.setHasCache(false);\n    } else {\n      isDev() && console.warn(`You need to enable the reset functionality`);\n    }\n  }\n\n  /**\n   *\n   * Update the store's value\n   *\n   * @example\n   *\n   * this.store.update(state => {\n   *   return {...}\n   * })\n   */\n  update(stateCallback: UpdateStateCallback<S>);\n  /**\n   *\n   * @example\n   *\n   *  this.store.update({ token: token })\n   */\n  update(state: Partial<S>);\n  update(stateOrCallback: Partial<S> | UpdateStateCallback<S>) {\n    isDev() && setAction('Update');\n\n    let newState;\n    const currentState = this._value();\n    if (isFunction(stateOrCallback)) {\n      newState = isFunction(this._producerFn) ? this._producerFn(currentState, stateOrCallback) : stateOrCallback(currentState);\n    } else {\n      newState = stateOrCallback;\n    }\n\n    const withHook = this.akitaPreUpdate(currentState, { ...currentState, ...newState } as S);\n    const resolved = isPlainObject(currentState) ? withHook : new (currentState as any).constructor(withHook);\n    this._setState(resolved);\n  }\n\n  updateStoreConfig(newOptions: UpdatableStoreConfigOptions) {\n    this.options = { ...this.options, ...newOptions };\n  }\n\n  // @internal\n  akitaPreUpdate(_: Readonly<S>, nextState: Readonly<S>): S {\n    return nextState;\n  }\n\n  ngOnDestroy() {\n    this.destroy();\n  }\n\n  /**\n   *\n   * Destroy the store\n   *\n   * @example\n   *\n   * store.destroy()\n   *\n   */\n  destroy() {\n    const hmrEnabled = isBrowser ? (window as any).hmrEnabled : false;\n    if (!hmrEnabled && this === __stores__[this.storeName]) {\n      delete __stores__[this.storeName];\n      dispatchDeleted(this.storeName);\n      this.setHasCache(false);\n      this.cache.active.complete();\n      this.store.complete();\n    }\n  }\n\n  private onInit(initialState: S) {\n    __stores__[this.storeName] = this;\n    this._setState(() => initialState);\n    dispatchAdded(this.storeName);\n    if (this.isResettable()) {\n      this._initialState = initialState;\n    }\n    isDev() && assertStoreHasName(this.storeName, this.constructor.name);\n  }\n\n  private dispatch(state: S, _dispatchAction = true) {\n    let action: StoreSnapshotAction | undefined = undefined;\n\n    if (_dispatchAction) {\n      action = currentAction;\n      resetCustomAction();\n    }\n\n    this.store.next({ state, action });\n  }\n\n  private watchTransaction() {\n    commit().subscribe(() => {\n      this.inTransaction = false;\n      this.dispatch(this._value());\n    });\n  }\n\n  private isResettable() {\n    if (this.resettable === false) {\n      return false;\n    }\n    return this.resettable || getAkitaConfig().resettable;\n  }\n\n  private handleTransaction() {\n    if (!this.inTransaction) {\n      this.watchTransaction();\n      this.inTransaction = true;\n    }\n  }\n\n  private getCacheTTL() {\n    return (this.cacheConfig && this.cacheConfig.ttl) || getAkitaConfig().ttl;\n  }\n}\n","import { Subject } from 'rxjs';\nimport { EntityState, ID, PreUpdateEntity, UpdateStateCallback } from './types';\nimport { isFunction } from './isFunction';\nimport { hasEntity } from './hasEntity';\nimport { isPlainObject } from './isPlainObject';\n\nexport type UpdateEntitiesParams<State, Entity> = {\n  state: State;\n  ids: any[];\n  idKey: string;\n  newStateOrFn: UpdateStateCallback<Entity> | Partial<Entity> | Partial<State>;\n  preUpdateEntity: PreUpdateEntity<Entity>;\n  producerFn;\n  onEntityIdChanges: (oldId: any, newId: any) => void;\n};\n\n// @internal\nexport function updateEntities<S extends EntityState<E>, E>({ state, ids, idKey, newStateOrFn, preUpdateEntity, producerFn, onEntityIdChanges }: UpdateEntitiesParams<S, E>) {\n  const updatedEntities = {};\n\n  let isUpdatingIdKey = false;\n  let idToUpdate: ID;\n\n  for (const id of ids) {\n    // if the entity doesn't exist don't do anything\n    if (hasEntity(state.entities, id) === false) {\n      continue;\n    }\n\n    const oldEntity = state.entities[id];\n    let newState;\n    if (isFunction(newStateOrFn)) {\n      newState = isFunction(producerFn) ? producerFn(oldEntity, newStateOrFn) : newStateOrFn(oldEntity);\n    } else {\n      newState = newStateOrFn;\n    }\n\n    const isIdChanged = newState.hasOwnProperty(idKey) && newState[idKey] !== oldEntity[idKey];\n    let newEntity: E;\n    idToUpdate = id;\n\n    if (isIdChanged) {\n      isUpdatingIdKey = true;\n      idToUpdate = newState[idKey];\n    }\n\n    const merged = {\n      ...oldEntity,\n      ...newState,\n    };\n\n    if (isPlainObject(oldEntity)) {\n      newEntity = merged;\n    } else {\n      /**\n       * In case that new state is class of it's own, there's\n       * a possibility that it will be different than the old\n       * class.\n       * For example, Old state is an instance of animal class\n       * and new state is instance of person class.\n       * To avoid run over new person class with the old animal\n       * class we check if the new state is a class of it's own.\n       * If so, use it. Otherwise, use the old state class\n       */\n      if (isPlainObject(newState)) {\n        newEntity = new (oldEntity as any).constructor(merged);\n      } else {\n        newEntity = new (newState as any).constructor(merged);\n      }\n    }\n\n    updatedEntities[idToUpdate] = preUpdateEntity(oldEntity, newEntity);\n  }\n\n  let updatedIds = state.ids;\n  let stateEntities = state.entities;\n\n  if (isUpdatingIdKey) {\n    const [id] = ids;\n    const { [id]: deletedEntity, ...rest } = state.entities;\n    stateEntities = rest;\n    updatedIds = state.ids.map((current) => (current === id ? idToUpdate : current));\n    onEntityIdChanges(id, idToUpdate);\n  }\n\n  return {\n    ...state,\n    entities: {\n      ...stateEntities,\n      ...updatedEntities,\n    },\n    ids: updatedIds,\n  };\n}\n","import { Subject } from 'rxjs';\nimport { logAction, setAction } from './actions';\nimport { addEntities, AddEntitiesOptions } from './addEntities';\nimport { coerceArray } from './coerceArray';\nimport { DEFAULT_ID_KEY } from './defaultIDKey';\nimport { EntityAction, EntityActions } from './entityActions';\nimport { isDev } from './env';\nimport { getActiveEntities, SetActiveOptions } from './getActiveEntities';\nimport { getInitialEntitiesState } from './getInitialEntitiesState';\nimport { hasEntity } from './hasEntity';\nimport { isDefined } from './isDefined';\nimport { isEmpty } from './isEmpty';\nimport { isFunction } from './isFunction';\nimport { isNil } from './isNil';\nimport { isUndefined } from './isUndefined';\nimport { removeEntities } from './removeEntities';\nimport { SetEntities, setEntities } from './setEntities';\nimport { Store } from './store';\nimport { StoreConfigOptions } from './storeConfig';\nimport { transaction } from './transaction';\nimport {\n  Constructor,\n  CreateStateCallback,\n  EntityState,\n  EntityUICreateFn,\n  getEntityType,\n  getIDType,\n  IDS,\n  OrArray,\n  StateWithActive,\n  UpdateEntityPredicate,\n  UpdateStateCallback,\n  UpsertStateCallback,\n} from './types';\nimport { updateEntities } from './updateEntities';\n\n/**\n *\n * Store for managing a collection of entities\n *\n * @example\n *\n * export interface WidgetsState extends EntityState<Widget> { }\n *\n * @StoreConfig({ name: 'widgets' })\n *  export class WidgetsStore extends EntityStore<WidgetsState> {\n *   constructor() {\n *     super();\n *   }\n * }\n *\n *\n */\nexport class EntityStore<S extends EntityState = any, EntityType = getEntityType<S>, IDType = getIDType<S>> extends Store<S> {\n  ui: EntityUIStore<any, EntityType>;\n  private entityActions = new Subject<EntityAction<IDType>>();\n  private entityIdChanges = new Subject<{ newId: IDType; oldId: IDType; pending: boolean }>();\n\n  constructor(initialState: Partial<S> = {}, protected options: Partial<StoreConfigOptions> = {}) {\n    super({ ...getInitialEntitiesState(), ...initialState }, options);\n  }\n\n  // @internal\n  get selectEntityAction$() {\n    return this.entityActions.asObservable();\n  }\n\n  // @internal\n  get selectEntityIdChanges$() {\n    return this.entityIdChanges.asObservable();\n  }\n\n  // @internal\n  get idKey() {\n    return (this.config as StoreConfigOptions).idKey || this.options.idKey || DEFAULT_ID_KEY;\n  }\n\n  /**\n   *\n   * Replace current collection with provided collection\n   *\n   * @example\n   *\n   * this.store.set([Entity, Entity])\n   * this.store.set({ids: [], entities: {}})\n   * this.store.set({ 1: {}, 2: {}})\n   *\n   */\n  set(entities: SetEntities<EntityType>, options: { activeId?: IDType | null } = {}) {\n    if (isNil(entities)) return;\n\n    isDev() && setAction('Set Entity');\n\n    const isNativePreAdd = this.akitaPreAddEntity === EntityStore.prototype.akitaPreAddEntity;\n    this.setHasCache(true, { restartTTL: true });\n\n    this._setState((state) => {\n      const newState = setEntities({\n        state,\n        entities,\n        idKey: this.idKey,\n        preAddEntity: this.akitaPreAddEntity,\n        isNativePreAdd,\n      });\n\n      if (isUndefined(options.activeId) === false) {\n        (newState as any).active = options.activeId;\n      }\n\n      return newState;\n    });\n\n    if (this.hasInitialUIState()) {\n      this.handleUICreation();\n    }\n\n    this.entityActions.next({ type: EntityActions.Set, ids: this.ids });\n  }\n\n  /**\n   * Add entities\n   *\n   * @example\n   *\n   * this.store.add([Entity, Entity])\n   * this.store.add(Entity)\n   * this.store.add(Entity, { prepend: true })\n   *\n   * this.store.add(Entity, { loading: false })\n   */\n  add(entities: OrArray<EntityType>, options: AddEntitiesOptions = { loading: false }) {\n    const collection = coerceArray(entities);\n\n    if (isEmpty(collection)) return;\n\n    const data = addEntities({\n      state: this._value(),\n      preAddEntity: this.akitaPreAddEntity,\n      entities: collection,\n      idKey: this.idKey,\n      options,\n    });\n\n    if (data) {\n      isDev() && setAction('Add Entity');\n      data.newState.loading = options.loading;\n\n      this._setState(() => data.newState);\n\n      if (this.hasInitialUIState()) {\n        this.handleUICreation(true);\n      }\n\n      this.entityActions.next({ type: EntityActions.Add, ids: data.newIds });\n    }\n  }\n\n  /**\n   *\n   * Update entities\n   *\n   * @example\n   *\n   * store.update(1, entity => ...)\n   * store.update([1, 2, 3], entity => ...)\n   * store.update(null, entity => ...)\n   */\n  update(id: OrArray<IDType> | null, newStateFn: UpdateStateCallback<EntityType>);\n  /**\n   * store.update(1, { name: newName })\n   */\n  update(id: OrArray<IDType> | null, newState: Partial<EntityType>);\n  /**\n   * store.update(entity => entity.price > 3, entity => ({ name: newName }))\n   */\n  update(predicate: UpdateEntityPredicate<EntityType>, newStateFn: UpdateStateCallback<EntityType>);\n  /**\n   * store.update(entity => entity.price > 3, { name: newName })\n   */\n  update(predicate: UpdateEntityPredicate<EntityType>, newState: Partial<EntityType>);\n  /** Support non-entity updates */\n  update(newState: UpdateStateCallback<S>);\n  update(newState: Partial<S>);\n  update(\n    idsOrFnOrState: OrArray<IDType> | null | Partial<S> | UpdateStateCallback<S> | UpdateEntityPredicate<EntityType>,\n    newStateOrFn?: UpdateStateCallback<EntityType> | Partial<EntityType> | Partial<S>\n  ) {\n    if (isUndefined(newStateOrFn)) {\n      super.update(idsOrFnOrState as Partial<S>);\n      return;\n    }\n    let ids: IDType[] = [];\n\n    if (isFunction(idsOrFnOrState)) {\n      // We need to filter according the predicate function\n      ids = this.ids.filter((id) => (idsOrFnOrState as UpdateEntityPredicate<EntityType>)(this.entities[id]));\n    } else {\n      // If it's nil we want all of them\n      ids = isNil(idsOrFnOrState) ? this.ids : coerceArray(idsOrFnOrState as OrArray<IDType>);\n    }\n\n    if (isEmpty(ids)) return;\n\n    isDev() && setAction('Update Entity', ids);\n\n    let entityIdChanged:\n      | undefined\n      | {\n          newId: IDType;\n          oldId: IDType;\n        };\n\n    this._setState((state) =>\n      updateEntities({\n        idKey: this.idKey,\n        ids,\n        preUpdateEntity: this.akitaPreUpdateEntity,\n        state,\n        newStateOrFn,\n        producerFn: this._producerFn,\n        onEntityIdChanges: (oldId: IDType, newId: IDType) => {\n          entityIdChanged = { oldId, newId };\n          this.entityIdChanges.next({ ...entityIdChanged, pending: true });\n        },\n      })\n    );\n\n    if (entityIdChanged) {\n      this.entityIdChanges.next({ ...entityIdChanged, pending: false });\n    }\n\n    this.entityActions.next({ type: EntityActions.Update, ids });\n  }\n\n  /**\n   *\n   * Create or update.\n   *\n   * Warning: By omitting the initializing callback parameter onCreate(), the type safety of entities cannot be guaranteed.\n   *\n   * @example\n   *\n   * store.upsert(1, { active: true });\n   * store.upsert([2, 3], { active: true });\n   * store.upsert([2, 3], entity => ({ isOpen: !(entity?.isOpen ?? true) }))\n   *\n   */\n  upsert<NewEntityType extends Partial<EntityType>>(ids: OrArray<IDType>, newState: UpsertStateCallback<EntityType, NewEntityType> | NewEntityType, options?: { baseClass?: Constructor }): void;\n  /**\n   *\n   * Create or update\n   *\n   * @example\n   *\n   * store.upsert(1, { active: true }, (id, newState) => ({ id, ...newState, enabled: true }));\n   * store.upsert([2, 3], { active: true }, (id, newState) => ({ id, ...newState, enabled: true }));\n   * store.upsert([2, 3], entity => ({ isOpen: !(entity?.isOpen ?? true) }), (id, newState) => ({ id, ...newState, enabled: true }));\n   *\n   */\n  upsert<NewEntityType extends Partial<EntityType>>(\n    ids: OrArray<IDType>,\n    newState: UpsertStateCallback<EntityType, NewEntityType> | NewEntityType,\n    onCreate: CreateStateCallback<EntityType, NewEntityType, IDType>,\n    options?: { baseClass?: Constructor }\n  ): void;\n  @transaction()\n  upsert<NewEntityType extends Partial<EntityType>>(\n    ids: OrArray<IDType>,\n    newState: UpsertStateCallback<EntityType, NewEntityType> | NewEntityType,\n    onCreate?: CreateStateCallback<EntityType, NewEntityType, IDType> | { baseClass?: Constructor },\n    options: { baseClass?: Constructor } = {}\n  ) {\n    const toArray = coerceArray(ids);\n    const predicate = (isUpdate) => (id) => hasEntity(this.entities, id) === isUpdate;\n    const baseClass = isFunction(onCreate) ? options.baseClass : onCreate ? onCreate.baseClass : undefined;\n    const isClassBased = isFunction(baseClass);\n\n    const updateIds = toArray.filter(predicate(true));\n    const newEntities = toArray.filter(predicate(false)).map((id) => {\n      const newStateObj = typeof newState === 'function' ? newState({}) : newState;\n      const entity = isFunction(onCreate) ? onCreate(id, newStateObj) : newStateObj;\n      const withId = { ...entity, [this.idKey]: id };\n      if (isClassBased) {\n        return new baseClass(withId);\n      }\n      return withId;\n    });\n\n    // it can be any of the three types\n    this.update(updateIds, newState as UpdateStateCallback<EntityType, NewEntityType>);\n    this.add(newEntities);\n    isDev() && logAction('Upsert Entity');\n  }\n\n  /**\n   *\n   * Upsert entity collection (idKey must be present)\n   *\n   * @example\n   *\n   * store.upsertMany([ { id: 1 }, { id: 2 }]);\n   *\n   * store.upsertMany([ { id: 1 }, { id: 2 }], { loading: true  });\n   * store.upsertMany([ { id: 1 }, { id: 2 }], { baseClass: Todo  });\n   *\n   */\n  upsertMany(entities: EntityType[], options: { baseClass?: Constructor; loading?: boolean } = {}) {\n    const addedIds = [];\n    const updatedIds = [];\n    const updatedEntities = {};\n\n    // Update the state directly to optimize performance\n    for (const entity of entities) {\n      const withPreCheckHook = this.akitaPreCheckEntity(entity);\n      const id = withPreCheckHook[this.idKey];\n      if (hasEntity(this.entities, id)) {\n        const prev = this._value().entities[id];\n        const merged = { ...this._value().entities[id], ...withPreCheckHook };\n        const next = options.baseClass ? new options.baseClass(merged) : merged;\n        const withHook = this.akitaPreUpdateEntity(prev, next);\n        const nextId = withHook[this.idKey];\n        updatedEntities[nextId] = withHook;\n        updatedIds.push(nextId);\n      } else {\n        const newEntity = options.baseClass ? new options.baseClass(withPreCheckHook) : withPreCheckHook;\n        const withHook = this.akitaPreAddEntity(newEntity);\n        const nextId = withHook[this.idKey];\n        addedIds.push(nextId);\n        updatedEntities[nextId] = withHook;\n      }\n    }\n\n    isDev() && logAction('Upsert Many');\n\n    this._setState((state) => ({\n      ...state,\n      ids: addedIds.length ? [...state.ids, ...addedIds] : state.ids,\n      entities: {\n        ...state.entities,\n        ...updatedEntities,\n      },\n      loading: !!options.loading,\n    }));\n\n    updatedIds.length && this.entityActions.next({ type: EntityActions.Update, ids: updatedIds });\n    addedIds.length && this.entityActions.next({ type: EntityActions.Add, ids: addedIds });\n    if (addedIds.length && this.hasUIStore()) {\n      this.handleUICreation(true);\n    }\n  }\n\n  /**\n   *\n   * Replace one or more entities (except the id property)\n   *\n   *\n   * @example\n   *\n   * this.store.replace(5, newEntity)\n   * this.store.replace([1,2,3], newEntity)\n   */\n  replace(ids: IDS, newState: Partial<EntityType>) {\n    const toArray = coerceArray(ids);\n    if (isEmpty(toArray)) return;\n    let replaced = {};\n    for (const id of toArray) {\n      newState[this.idKey] = id;\n      replaced[id] = newState;\n    }\n    isDev() && setAction('Replace Entity', ids);\n    this._setState((state) => ({\n      ...state,\n      entities: {\n        ...state.entities,\n        ...replaced,\n      },\n    }));\n  }\n\n  /**\n   *\n   * Move entity inside the collection\n   *\n   *\n   * @example\n   *\n   * this.store.move(fromIndex, toIndex)\n   */\n  move(from: number, to: number) {\n    const ids = this.ids.slice();\n    ids.splice(to < 0 ? ids.length + to : to, 0, ids.splice(from, 1)[0]);\n\n    isDev() && setAction('Move Entity');\n    this._setState((state) => ({\n      ...state,\n      // Change the entities reference so that selectAll emit\n      entities: {\n        ...state.entities,\n      },\n      ids,\n    }));\n  }\n\n  /**\n   *\n   * Remove one or more entities\n   *\n   * @example\n   *\n   * this.store.remove(5)\n   * this.store.remove([1,2,3])\n   * this.store.remove()\n   */\n  remove(id?: OrArray<IDType>);\n  /**\n   * this.store.remove(entity => entity.id === 1)\n   */\n  remove(predicate: (entity: Readonly<EntityType>) => boolean);\n  remove(idsOrFn?: OrArray<IDType> | ((entity: Readonly<EntityType>) => boolean)) {\n    if (isEmpty(this.ids)) return;\n\n    const idPassed = isDefined(idsOrFn);\n\n    // null means remove all\n    let ids: IDType[] | null = [];\n\n    if (isFunction(idsOrFn)) {\n      ids = this.ids.filter((entityId) => idsOrFn(this.entities[entityId]));\n    } else {\n      ids = idPassed ? coerceArray(idsOrFn) : this.ids;\n    }\n\n    if (isEmpty(ids)) return;\n\n    isDev() && setAction('Remove Entity', ids);\n    this._setState((state: StateWithActive<S>) => removeEntities({ state, ids }));\n\n    if (!idPassed) {\n      this.setHasCache(false);\n    }\n\n    this.handleUIRemove(ids);\n    this.entityActions.next({ type: EntityActions.Remove, ids });\n  }\n\n  /**\n   *\n   * Update the active entity\n   *\n   * @example\n   *\n   * this.store.updateActive({ completed: true })\n   * this.store.updateActive(active => {\n   *   return {\n   *     config: {\n   *      ..active.config,\n   *      date\n   *     }\n   *   }\n   * })\n   */\n  updateActive(newStateOrCallback: UpdateStateCallback<EntityType> | Partial<EntityType>) {\n    const ids = coerceArray(this.active);\n    isDev() && setAction('Update Active', ids);\n    this.update(ids, newStateOrCallback as Partial<EntityType>);\n  }\n\n  /**\n   * Set the given entity as active\n   *\n   * @example\n   *\n   * store.setActive(1)\n   * store.setActive([1, 2, 3])\n   */\n  setActive(idOrOptions: S['active'] extends any[] ? S['active'] : SetActiveOptions | S['active']);\n  setActive(idOrOptions: IDType | SetActiveOptions | null) {\n    const active = getActiveEntities(idOrOptions, this.ids, this.active);\n\n    if (active === undefined) {\n      return;\n    }\n\n    isDev() && setAction('Set Active', active);\n    this._setActive(active);\n  }\n\n  /**\n   * Add active entities\n   *\n   * @example\n   *\n   * store.addActive(2);\n   * store.addActive([3, 4, 5]);\n   */\n  addActive<T = OrArray<IDType>>(ids: T) {\n    const toArray = coerceArray(ids);\n    if (isEmpty(toArray)) return;\n    const everyExist = toArray.every((id) => this.active.indexOf(id) > -1);\n    if (everyExist) return;\n\n    isDev() && setAction('Add Active', ids);\n    this._setState((state) => {\n      /** Protect against case that one of the items in the array exist */\n      const uniques = Array.from(new Set([...(state.active as IDType[]), ...toArray]));\n      return {\n        ...state,\n        active: uniques,\n      };\n    });\n  }\n\n  /**\n   * Remove active entities\n   *\n   * @example\n   *\n   * store.removeActive(2)\n   * store.removeActive([3, 4, 5])\n   */\n  removeActive<T = OrArray<IDType>>(ids: T) {\n    const toArray = coerceArray(ids);\n    if (isEmpty(toArray)) return;\n    const someExist = toArray.some((id) => this.active.indexOf(id) > -1);\n    if (!someExist) return;\n\n    isDev() && setAction('Remove Active', ids);\n    this._setState((state) => {\n      return {\n        ...state,\n        active: Array.isArray(state.active) ? state.active.filter((currentId) => toArray.indexOf(currentId) === -1) : null,\n      };\n    });\n  }\n\n  /**\n   * Toggle active entities\n   *\n   * @example\n   *\n   * store.toggle(2)\n   * store.toggle([3, 4, 5])\n   */\n  @transaction()\n  toggleActive<T = OrArray<IDType>>(ids: T) {\n    const toArray = coerceArray(ids);\n    const filterExists = (remove) => (id) => this.active.includes(id) === remove;\n    const remove = toArray.filter(filterExists(true));\n    const add = toArray.filter(filterExists(false));\n    this.removeActive(remove);\n    this.addActive(add);\n    isDev() && logAction('Toggle Active');\n  }\n\n  /**\n   *\n   * Create sub UI store for managing Entity's UI state\n   *\n   * @example\n   *\n   * export type ProductUI = {\n   *   isLoading: boolean;\n   *   isOpen: boolean\n   * }\n   *\n   * interface ProductsUIState extends EntityState<ProductUI> {}\n   *\n   * export class ProductsStore EntityStore<ProductsState, Product> {\n   *   ui: EntityUIStore<ProductsUIState, ProductUI>;\n   *\n   *   constructor() {\n   *     super();\n   *     this.createUIStore();\n   *   }\n   *\n   * }\n   */\n  createUIStore(initialState = {}, storeConfig: Partial<StoreConfigOptions> = {}) {\n    const defaults: Partial<StoreConfigOptions> = { name: `UI/${this.storeName}`, idKey: this.idKey };\n    this.ui = new EntityUIStore(initialState, { ...defaults, ...storeConfig });\n    return this.ui;\n  }\n\n  // @internal\n  destroy() {\n    super.destroy();\n    if (this.ui instanceof EntityStore) {\n      this.ui.destroy();\n    }\n    this.entityActions.complete();\n  }\n\n  // @internal\n  akitaPreUpdateEntity(_: Readonly<EntityType>, nextEntity: any): EntityType {\n    return nextEntity as EntityType;\n  }\n\n  // @internal\n  akitaPreAddEntity(newEntity: any): EntityType {\n    return newEntity as EntityType;\n  }\n\n  // @internal\n  akitaPreCheckEntity(newEntity: Readonly<EntityType>): EntityType {\n    return newEntity;\n  }\n\n  private get ids() {\n    return this._value().ids;\n  }\n\n  private get entities() {\n    return this._value().entities;\n  }\n\n  private get active() {\n    return this._value().active;\n  }\n\n  private _setActive(ids: OrArray<IDType>) {\n    this._setState((state) => {\n      return {\n        ...state,\n        active: ids,\n      };\n    });\n  }\n\n  private handleUICreation(add = false) {\n    const ids = this.ids;\n    const isFunc = isFunction(this.ui._akitaCreateEntityFn);\n    let uiEntities;\n    const createFn = (id) => {\n      const current = this.entities[id];\n      const ui = isFunc ? this.ui._akitaCreateEntityFn(current) : this.ui._akitaCreateEntityFn;\n      return {\n        [this.idKey]: current[this.idKey],\n        ...ui,\n      };\n    };\n\n    if (add) {\n      uiEntities = this.ids.filter((id) => isUndefined(this.ui.entities[id])).map(createFn);\n    } else {\n      uiEntities = ids.map(createFn);\n    }\n\n    add ? this.ui.add(uiEntities) : this.ui.set(uiEntities);\n  }\n\n  private hasInitialUIState() {\n    return this.hasUIStore() && isUndefined(this.ui._akitaCreateEntityFn) === false;\n  }\n\n  private handleUIRemove(ids: IDType[]) {\n    if (this.hasUIStore()) {\n      this.ui.remove(ids);\n    }\n  }\n\n  private hasUIStore() {\n    return this.ui instanceof EntityUIStore;\n  }\n}\n\n// @internal\nexport class EntityUIStore<UIState, DEPRECATED = any> extends EntityStore<UIState> {\n  _akitaCreateEntityFn: EntityUICreateFn;\n\n  constructor(initialState = {}, storeConfig: Partial<StoreConfigOptions> = {}) {\n    super(initialState, storeConfig);\n  }\n\n  /**\n   *\n   * Set the initial UI entity state. This function will determine the entity's\n   * initial state when we call `set()` or `add()`.\n   *\n   * @example\n   *\n   * constructor() {\n   *   super();\n   *   this.createUIStore().setInitialEntityState(entity => ({ isLoading: false, isOpen: true }));\n   *   this.createUIStore().setInitialEntityState({ isLoading: false, isOpen: true });\n   * }\n   *\n   */\n  setInitialEntityState<EntityUI = any, Entity = any>(createFn: EntityUICreateFn<EntityUI, Entity>) {\n    this._akitaCreateEntityFn = createFn;\n  }\n}\n","export enum Order {\n  ASC = 'asc',\n  DESC = 'desc'\n}\n\n// @internal\nexport function compareValues(key, order: Order = Order.ASC) {\n  return function(a, b) {\n    if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\n      return 0;\n    }\n\n    const varA = typeof a[key] === 'string' ? a[key].toUpperCase() : a[key];\n    const varB = typeof b[key] === 'string' ? b[key].toUpperCase() : b[key];\n\n    let comparison = 0;\n    if (varA > varB) {\n      comparison = 1;\n    } else if (varA < varB) {\n      comparison = -1;\n    }\n    return order == Order.DESC ? comparison * -1 : comparison;\n  };\n}\n","import { ID, IDS, ItemPredicate } from './types';\nimport { coerceArray } from './coerceArray';\nimport { DEFAULT_ID_KEY } from './defaultIDKey';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { MonoTypeOperatorFunction, Observable } from 'rxjs';\nimport { isArray } from './isArray';\nimport { isFunction } from './isFunction';\nimport { isEmpty } from './isEmpty';\n\n// @internal\nexport function find<T>(collection: T[], idsOrPredicate: IDS | ItemPredicate, idKey: string) {\n  const result = [];\n  if (isFunction(idsOrPredicate)) {\n    for (const entity of collection) {\n      if (idsOrPredicate(entity) === true) {\n        result.push(entity);\n      }\n    }\n  } else {\n    const toSet = coerceArray(idsOrPredicate).reduce((acc, current) => acc.add(current), new Set());\n\n    for (const entity of collection) {\n      if (toSet.has(entity[idKey])) {\n        result.push(entity);\n      }\n    }\n  }\n\n  return result;\n}\n\n// @internal\nexport function distinctUntilArrayItemChanged<T>(): MonoTypeOperatorFunction<T[]> {\n  return distinctUntilChanged((prevCollection: T[], currentCollection: T[]) => {\n    if (prevCollection === currentCollection) {\n      return true;\n    }\n\n    if (isArray(prevCollection) === false || isArray(currentCollection) === false) {\n      return false;\n    }\n\n    if (isEmpty(prevCollection) && isEmpty(currentCollection)) {\n      return true;\n    }\n\n    // if item is new in the current collection but not exist in the prev collection\n    const hasNewItem = hasChange(currentCollection, prevCollection);\n\n    if (hasNewItem) {\n      return false;\n    }\n\n    const isOneOfItemReferenceChanged = hasChange(prevCollection, currentCollection);\n\n    // return false means there is a change and we want to call next()\n    return isOneOfItemReferenceChanged === false;\n  });\n}\n\n// @internal\nfunction hasChange<T>(first: T[], second: T[]) {\n  const hasChange = second.some(currentItem => {\n    const oldItem = first.find(prevItem => prevItem === currentItem);\n    return oldItem === undefined;\n  });\n\n  return hasChange;\n}\n\n/**\n * Find items in a collection\n *\n * @example\n *\n *  selectEntity(1, 'comments').pipe(\n *   arrayFind(comment => comment.text = 'text')\n * )\n */\nexport function arrayFind<T>(ids: ItemPredicate<T>, idKey?: never): (source: Observable<T[]>) => Observable<T[]>;\n/**\n * @example\n *\n * selectEntity(1, 'comments').pipe(\n *   arrayFind(3)\n * )\n */\nexport function arrayFind<T>(ids: ID, idKey?: string): (source: Observable<T[]>) => Observable<T>;\n/**\n * @example\n *\n * selectEntity(1, 'comments').pipe(\n *   arrayFind([1, 2, 3])\n * )\n */\nexport function arrayFind<T>(ids: ID[], idKey?: string): (source: Observable<T[]>) => Observable<T[]>;\nexport function arrayFind<T>(idsOrPredicate: ID[] | ID | ItemPredicate<T>, idKey?: string): (source: Observable<T[]>) => Observable<T[] | T> {\n  return function(source: Observable<T[]>) {\n    return source.pipe(\n      map((collection: T[] | undefined | null) => {\n        // which means the user deleted the root entity or set the collection to nil\n        if (isArray(collection) === false) {\n          return collection;\n        }\n        return find(collection, idsOrPredicate, idKey || DEFAULT_ID_KEY);\n      }),\n      distinctUntilArrayItemChanged(),\n      map(value => {\n        if (isArray(value) === false) {\n          return value;\n        }\n\n        if (isArray(idsOrPredicate) || isFunction(idsOrPredicate)) {\n          return value;\n        }\n\n        return value[0];\n      })\n    );\n  };\n}\n","import { EntityState, SelectOptions } from './types';\nimport { isFunction } from './isFunction';\nimport { compareValues } from './sort';\nimport { coerceArray } from './coerceArray';\n\n// @internal\nexport function entitiesToArray<E, S extends EntityState>(state: S, options: SelectOptions<E>): E[] {\n  let arr = [];\n  const { ids, entities } = state;\n  const { filterBy, limitTo, sortBy, sortByOrder } = options;\n\n  for (let i = 0; i < ids.length; i++) {\n    const entity = entities[ids[i]];\n    if (!filterBy) {\n      arr.push(entity);\n      continue;\n    }\n\n    const toArray = coerceArray(filterBy);\n    const allPass = toArray.every(fn => fn(entity, i));\n    if (allPass) {\n      arr.push(entity);\n    }\n  }\n\n  if (sortBy) {\n    let _sortBy: any = isFunction(sortBy) ? sortBy : compareValues(sortBy, sortByOrder);\n    arr = arr.sort((a, b) => _sortBy(a, b, state));\n  }\n\n  const length = Math.min(limitTo || arr.length, arr.length);\n\n  return length === arr.length ? arr : arr.slice(0, length);\n}\n","import { EntityState } from './types';\nimport { isNil } from './isNil';\nimport { coerceArray } from './coerceArray';\n\n// @internal\nexport function entitiesToMap<S extends EntityState<E>, E>(state: S, options) {\n  const map = {};\n  const { filterBy, limitTo } = options;\n  const { ids, entities } = state;\n\n  if (!filterBy && !limitTo) {\n    return entities;\n  }\n  const hasLimit = isNil(limitTo) === false;\n\n  if (filterBy && hasLimit) {\n    let count = 0;\n    for (let i = 0, length = ids.length; i < length; i++) {\n      if (count === limitTo) break;\n      const id = ids[i];\n      const entity = entities[id];\n      const allPass = coerceArray(filterBy).every(fn => fn(entity, i));\n      if (allPass) {\n        map[id] = entity;\n        count++;\n      }\n    }\n  } else {\n    const finalLength = Math.min(limitTo || ids.length, ids.length);\n\n    for (let i = 0; i < finalLength; i++) {\n      const id = ids[i];\n      const entity = entities[id];\n\n      if (!filterBy) {\n        map[id] = entity;\n        continue;\n      }\n\n      const allPass = coerceArray(filterBy).every(fn => fn(entity, i));\n      if (allPass) {\n        map[id] = entity;\n      }\n    }\n  }\n\n  return map;\n}\n","// @internal\nexport function isString(value: any): value is string {\n  return typeof value === 'string';\n}\n","import { isUndefined } from './isUndefined';\nimport { isString } from './isString';\nimport { ItemPredicate } from './types';\n\n// @internal\nexport function findEntityByPredicate<E>(predicate: ItemPredicate<E>, entities) {\n    for(const entityId of Object.keys(entities)) {\n      if(predicate(entities[entityId]) === true) {\n        return entityId;\n      }\n    }\n\n    return undefined;\n}\n\n// @internal\nexport function getEntity( id, project ) {\n  return function(entities) {\n    const entity = entities[id];\n\n    if(isUndefined(entity)) {\n      return undefined;\n    }\n\n    if(!project) {\n      return entity;\n    }\n\n    if(isString(project)) {\n      return entity[project];\n    }\n\n    return (project as Function)(entity);\n  };\n\n}\n","// @internal\nexport function mapSkipUndefined<T, V>(arr: T[], callbackFn: (value: T, index: number, array: T[]) => V) {\n  return arr.reduce((result, value, index, array) => {\n    const val = callbackFn(value, index, array);\n    if (val !== undefined) {\n      result.push(val);\n    }\n    return result;\n  }, []);\n}\n","import { Order } from './sort';\n\nexport type SortBy<E, S = any> = ((a: E, b: E, state?: S) => number) | keyof E;\n\nexport interface SortByOptions<E> {\n  sortBy?: SortBy<E>;\n  sortByOrder?: Order;\n}\n\nexport interface QueryConfigOptions<E = any> extends SortByOptions<E> {}\n\nexport const queryConfigKey = 'akitaQueryConfig';\n\nexport function QueryConfig<E>(metadata: QueryConfigOptions<E>) {\n  return function(constructor: Function) {\n    constructor[queryConfigKey] = {};\n    for (let i = 0, keys = Object.keys(metadata); i < keys.length; i++) {\n      const key = keys[i];\n      constructor[queryConfigKey][key] = metadata[key];\n    }\n  };\n}\n","import { isFunction } from './isFunction';\n\nexport function compareKeys<T>(keysOrFuncs: any[]) {\n  return function <T>(prevState, currState) {\n    const isFns = isFunction(keysOrFuncs[0]);\n    // Return when they are NOT changed\n    return keysOrFuncs.some(keyOrFunc => {\n      if(isFns) {\n        return keyOrFunc(prevState) !== keyOrFunc(currState);\n      }\n      return prevState[keyOrFunc] !== currState[keyOrFunc];\n    }) === false;\n  };\n}\n","import { Store } from './store';\nimport { Observable } from 'rxjs';\nimport { queryConfigKey, QueryConfigOptions } from './queryConfig';\nimport { isString } from './isString';\nimport { isFunction } from './isFunction';\nimport { isDev } from './env';\nimport { __queries__ } from './stores';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { compareKeys } from './compareKeys';\nimport { ReturnTypes } from './types';\n\nexport class Query<S> {\n  // @internal\n  __store__: Store<S>;\n\n  constructor(protected store: Store<S>) {\n    this.__store__ = store;\n    if (isDev()) {\n      // @internal\n      __queries__[store.storeName] = this;\n    }\n  }\n\n  /**\n   * Select a slice from the store\n   *\n   * @example\n   *\n   * this.query.select()\n   * this.query.select(state => state.entities)\n   * this.query.select('token');\n   * this.query.select(['name', 'email'])\n   * this.query.select([state => state.name, state => state.age])\n   *\n   */\n  select<K extends keyof S>(key: K): Observable<S[K]>;\n  select<R>(project: (store: S) => R): Observable<R>;\n  select<K extends keyof S>(stateKeys: K[]): Observable<Pick<S, K>>;\n  select<R extends [(state: S) => any] | Array<(state: S) => any>>(selectorFns: R): Observable<ReturnTypes<R>>;\n  select(): Observable<S>;\n  select<R>(project?: ((store: S) => R) | keyof S | (keyof S)[] | ((state: S) => any)[]): Observable<R | S | any[]> {\n    let mapFn;\n    if (isFunction(project)) {\n      mapFn = project;\n    } else if (isString(project)) {\n      mapFn = state => state[project];\n    } else if (Array.isArray(project)) {\n      return this.store\n        ._select(state => state)\n        .pipe(\n          distinctUntilChanged(compareKeys(project)),\n          map(state => {\n            if (isFunction(project[0])) {\n              return (project as ((state: S) => any)[]).map(func => func(state));\n            }\n\n            return (project as (keyof S)[]).reduce((acc, k) => {\n              acc[k as any] = state[k];\n              return acc;\n            }, {});\n          })\n        ) as any;\n    } else {\n      mapFn = state => state;\n    }\n\n    return this.store._select(mapFn);\n  }\n\n  /**\n   * Select the loading state\n   *\n   * @example\n   *\n   * this.query.selectLoading().subscribe(isLoading => {})\n   */\n  selectLoading() {\n    return this.select(state => (state as S & { loading: boolean }).loading);\n  }\n\n  /**\n   * Select the error state\n   *\n   * @example\n   *\n   * this.query.selectError().subscribe(error => {})\n   */\n  selectError<ErrorType = any>(): Observable<ErrorType> {\n    return this.select(state => (state as S & { error: ErrorType }).error);\n  }\n\n  /**\n   * Get the store's value\n   *\n   * @example\n   *\n   * this.query.getValue()\n   *\n   */\n  getValue(): S {\n    return this.store._value();\n  }\n\n  /**\n   * Select the cache state\n   *\n   * @example\n   *\n   * this.query.selectHasCache().pipe(\n   *   switchMap(hasCache => {\n   *     return hasCache ? of() : http().pipe(res => store.set(res))\n   *   })\n   * )\n   */\n  selectHasCache(): Observable<boolean> {\n    return this.store._cache().asObservable();\n  }\n\n  /**\n   * Whether we've cached data\n   *\n   * @example\n   *\n   * this.query.getHasCache()\n   *\n   */\n  getHasCache(): boolean {\n    return this.store._cache().value;\n  }\n\n  // @internal\n  get config(): QueryConfigOptions {\n    return this.constructor[queryConfigKey];\n  }\n}\n","// @internal\nexport function sortByOptions(options, config) {\n  options.sortBy = options.sortBy || (config && config.sortBy);\n  options.sortByOrder = options.sortByOrder || (config && config.sortByOrder);\n}\n","import { Observable, of } from 'rxjs';\nimport { distinctUntilChanged, filter, map, switchMap } from 'rxjs/operators';\nimport { distinctUntilArrayItemChanged } from './arrayFind';\nimport { coerceArray } from './coerceArray';\nimport { entitiesToArray } from './entitiesToArray';\nimport { entitiesToMap } from './entitiesToMap';\nimport { EntityAction, EntityActions } from './entityActions';\nimport { EntityStore } from './entityStore';\nimport { findEntityByPredicate, getEntity } from './getEntity';\nimport { isArray } from './isArray';\nimport { isDefined } from './isDefined';\nimport { isFunction } from './isFunction';\nimport { isNil } from './isNil';\nimport { mapSkipUndefined } from './mapSkipUndefined';\nimport { Query } from './query';\nimport { QueryConfigOptions } from './queryConfig';\nimport { SelectAllOptionsA, SelectAllOptionsB, SelectAllOptionsC, SelectAllOptionsD, SelectAllOptionsE } from './selectAllOverloads';\nimport { sortByOptions } from './sortByOptions';\nimport { toBoolean } from './toBoolean';\nimport { EntityState, getEntityType, getIDType, HashMap, ItemPredicate, OrArray, SelectOptions } from './types';\n\n/**\n *\n *  The Entity Query is similar to the general Query, with additional functionality tailored for EntityStores.\n *\n *  class WidgetsQuery extends QueryEntity<WidgetsState> {\n *     constructor(protected store: WidgetsStore) {\n *       super(store);\n *     }\n *  }\n *\n *\n *\n */\nexport class QueryEntity<S extends EntityState, EntityType = getEntityType<S>, IDType = getIDType<S>> extends Query<S> {\n  ui: EntityUIQuery<any, EntityType>;\n  protected store: EntityStore<S>;\n\n  // @internal\n  __store__;\n\n  constructor(store: EntityStore<S>, private options: QueryConfigOptions = {}) {\n    super(store);\n    this.__store__ = store;\n  }\n\n  /**\n   * Select the entire store's entity collection\n   *\n   * @example\n   *\n   * this.query.selectAll()\n   *\n   * this.query.selectAll({\n   *   limitTo: 5\n   *   filterBy: entity => entity.completed === true\n   * })\n   *\n   * this.query.selectAll({\n   *   asObject: true,\n   *   limitTo: 3\n   * })\n   *\n   *  this.query.selectAll({\n   *   sortBy: 'price',\n   *   sortByOrder: Order.DESC\n   * })\n   *\n   */\n  selectAll(options: SelectAllOptionsA<EntityType>): Observable<HashMap<EntityType>>;\n  selectAll(options: SelectAllOptionsB<EntityType>): Observable<EntityType[]>;\n  selectAll(options: SelectAllOptionsC<EntityType>): Observable<HashMap<EntityType>>;\n  selectAll(options: SelectAllOptionsD<EntityType>): Observable<EntityType[]>;\n  selectAll(options: SelectAllOptionsE<EntityType>): Observable<EntityType[]>;\n  selectAll(): Observable<EntityType[]>;\n  selectAll(\n    options: SelectOptions<EntityType> = {\n      asObject: false,\n    }\n  ): Observable<EntityType[] | HashMap<EntityType>> {\n    return this.select((state) => state.entities).pipe(map(() => this.getAll(options)));\n  }\n\n  /**\n   * Get the entire store's entity collection\n   *\n   * @example\n   *\n   * this.query.getAll()\n   *\n   * this.query.getAll({\n   *   limitTo: 5\n   *   filterBy: entity => entity.completed === true\n   * })\n   *\n   * this.query.getAll({\n   *   asObject: true,\n   *   limitTo: 3\n   * })\n   *\n   *  this.query.getAll({\n   *   sortBy: 'price',\n   *   sortByOrder: Order.DESC\n   * })\n   */\n  getAll(options: SelectAllOptionsA<EntityType>): HashMap<EntityType>;\n  getAll(options: SelectAllOptionsB<EntityType>): EntityType[];\n  getAll(options: SelectAllOptionsC<EntityType>): HashMap<EntityType>;\n  getAll(options: SelectAllOptionsD<EntityType>): EntityType[];\n  getAll(options: SelectAllOptionsE<EntityType>): EntityType[];\n  getAll(): EntityType[];\n  getAll(options: SelectOptions<EntityType> = { asObject: false, filterBy: undefined, limitTo: undefined }): EntityType[] | HashMap<EntityType> {\n    if (options.asObject) {\n      return entitiesToMap(this.getValue(), options);\n    }\n    sortByOptions(options, this.config || this.options);\n\n    return entitiesToArray(this.getValue(), options);\n  }\n\n  /**\n   * Select multiple entities from the store\n   *\n   * @example\n   *\n   * this.query.selectMany([1,2,3])\n   * this.query.selectMany([1,2], entity => entity.title)\n   */\n  selectMany<R>(ids: IDType[]): Observable<EntityType[]>;\n  selectMany<R>(ids: IDType[], project: (entity: EntityType) => R): Observable<R[]>;\n  selectMany<R>(ids: IDType[], project?: (entity: EntityType) => R): Observable<EntityType[] | R[]> {\n    if (!ids || !ids.length) return of([]);\n\n    return this.select((state) => state.entities).pipe(\n      map((entities) => mapSkipUndefined(ids, (id) => getEntity(id, project)(entities))),\n      distinctUntilArrayItemChanged()\n    );\n  }\n\n  /**\n   * Select an entity or a slice of an entity\n   *\n   * @example\n   *\n   * this.query.selectEntity(1)\n   * this.query.selectEntity(1, entity => entity.config.date)\n   * this.query.selectEntity(1, 'comments')\n   * this.query.selectEntity(e => e.title === 'title')\n   *\n   */\n  selectEntity<R>(id: IDType): Observable<EntityType | undefined>;\n  selectEntity<K extends keyof EntityType>(id: IDType, project?: K): Observable<EntityType[K] | undefined>;\n  selectEntity<R>(id: IDType, project: (entity?: EntityType) => R): Observable<R>;\n  selectEntity<R>(predicate: ItemPredicate<EntityType>): Observable<EntityType | undefined>;\n  selectEntity<R>(idOrPredicate: IDType | ItemPredicate<EntityType>, project?: ((entity: EntityType) => R) | keyof EntityType): Observable<R | EntityType | undefined> {\n    let id = idOrPredicate;\n\n    if (isFunction(idOrPredicate)) {\n      // For performance reason we expect the entity to be in the store\n      (id as any) = findEntityByPredicate(idOrPredicate, this.getValue().entities);\n    }\n\n    return this.select((state) => state.entities).pipe(map(getEntity(id, project)), distinctUntilChanged());\n  }\n\n  /**\n   * Get an entity by id\n   *\n   * @example\n   *\n   * this.query.getEntity(1);\n   */\n  getEntity(id: IDType): EntityType | undefined {\n    return this.getValue().entities[id as any];\n  }\n\n  /**\n   * Select the active entity's id\n   *\n   * @example\n   *\n   * this.query.selectActiveId()\n   */\n  selectActiveId(): Observable<S['active'] | undefined> {\n    return this.select((state) => (state as S & { active: S['active'] }).active);\n  }\n\n  /**\n   * Get the active id\n   *\n   * @example\n   *\n   * this.query.getActiveId()\n   */\n  getActiveId(): S['active'] | undefined {\n    return this.getValue().active;\n  }\n\n  /**\n   * Select the active entity\n   *\n   * @example\n   *\n   * this.query.selectActive()\n   * this.query.selectActive(entity => entity.title)\n   */\n  selectActive<R>(): S['active'] extends any[] ? Observable<EntityType[]> : Observable<EntityType | undefined>;\n  selectActive<R>(project?: (entity: EntityType) => R): S['active'] extends any[] ? Observable<R[]> : Observable<R | undefined>;\n  selectActive<R>(project?: (entity: EntityType) => R): Observable<R | EntityType> | Observable<EntityType[] | R[] | undefined> {\n    if (isArray(this.getActive())) {\n      return this.selectActiveId().pipe(switchMap((ids) => this.selectMany(ids, project)));\n    }\n    return this.selectActiveId().pipe(switchMap((ids) => this.selectEntity(ids, project)));\n  }\n\n  /**\n   * Get the active entity\n   *\n   * @example\n   *\n   * this.query.getActive()\n   */\n  getActive(): S['active'] extends any[] ? EntityType[] : EntityType | undefined;\n  getActive(): OrArray<EntityType> | undefined {\n    const activeId = this.getActiveId();\n    if (isArray(activeId)) {\n      return activeId.map((id) => this.getValue().entities[id as any]);\n    }\n    return toBoolean(activeId) ? this.getEntity(activeId) : undefined;\n  }\n\n  /**\n   * Select the store's entity collection length\n   *\n   * @example\n   *\n   * this.query.selectCount()\n   * this.query.selectCount(entity => entity.completed)\n   */\n  selectCount(predicate?: (entity: EntityType, index: number) => boolean): Observable<number> {\n    return this.select((state) => state.entities).pipe(map(() => this.getCount(predicate)));\n  }\n\n  /**\n   * Get the store's entity collection length\n   *\n   * @example\n   *\n   * this.query.getCount()\n   * this.query.getCount(entity => entity.completed)\n   */\n  getCount(predicate?: (entity: EntityType, index: number) => boolean): number {\n    if (isFunction(predicate)) {\n      return this.getAll().filter(predicate).length;\n    }\n    return this.getValue().ids.length;\n  }\n\n  /**\n   *\n   * Select the last entity from the store\n   *\n   * @example\n   *\n   * this.query.selectLast()\n   * this.query.selectLast(todo => todo.title)\n   */\n  selectLast<R>(): Observable<EntityType | undefined>;\n  selectLast<R>(project: (entity?: EntityType) => R): Observable<R>;\n  selectLast<R>(project?: (entity?: EntityType) => R): Observable<R | EntityType | undefined> {\n    return this.selectAt((ids) => ids[ids.length - 1], project);\n  }\n\n  /**\n   *\n   * Select the first entity from the store\n   *\n   * @example\n   *\n   * this.query.selectFirst()\n   * this.query.selectFirst(todo => todo.title)\n   */\n  selectFirst<R>(): Observable<EntityType | undefined>;\n  selectFirst<R>(project: (entity?: EntityType) => R): Observable<R>;\n  selectFirst<R>(project?: (entity?: EntityType) => R): Observable<R | EntityType | undefined> {\n    return this.selectAt((ids) => ids[0], project);\n  }\n\n  /**\n   *\n   * Listen for entity actions\n   *\n   *  @example\n   *  this.query.selectEntityAction(EntityActions.Add);\n   *  this.query.selectEntityAction(EntityActions.Update);\n   *  this.query.selectEntityAction(EntityActions.Remove);\n   *\n   *  this.query.selectEntityAction([EntityActions.Add, EntityActions.Update, EntityActions.Remove])\n   *\n   *  this.query.selectEntityAction();\n   */\n  selectEntityAction(action: EntityActions): Observable<IDType[]>;\n  selectEntityAction(actions: EntityActions[]): Observable<EntityAction<IDType>>;\n  selectEntityAction(): Observable<EntityAction<IDType>>;\n  selectEntityAction(actionOrActions?: EntityActions | EntityActions[]): Observable<IDType[] | EntityAction<IDType>> {\n    if (isNil(actionOrActions)) {\n      return this.store.selectEntityAction$;\n    }\n\n    const project = isArray(actionOrActions) ? (action: EntityAction<IDType>) => action : ({ ids }: EntityAction<IDType>) => ids;\n    const actions = coerceArray(actionOrActions);\n\n    return this.store.selectEntityAction$.pipe(\n      filter(({ type }: EntityAction<IDType>) => actions.includes(type)),\n      map((action) => project(action))\n    );\n  }\n\n  /**\n   * Returns whether entity exists\n   *\n   * @example\n   *\n   * this.query.hasEntity(2)\n   * this.query.hasEntity(entity => entity.completed)\n   * this.query.hasEntity([1, 2, 33])\n   *\n   */\n  hasEntity(id: IDType): boolean;\n  hasEntity(id: IDType[]): boolean;\n  hasEntity(project: (entity: EntityType) => boolean): boolean;\n  hasEntity(): boolean;\n  hasEntity(projectOrIds?: IDType | IDType[] | ((entity: EntityType) => boolean)): boolean {\n    if (isNil(projectOrIds)) {\n      return this.getValue().ids.length > 0;\n    }\n\n    if (isFunction(projectOrIds)) {\n      return this.getAll().some(projectOrIds);\n    }\n\n    if (isArray(projectOrIds)) {\n      return projectOrIds.every((id) => (id as any) in this.getValue().entities);\n    }\n\n    return (projectOrIds as any) in this.getValue().entities;\n  }\n\n  /**\n   * Returns whether entity store has an active entity\n   *\n   * @example\n   *\n   * this.query.hasActive()\n   * this.query.hasActive(3)\n   *\n   */\n  hasActive(id?: IDType): boolean {\n    const active = this.getValue().active;\n    const isIdProvided = isDefined(id);\n    if (Array.isArray(active)) {\n      if (isIdProvided) {\n        return active.includes(id);\n      }\n      return active.length > 0;\n    }\n    return isIdProvided ? active === id : isDefined(active);\n  }\n\n  /**\n   *\n   * Create sub UI query for querying Entity's UI state\n   *\n   * @example\n   *\n   *\n   * export class ProductsQuery extends QueryEntity<ProductsState> {\n   *   ui: EntityUIQuery<ProductsUIState>;\n   *\n   *   constructor(protected store: ProductsStore) {\n   *     super(store);\n   *     this.createUIQuery();\n   *   }\n   *\n   * }\n   */\n  createUIQuery() {\n    this.ui = new EntityUIQuery(this.__store__.ui);\n  }\n\n  private selectAt<R>(mapFn: (ids: IDType[]) => IDType, project?: (entity?: EntityType) => R) {\n    return this.select((state) => state.ids as any[]).pipe(\n      map(mapFn),\n      distinctUntilChanged(),\n      switchMap((id: IDType) => this.selectEntity(id, project))\n    );\n  }\n}\n\n// @internal\nexport class EntityUIQuery<UIState, DEPRECATED = any> extends QueryEntity<UIState> {\n  constructor(store) {\n    super(store);\n  }\n}\n","import { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { Diff } from './types';\n\n/**\n * @example\n *\n * query.selectEntity(2).pipe(filterNil)\n */\nexport const filterNil = <T>(source: Observable<T | undefined | null>) => source.pipe(filter((value): value is Diff<T, null | undefined> => value !== null && typeof value !== 'undefined'));\n","/**\n * @internal\n *\n * @example\n *\n * getValue(state, 'todos.ui')\n *\n */\nexport function getValue( obj: any, prop: string ) {\n  /** return the whole state  */\n  if( prop.split('.').length === 1 ) {\n    return obj;\n  }\n  const removeStoreName = prop\n    .split('.')\n    .slice(1)\n    .join('.');\n  return removeStoreName.split('.').reduce(( acc: any, part: string ) => acc && acc[part], obj);\n}\n","import { isObject } from './isObject';\n\n/**\n * @internal\n *\n * @example\n * setValue(state, 'todos.ui', { filter: {} })\n */\nexport function setValue(obj: any, prop: string, val: any) {\n  const split = prop.split('.');\n\n  if (split.length === 1) {\n    return { ...obj, ...val };\n  }\n\n  obj = { ...obj };\n\n  const lastIndex = split.length - 2;\n  const removeStoreName = prop.split('.').slice(1);\n\n  removeStoreName.reduce((acc, part, index) => {\n    if (index === lastIndex) {\n      if (isObject(acc[part])) {\n        acc[part] = { ...acc[part], ...val };\n      } else {\n        acc[part] = val;\n      }\n    } else {\n      acc[part] = { ...acc[part] };\n    }\n\n    return acc && acc[part];\n  }, obj);\n\n  return obj;\n}\n","import { from, isObservable, of, OperatorFunction, ReplaySubject, Subscription } from 'rxjs';\nimport { filter, map, skip } from 'rxjs/operators';\nimport { setAction } from './actions';\nimport { $$addStore, $$deleteStore } from './dispatchers';\nimport { getValue } from './getValueByString';\nimport { isFunction } from './isFunction';\nimport { isNil } from './isNil';\nimport { isObject } from './isObject';\nimport { hasLocalStorage, hasSessionStorage, isNotBrowser } from './root';\nimport { setValue } from './setValueByString';\nimport { __stores__ } from './stores';\nimport { HashMap, MaybeAsync } from './types';\n\nlet skipStorageUpdate = false;\n\nconst _persistStateInit = new ReplaySubject(1);\n\nexport function selectPersistStateInit() {\n  return _persistStateInit.asObservable();\n}\n\nexport function setSkipStorageUpdate(skip: boolean) {\n  skipStorageUpdate = skip;\n}\n\nexport function getSkipStorageUpdate() {\n  return skipStorageUpdate;\n}\n\nexport interface PersistStateStorage {\n  getItem(key: string): MaybeAsync;\n\n  setItem(key: string, value: any): MaybeAsync;\n\n  clear(): void;\n}\n\nfunction isPromise(v: any) {\n  return v && isFunction(v.then);\n}\n\nfunction observify(asyncOrValue: any) {\n  if (isPromise(asyncOrValue) || isObservable(asyncOrValue)) {\n    return from(asyncOrValue);\n  }\n\n  return of(asyncOrValue);\n}\n\nexport type PersistStateSelectFn<T = any> = ((store: T) => Partial<T>) & { storeName: string };\n\nexport interface PersistStateParams {\n  /** The storage key */\n  key: string;\n  /** Whether to enable persistState in a non-browser environment */\n  enableInNonBrowser: boolean;\n  /** Storage strategy to use. This defaults to LocalStorage but you can pass SessionStorage or anything that implements the StorageEngine API. */\n  storage: PersistStateStorage;\n  /** Custom deserializer. Defaults to JSON.parse */\n  deserialize: Function;\n  /** Custom serializer, defaults to JSON.stringify */\n  serialize: Function;\n  /** By default the whole state is saved to storage, use this param to include only the stores you need. */\n  include: (string | ((storeName: string) => boolean))[];\n  /** By default the whole state is saved to storage, use this param to include only the data you need. */\n  select: PersistStateSelectFn[];\n\n  preStorageUpdate(storeName: string, state: any): any;\n\n  preStoreUpdate(storeName: string, state: any): any;\n\n  skipStorageUpdate: () => boolean;\n  preStorageUpdateOperator: () => OperatorFunction<any, any>;\n  /** Whether to persist a dynamic store upon destroy */\n  persistOnDestroy: boolean;\n}\n\nexport interface PersistState {\n  destroy(): void;\n  clear(): void;\n  clearStore(storeName?: string): void;\n}\n\nexport function persistState(params?: Partial<PersistStateParams>): PersistState {\n  const defaults: PersistStateParams = {\n    key: 'AkitaStores',\n    enableInNonBrowser: false,\n    storage: !hasLocalStorage() ? params.storage : localStorage,\n    deserialize: JSON.parse,\n    serialize: JSON.stringify,\n    include: [],\n    select: [],\n    persistOnDestroy: false,\n    preStorageUpdate: function (storeName, state) {\n      return state;\n    },\n    preStoreUpdate: function (storeName, state) {\n      return state;\n    },\n    skipStorageUpdate: getSkipStorageUpdate,\n    preStorageUpdateOperator: () => (source) => source,\n  };\n\n  const { storage, enableInNonBrowser, deserialize, serialize, include, select, key, preStorageUpdate, persistOnDestroy, preStorageUpdateOperator, preStoreUpdate, skipStorageUpdate } = Object.assign(\n    {},\n    defaults,\n    params\n  );\n\n  if ((isNotBrowser && !enableInNonBrowser) || !storage) return;\n\n  const hasInclude = include.length > 0;\n  const hasSelect = select.length > 0;\n  let includeStores: { fns: Function[]; [key: string]: Function[] | string };\n  let selectStores: { [key: string]: PersistStateSelectFn };\n\n  if (hasInclude) {\n    includeStores = include.reduce(\n      (acc, path) => {\n        if (isFunction(path)) {\n          acc.fns.push(path);\n        } else {\n          const storeName = path.split('.')[0];\n          acc[storeName] = path;\n        }\n        return acc;\n      },\n      { fns: [] }\n    );\n  }\n\n  if (hasSelect) {\n    selectStores = select.reduce((acc, selectFn) => {\n      acc[selectFn.storeName] = selectFn;\n\n      return acc;\n    }, {});\n  }\n\n  let stores: HashMap<Subscription> = {};\n  let acc = {};\n  let subscriptions: Subscription[] = [];\n\n  const buffer = [];\n\n  function _save(v: any) {\n    observify(v).subscribe(() => {\n      const next = buffer.shift();\n      next && _save(next);\n    });\n  }\n\n  // when we use the local/session storage we perform the serialize, otherwise we let the passed storage implementation to do it\n  const isLocalStorage = (hasLocalStorage() && storage === localStorage) || (hasSessionStorage() && storage === sessionStorage);\n\n  observify(storage.getItem(key)).subscribe((value: any) => {\n    let storageState = isObject(value) ? value : deserialize(value || '{}');\n\n    function save(storeCache) {\n      storageState['$cache'] = { ...(storageState['$cache'] || {}), ...storeCache };\n      storageState = Object.assign({}, storageState, acc);\n\n      buffer.push(storage.setItem(key, isLocalStorage ? serialize(storageState) : storageState));\n      _save(buffer.shift());\n    }\n\n    function subscribe(storeName, path) {\n      stores[storeName] = __stores__[storeName]\n        ._select((state) => getValue(state, path))\n        .pipe(\n          skip(1),\n          map((store) => {\n            if (hasSelect && selectStores[storeName]) {\n              return selectStores[storeName](store);\n            }\n\n            return store;\n          }),\n          filter(() => skipStorageUpdate() === false),\n          preStorageUpdateOperator()\n        )\n        .subscribe((data) => {\n          acc[storeName] = preStorageUpdate(storeName, data);\n          Promise.resolve().then(() => save({ [storeName]: __stores__[storeName]._cache().getValue() }));\n        });\n    }\n\n    function setInitial(storeName, store, path) {\n      if (storeName in storageState) {\n        setAction('@PersistState');\n        store._setState((state) => {\n          return setValue(state, path, preStoreUpdate(storeName, storageState[storeName]));\n        });\n        const hasCache = storageState['$cache'] ? storageState['$cache'][storeName] : false;\n        __stores__[storeName].setHasCache(hasCache, { restartTTL: true });\n      }\n    }\n\n    subscriptions.push(\n      $$deleteStore.subscribe((storeName) => {\n        if (stores[storeName]) {\n          if (persistOnDestroy === false) {\n            save({ [storeName]: false });\n          }\n          stores[storeName].unsubscribe();\n          delete stores[storeName];\n        }\n      })\n    );\n\n    subscriptions.push(\n      $$addStore.subscribe((storeName) => {\n        if (storeName === 'router') {\n          return;\n        }\n\n        const store = __stores__[storeName];\n        if (hasInclude) {\n          let path = includeStores[storeName];\n\n          if (!path) {\n            const passPredicate = includeStores.fns.some((fn) => fn(storeName));\n            if (passPredicate) {\n              path = storeName;\n            } else {\n              return;\n            }\n          }\n          setInitial(storeName, store, path);\n          subscribe(storeName, path);\n        } else {\n          setInitial(storeName, store, storeName);\n          subscribe(storeName, storeName);\n        }\n      })\n    );\n\n    _persistStateInit.next();\n  });\n\n  return {\n    destroy() {\n      subscriptions.forEach((s) => s.unsubscribe());\n      for (let i = 0, keys = Object.keys(stores); i < keys.length; i++) {\n        const storeName = keys[i];\n        stores[storeName].unsubscribe();\n      }\n      stores = {};\n    },\n    clear() {\n      storage.clear();\n    },\n    clearStore(storeName?: string) {\n      if (isNil(storeName)) {\n        const value = observify(storage.setItem(key, '{}'));\n        value.subscribe();\n        return;\n      }\n      const value = storage.getItem(key);\n      observify(value).subscribe((v) => {\n        const storageState = deserialize(v || '{}');\n\n        if (storageState[storeName]) {\n          delete storageState[storeName];\n          const value = observify(storage.setItem(key, serialize(storageState)));\n          value.subscribe();\n        }\n      });\n    },\n  };\n}\n","import { __stores__ } from './stores';\nimport { isString } from './isString';\nimport { setSkipStorageUpdate } from './persistState';\nimport { $$addStore } from './dispatchers';\nimport { filter, take } from 'rxjs/operators';\n\nexport class SnapshotManager {\n  /**\n   * Get a snapshot of the whole state or a specific stores\n   * Use it ONLY for things such as saving the state in the server\n   */\n  getStoresSnapshot(stores: string[] = []) {\n    let acc = {};\n    const hasInclude = stores.length > 0;\n    const keys = hasInclude ? stores : Object.keys(__stores__);\n    for (let i = 0; i < keys.length; i++) {\n      let storeName = keys[i];\n      if (storeName !== 'router') {\n        acc[storeName] = __stores__[storeName]._value();\n      }\n    }\n\n    return acc;\n  }\n\n  setStoresSnapshot(stores: { [storeName: string]: any } | string, options?: { skipStorageUpdate?: boolean; lazy?: boolean }) {\n    const mergedOptions = { ...{ skipStorageUpdate: false, lazy: false }, ...options };\n    mergedOptions.skipStorageUpdate && setSkipStorageUpdate(true);\n\n    let normalizedStores = stores;\n\n    if (isString(stores)) {\n      normalizedStores = JSON.parse(normalizedStores as string);\n    }\n\n    const size = Object.keys(normalizedStores).length;\n\n    if (mergedOptions.lazy) {\n      $$addStore\n        .pipe(\n          filter(name => normalizedStores.hasOwnProperty(name)),\n          take(size)\n        )\n        .subscribe(name => __stores__[name]._setState(() => normalizedStores[name]));\n    } else {\n      for (let i = 0, keys = Object.keys(normalizedStores); i < keys.length; i++) {\n        const storeName = keys[i];\n        if (__stores__[storeName]) {\n          __stores__[storeName]._setState(() => normalizedStores[storeName]);\n        }\n      }\n    }\n\n    mergedOptions.skipStorageUpdate && setSkipStorageUpdate(false);\n  }\n}\n\nexport const snapshotManager = new SnapshotManager();\n","import { QueryEntity } from '../queryEntity';\nimport { Query } from '../query';\nimport { filterNil } from '../filterNil';\nimport { toBoolean } from '../toBoolean';\nimport { getAkitaConfig } from '../config';\nimport { getValue } from '../getValueByString';\nimport { setValue } from '../setValueByString';\n\nexport type Queries<State> = Query<State> | QueryEntity<State>;\n\nexport abstract class AkitaPlugin<State = any> {\n  protected constructor(protected query: Queries<State>, config?: { resetFn?: Function }) {\n    if (config && config.resetFn) {\n      if (getAkitaConfig().resettable) {\n        this.onReset(config.resetFn);\n      }\n    }\n  }\n\n  /** This method is responsible for getting access to the query. */\n  protected getQuery() {\n    return this.query;\n  }\n\n  /** This method is responsible for getting access to the store. */\n  protected getStore() {\n    return this.getQuery().__store__;\n  }\n\n  /** This method is responsible for cleaning. */\n  public abstract destroy();\n\n  /** This method is responsible tells whether the plugin is entityBased or not.  */\n  protected isEntityBased(entityId: any) {\n    return toBoolean(entityId);\n  }\n\n  /** This method is responsible for selecting the source; it can be the whole store or one entity. */\n  protected selectSource(entityId: any, property?: string) {\n    if (this.isEntityBased(entityId)) {\n      return (this.getQuery() as QueryEntity<State>).selectEntity(entityId).pipe(filterNil);\n    }\n\n    if (property) {\n      return this.getQuery().select(state => getValue(state, this.withStoreName(property)));\n    }\n\n    return this.getQuery().select();\n  }\n\n  protected getSource(entityId: any, property?: string): any {\n    if (this.isEntityBased(entityId)) {\n      return (this.getQuery() as QueryEntity<State>).getEntity(entityId);\n    }\n\n    const state = this.getQuery().getValue();\n\n    if (property) {\n      return getValue(state, this.withStoreName(property));\n    }\n\n    return state;\n  }\n\n  protected withStoreName(prop: string) {\n    return `${this.storeName}.${prop}`;\n  }\n\n  protected get storeName() {\n    return this.getStore().storeName;\n  }\n\n  /** This method is responsible for updating the store or one entity; it can be the whole store or one entity. */\n  protected updateStore(newState, entityId?, property?: string) {\n    if (this.isEntityBased(entityId)) {\n      this.getStore().update(entityId, newState);\n    } else {\n      if (property) {\n        this.getStore()._setState(state => {\n          return setValue(state, this.withStoreName(property), newState);\n        });\n        return;\n      }\n      this.getStore()._setState(state => ({ ...state, ...newState }));\n    }\n  }\n\n  /**\n   * Function to invoke upon reset\n   */\n  private onReset(fn: Function) {\n    const original = this.getStore().reset;\n    this.getStore().reset = (...params) => {\n      /** It should run after the plugin destroy method */\n      setTimeout(() => {\n        original.apply(this.getStore(), params);\n        fn();\n      });\n    };\n  }\n}\n","import { QueryEntity } from '../../queryEntity';\nimport { delay, map, switchMap, take } from 'rxjs/operators';\nimport { BehaviorSubject, from, isObservable, Observable, Subscription } from 'rxjs';\nimport { EntityState, ID, getEntityType } from '../../types';\nimport { AkitaPlugin } from '../plugin';\nimport { applyTransaction } from '../../transaction';\nimport { isUndefined } from '../../isUndefined';\nimport { action, logAction } from '../../actions';\nimport { isNil } from '../../isNil';\n\nexport interface PaginationResponse<E> {\n  currentPage: number;\n  perPage: number;\n  lastPage: number;\n  data: E[];\n  total?: number;\n  from?: number;\n  to?: number;\n  pageControls?: number[];\n}\n\nexport type PaginatorConfig = {\n  pagesControls?: boolean;\n  range?: boolean;\n  startWith?: number;\n  cacheTimeout?: Observable<number>;\n  clearStoreWithCache?: boolean;\n};\n\nconst paginatorDefaults: PaginatorConfig = {\n  pagesControls: false,\n  range: false,\n  startWith: 1,\n  cacheTimeout: undefined,\n  clearStoreWithCache: true\n};\n\nexport class PaginatorPlugin<State extends EntityState> extends AkitaPlugin<State> {\n  /** Save current filters, sorting, etc. in cache */\n  metadata = new Map();\n\n  private page: BehaviorSubject<number>;\n  private pages = new Map<number, { ids: ID[] }>();\n  private readonly clearCacheSubscription: Subscription;\n\n  private pagination: PaginationResponse<getEntityType<State>> = {\n    currentPage: 1,\n    perPage: 0,\n    total: 0,\n    lastPage: 0,\n    data: []\n  };\n\n  /**\n   * When the user navigates to a different page and return\n   * we don't want to call `clearCache` on first time.\n   */\n  private initial = true;\n\n  constructor(protected query: QueryEntity<State>, public config: PaginatorConfig = {}) {\n    super(query, {\n      resetFn: () => {\n        this.initial = false;\n        this.destroy({ clearCache: true, currentPage: 1 });\n      }\n    });\n    this.config = Object.assign(paginatorDefaults, config);\n    const { startWith, cacheTimeout } = this.config;\n    this.page = new BehaviorSubject(startWith);\n    if (isObservable(cacheTimeout)) {\n      this.clearCacheSubscription = cacheTimeout.subscribe(() => this.clearCache());\n    }\n  }\n\n  /**\n   * Proxy to the query loading\n   */\n  isLoading$ = this.query.selectLoading().pipe(delay(0));\n\n  /**\n   * Listen to page changes\n   */\n  get pageChanges() {\n    return this.page.asObservable();\n  }\n\n  /**\n   * Get the current page number\n   */\n  get currentPage() {\n    return this.pagination.currentPage;\n  }\n\n  /**\n   * Check if current page is the first one\n   */\n  get isFirst() {\n    return this.currentPage === 1;\n  }\n\n  /**\n   * Check if current page is the last one\n   */\n  get isLast() {\n    return this.currentPage === this.pagination.lastPage;\n  }\n\n  /**\n   * Whether to generate an array of pages for *ngFor\n   * [1, 2, 3, 4]\n   */\n  withControls() {\n    this.config.pagesControls = true;\n    return this;\n  }\n\n  /**\n   * Whether to generate the `from` and `to` keys\n   * [1, 2, 3, 4]\n   */\n  withRange() {\n    this.config.range = true;\n    return this;\n  }\n\n  /**\n   * Set the loading state\n   */\n  setLoading(value = true) {\n    this.getStore().setLoading(value);\n  }\n\n  /**\n   * Update the pagination object and add the page\n   */\n  @action('@Pagination - New Page')\n  update(response: PaginationResponse<getEntityType<State>>) {\n    this.pagination = response;\n    this.addPage(response.data);\n  }\n\n  /**\n   *\n   * Set the ids and add the page to store\n   */\n  addPage(data: getEntityType<State>[]) {\n    this.pages.set(this.currentPage, { ids: data.map(entity => entity[this.getStore().idKey]) });\n    this.getStore().upsertMany(data);\n  }\n\n  /**\n   * Clear the cache.\n   */\n  clearCache(options: { clearStore?: boolean } = {}) {\n    if (!this.initial) {\n      logAction('@Pagination - Clear Cache');\n\n      if (options.clearStore !== false && (this.config.clearStoreWithCache || options.clearStore)) {\n        this.getStore().remove();\n      }\n\n      this.pages = new Map();\n      this.metadata = new Map();\n    }\n    this.initial = false;\n  }\n\n  clearPage(page: number) {\n    this.pages.delete(page);\n  }\n\n  /**\n   * Clear the cache timeout and optionally the pages\n   */\n  destroy({ clearCache, currentPage }: { clearCache?: boolean; currentPage?: number } = {}) {\n    if (this.clearCacheSubscription) {\n      this.clearCacheSubscription.unsubscribe();\n    }\n    if (clearCache) {\n      this.clearCache();\n    }\n    if (!isUndefined(currentPage)) {\n      this.setPage(currentPage);\n    }\n    this.initial = true;\n  }\n\n  /**\n   * Whether the provided page is active\n   */\n  isPageActive(page: number) {\n    return this.currentPage === page;\n  }\n\n  /**\n   * Set the current page\n   */\n  setPage(page: number) {\n    if (page !== this.currentPage || !this.hasPage(page)) {\n      this.page.next((this.pagination.currentPage = page));\n    }\n  }\n\n  /**\n   * Increment current page\n   */\n  nextPage() {\n    if (this.currentPage !== this.pagination.lastPage) {\n      this.setPage(this.pagination.currentPage + 1);\n    }\n  }\n\n  /**\n   * Decrement current page\n   */\n  prevPage() {\n    if (this.pagination.currentPage > 1) {\n      this.setPage(this.pagination.currentPage - 1);\n    }\n  }\n\n  /**\n   * Set current page to last\n   */\n  setLastPage() {\n    this.setPage(this.pagination.lastPage);\n  }\n\n  /**\n   * Set current page to first\n   */\n  setFirstPage() {\n    this.setPage(1);\n  }\n\n  /**\n   * Check if page exists in cache\n   */\n  hasPage(page: number) {\n    return this.pages.has(page);\n  }\n\n  /**\n   * Get the current page if it's in cache, otherwise invoke the request\n   */\n  getPage(req: () => Observable<PaginationResponse<getEntityType<State>>>) {\n    let page = this.pagination.currentPage;\n    if (this.hasPage(page)) {\n      return this.selectPage(page);\n    } else {\n      this.setLoading(true);\n      return from(req()).pipe(\n        switchMap((config: PaginationResponse<getEntityType<State>>) => {\n          page = config.currentPage;\n          applyTransaction(() => {\n            this.setLoading(false);\n            this.update(config);\n          });\n          return this.selectPage(page);\n        })\n      );\n    }\n  }\n\n  getQuery(): QueryEntity<State> {\n    return this.query;\n  }\n\n  refreshCurrentPage() {\n    if (isNil(this.currentPage) === false) {\n      this.clearPage(this.currentPage);\n      this.setPage(this.currentPage);\n    }\n  }\n\n  private getFrom() {\n    if (this.isFirst) {\n      return 1;\n    }\n    return (this.currentPage - 1) * this.pagination.perPage + 1;\n  }\n\n  private getTo() {\n    if (this.isLast) {\n      return this.pagination.total;\n    }\n    return this.currentPage * this.pagination.perPage;\n  }\n\n  /**\n   * Select the page\n   */\n  private selectPage(page: number): Observable<PaginationResponse<getEntityType<State>>> {\n    return this.query.selectAll({ asObject: true }).pipe(\n      take(1),\n      map(entities => {\n        let response: PaginationResponse<getEntityType<State>> = {\n          ...this.pagination,\n          data: this.pages.get(page).ids.map(id => entities[id])\n        };\n\n        const { range, pagesControls } = this.config;\n\n        /** If no total - calc it */\n        if (isNaN(this.pagination.total)) {\n          if (response.lastPage === 1) {\n            response.total = response.data ? response.data.length : 0;\n          } else {\n            response.total = response.perPage * response.lastPage;\n          }\n          this.pagination.total = response.total;\n        }\n\n        if (range) {\n          response.from = this.getFrom();\n          response.to = this.getTo();\n        }\n\n        if (pagesControls) {\n          response.pageControls = generatePages(this.pagination.total, this.pagination.perPage);\n        }\n\n        return response;\n      })\n    );\n  }\n}\n\n/**\n * Generate an array so we can ngFor them to navigate between pages\n */\nfunction generatePages(total: number, perPage: number) {\n  const len = Math.ceil(total / perPage);\n  let arr = [];\n  for (let i = 0; i < len; i++) {\n    arr.push(i + 1);\n  }\n  return arr;\n}\n\n/** backward compatibility */\nexport const Paginator = PaginatorPlugin;\n","import { AkitaPlugin } from '../plugin';\nimport { Query } from '../../query';\nimport { Observable, Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { getValue } from '../../getValueByString';\nimport { toBoolean } from '../../toBoolean';\nimport { isString } from '../../isString';\nimport { setValue } from '../../setValueByString';\nimport { logAction } from '../../actions';\n\nexport type FormGroupLike = {\n  patchValue: Function;\n  setValue: Function;\n  value: any;\n  get: Function;\n  valueChanges: Observable<any>;\n  controls: any;\n};\n\nexport type AkitaFormProp<T> = {\n  [key: string]: T;\n};\n\nexport type PersistFormParams = {\n  debounceTime?: number;\n  formKey?: string;\n  emitEvent?: boolean;\n  arrControlFactory?: ArrayControlFactory;\n};\n\nexport type ArrayControlFactory = (value: any) => any; // Todo: Return  AbstractControl interface\n\nexport class PersistNgFormPlugin<T = any> extends AkitaPlugin {\n  formChanges: Subscription;\n  private isRootKeys: boolean;\n  private form: FormGroupLike;\n  private isKeyBased: boolean;\n  private initialValue;\n  private builder;\n\n  constructor(protected query: Query<any>, private factoryFnOrPath?: Function | string, private params: PersistFormParams = {}) {\n    super(query);\n    this.params = { ...{ debounceTime: 300, formKey: 'akitaForm', emitEvent: false, arrControlFactory: v => this.builder.control(v) }, ...params };\n    this.isRootKeys = toBoolean(factoryFnOrPath) === false;\n    this.isKeyBased = isString(factoryFnOrPath) || this.isRootKeys;\n  }\n\n  setForm(form: FormGroupLike, builder?) {\n    this.form = form;\n    this.builder = builder;\n    this.activate();\n    return this;\n  }\n\n  reset(initialState?: T) {\n    let value;\n    if (initialState) {\n      value = initialState;\n    } else {\n      value = this.isKeyBased ? this.initialValue : (this as any).factoryFnOrPath();\n    }\n\n    if (this.isKeyBased) {\n      Object.keys(this.initialValue).forEach(stateKey => {\n        const value = this.initialValue[stateKey];\n        if (Array.isArray(value) && this.builder) {\n          const formArray = this.form.controls[stateKey];\n          this.cleanArray(formArray);\n          value.forEach((v, i) => {\n            this.form.get(stateKey).insert(i, (this.params.arrControlFactory as Function)(v));\n          });\n        }\n      });\n    }\n    this.form.patchValue(value, { emitEvent: this.params.emitEvent });\n\n    const storeValue = this.isKeyBased ? setValue(this.getQuery().getValue(), `${this.getStore().storeName}.${this.factoryFnOrPath}`, value) : { [this.params.formKey]: value };\n    this.updateStore(storeValue);\n  }\n\n  private cleanArray(control) {\n    while (control.length !== 0) {\n      control.removeAt(0);\n    }\n  }\n\n  private resolveInitialValue(formValue, root) {\n    if (!formValue) return;\n    return Object.keys(formValue).reduce((acc, stateKey) => {\n      const value = root[stateKey];\n      if (Array.isArray(value) && this.builder) {\n        const factory = this.params.arrControlFactory;\n        this.cleanArray(this.form.get(stateKey));\n        value.forEach((v, i) => {\n          this.form.get(stateKey).insert(i, (factory as Function)(v));\n        });\n      }\n      acc[stateKey] = root[stateKey];\n      return acc;\n    }, {});\n  }\n\n  private activate() {\n    let path;\n\n    if (this.isKeyBased) {\n      if (this.isRootKeys) {\n        this.initialValue = this.resolveInitialValue(this.form.value, this.getQuery().getValue());\n        this.form.patchValue(this.initialValue, { emitEvent: this.params.emitEvent });\n      } else {\n        path = `${this.getStore().storeName}.${this.factoryFnOrPath}`;\n        const root = getValue(this.getQuery().getValue(), path);\n        this.initialValue = this.resolveInitialValue(root, root);\n        this.form.patchValue(this.initialValue, { emitEvent: this.params.emitEvent });\n      }\n    } else {\n      if (!(this.getQuery().getValue() as AkitaFormProp<T>)[this.params.formKey]) {\n        logAction('@PersistNgFormPlugin activate');\n        this.updateStore({ [this.params.formKey]: (this as any).factoryFnOrPath() });\n      }\n\n      const value = this.getQuery().getValue()[this.params.formKey];\n      this.form.patchValue(value);\n    }\n\n    this.formChanges = this.form.valueChanges.pipe(debounceTime(this.params.debounceTime)).subscribe(value => {\n      logAction('@PersistForm - Update');\n      let newState;\n      if (this.isKeyBased) {\n        if (this.isRootKeys) {\n          newState = state => ({ ...state, ...value });\n        } else {\n          newState = state => setValue(state, path, value);\n        }\n      } else {\n        newState = () => ({ [this.params.formKey]: value });\n      }\n      this.updateStore(newState(this.getQuery().getValue()));\n    });\n  }\n\n  destroy() {\n    this.formChanges && this.formChanges.unsubscribe();\n    this.form = null;\n    this.builder = null;\n  }\n}\n","// @internal\nexport function capitalize(value: string) {\n  return value && value.charAt(0).toUpperCase() + value.slice(1);\n}\n","import { currentAction, setSkipAction } from './actions';\nimport { isDefined } from './isDefined';\nimport { $$addStore, $$deleteStore, $$updateStore } from './dispatchers';\nimport { __stores__ } from './stores';\nimport { capitalize } from './capitalize';\nimport { isNotBrowser } from './root';\n\nexport type DevtoolsOptions = {\n  /** instance name visible in devtools */\n  name: string;\n  /**  maximum allowed actions to be stored in the history tree */\n  maxAge: number;\n  latency: number;\n  actionsBlacklist: string[];\n  actionsWhitelist: string[];\n  storesWhitelist: string[];\n  shouldCatchErrors: boolean;\n  logTrace: boolean;\n  predicate: (state: any, action: any) => boolean;\n  shallow: boolean;\n  sortAlphabetically: boolean;\n};\nlet subs = [];\n\nexport type NgZoneLike = { run: any };\n\nexport function akitaDevtools(ngZone: NgZoneLike, options?: Partial<DevtoolsOptions>);\nexport function akitaDevtools(options?: Partial<DevtoolsOptions>);\nexport function akitaDevtools(ngZoneOrOptions?: NgZoneLike | Partial<DevtoolsOptions>, options: Partial<DevtoolsOptions> = {}) {\n  if (isNotBrowser) return;\n\n  if (!(window as any).__REDUX_DEVTOOLS_EXTENSION__) {\n    return;\n  }\n\n  subs.length &&\n    subs.forEach((s) => {\n      if (s.unsubscribe) {\n        s.unsubscribe();\n      } else {\n        s && s();\n      }\n    });\n\n  const isAngular = ngZoneOrOptions && ngZoneOrOptions['run'];\n\n  if (!isAngular) {\n    ngZoneOrOptions = ngZoneOrOptions || {};\n    (ngZoneOrOptions as any).run = (cb) => cb();\n    options = ngZoneOrOptions as Partial<DevtoolsOptions>;\n  }\n\n  const defaultOptions: Partial<DevtoolsOptions> & { name: string } = { name: 'Akita', shallow: true, storesWhitelist: [] };\n  const merged = Object.assign({}, defaultOptions, options);\n  const storesWhitelist = merged.storesWhitelist;\n  const devTools = (window as any).__REDUX_DEVTOOLS_EXTENSION__.connect(merged);\n  let appState = {};\n\n  const isAllowed = (storeName) => {\n    if (!storesWhitelist.length) {\n      return true;\n    }\n\n    return storesWhitelist.indexOf(storeName) > -1;\n  };\n\n  subs.push(\n    $$addStore.subscribe((storeName) => {\n      if (isAllowed(storeName) === false) return;\n      appState = {\n        ...appState,\n        [storeName]: __stores__[storeName]._value(),\n      };\n      devTools.send({ type: `[${capitalize(storeName)}] - @@INIT` }, appState);\n    })\n  );\n\n  subs.push(\n    $$deleteStore.subscribe((storeName) => {\n      if (isAllowed(storeName) === false) return;\n      delete appState[storeName];\n      devTools.send({ type: `[${storeName}] - Delete Store` }, appState);\n    })\n  );\n\n  subs.push(\n    $$updateStore.subscribe(({ storeName, action }) => {\n      if (isAllowed(storeName) === false) return;\n      const { type, entityIds, skip } = action;\n\n      if (skip) {\n        setSkipAction(false);\n        return;\n      }\n\n      const store = __stores__[storeName];\n      if (!store) {\n        return;\n      }\n\n      if (options.shallow === false && appState[storeName]) {\n        const isEqual = JSON.stringify(store._value()) === JSON.stringify(appState[storeName]);\n        if (isEqual) return;\n      }\n\n      appState = {\n        ...appState,\n        [storeName]: store._value(),\n      };\n\n      const normalize = capitalize(storeName);\n      let msg = isDefined(entityIds) ? `[${normalize}] - ${type} (ids: ${entityIds})` : `[${normalize}] - ${type}`;\n\n      if (options.logTrace) {\n        console.group(msg);\n        console.trace();\n        console.groupEnd();\n      }\n\n      if (options.sortAlphabetically) {\n        const sortedAppState = Object.keys(appState)\n          .sort()\n          .reduce((acc, storeName) => {\n            acc[storeName] = appState[storeName];\n            return acc;\n          }, {});\n\n        devTools.send({ type: msg }, sortedAppState);\n        return;\n      }\n\n      devTools.send({ type: msg }, appState);\n    })\n  );\n\n  subs.push(\n    devTools.subscribe((message) => {\n      if (message.type === 'DISPATCH') {\n        const payloadType = message.payload.type;\n\n        if (payloadType === 'COMMIT') {\n          devTools.init(appState);\n          return;\n        }\n\n        if (message.state) {\n          const rootState = JSON.parse(message.state);\n          for (let i = 0, keys = Object.keys(rootState); i < keys.length; i++) {\n            const storeName = keys[i];\n            if (__stores__[storeName]) {\n              (ngZoneOrOptions as NgZoneLike).run(() => {\n                __stores__[storeName]._setState(() => rootState[storeName], false);\n              });\n            }\n          }\n        }\n      }\n    })\n  );\n}\n","import { Observable } from 'rxjs';\nimport { EntityState, OrArray, getIDType } from '../types';\nimport { QueryEntity } from '../queryEntity';\nimport { isUndefined } from '../isUndefined';\nimport { coerceArray } from '../coerceArray';\nimport { toBoolean } from '../toBoolean';\nimport { isFunction } from '../isFunction';\n\nexport type RebaseAction<P = any> = (plugin: P) => any;\n\nexport type RebaseActions<P = any> = { beforeRemove?: RebaseAction; beforeAdd?: RebaseAction; afterAdd?: RebaseAction };\n\n/**\n * Each plugin that wants to add support for entities should extend this interface.\n */\nexport abstract class EntityCollectionPlugin<State extends EntityState, P> {\n  protected entities = new Map<getIDType<State>, P>();\n\n  protected constructor(protected query: QueryEntity<State>, private entityIds: OrArray<getIDType<State>>) {}\n\n  /**\n   * Get the entity plugin instance.\n   */\n  protected getEntity(id: getIDType<State>): P {\n    return this.entities.get(id);\n  }\n\n  /**\n   * Whether the entity plugin exist.\n   */\n  protected hasEntity(id: getIDType<State>): boolean {\n    return this.entities.has(id);\n  }\n\n  /**\n   * Remove the entity plugin instance.\n   */\n  protected removeEntity(id: getIDType<State>) {\n    this.destroy(id);\n    return this.entities.delete(id);\n  }\n\n  /**\n   * Set the entity plugin instance.\n   */\n  protected createEntity(id: getIDType<State>, plugin: P) {\n    return this.entities.set(id, plugin);\n  }\n\n  /**\n   * If the user passes `entityIds` we take them; otherwise, we take all.\n   */\n  protected getIds(): any {\n    return isUndefined(this.entityIds) ? this.query.getValue().ids : coerceArray(this.entityIds);\n  }\n\n  /**\n   * When you call one of the plugin methods, you can pass id/ids or undefined which means all.\n   */\n  protected resolvedIds(ids?): getIDType<State>[] {\n    return isUndefined(ids) ? this.getIds() : coerceArray(ids);\n  }\n\n  /**\n   * Call this method when you want to activate the plugin on init or when you need to listen to add/remove of entities dynamically.\n   *\n   * For example in your plugin you may do the following:\n   *\n   * this.query.select(state => state.ids).pipe(skip(1)).subscribe(ids => this.activate(ids));\n   */\n  protected rebase(ids: getIDType<State>[], actions: RebaseActions<P> = {}) {\n    /**\n     *\n     * If the user passes `entityIds` & we have new ids check if we need to add/remove instances.\n     *\n     * This phase will be called only upon update.\n     */\n    if (toBoolean(ids)) {\n      /**\n       * Which means all\n       */\n      if (isUndefined(this.entityIds)) {\n        for (let i = 0, len = ids.length; i < len; i++) {\n          const entityId = ids[i];\n          if (this.hasEntity(entityId) === false) {\n            isFunction(actions.beforeAdd) && actions.beforeAdd(entityId);\n            const plugin = this.instantiatePlugin(entityId);\n            this.entities.set(entityId, plugin);\n            isFunction(actions.afterAdd) && actions.afterAdd(plugin);\n          }\n        }\n\n        this.entities.forEach((plugin, entityId) => {\n          if (ids.indexOf(entityId) === -1) {\n            isFunction(actions.beforeRemove) && actions.beforeRemove(plugin);\n            this.removeEntity(entityId);\n          }\n        });\n      } else {\n        /**\n         * Which means the user passes specific ids\n         */\n        const _ids = coerceArray(this.entityIds);\n        for (let i = 0, len = _ids.length; i < len; i++) {\n          const entityId = _ids[i];\n          /** The Entity in current ids and doesn't exist, add it. */\n          if (ids.indexOf(entityId) > -1 && this.hasEntity(entityId) === false) {\n            isFunction(actions.beforeAdd) && actions.beforeAdd(entityId);\n            const plugin = this.instantiatePlugin(entityId);\n            this.entities.set(entityId, plugin);\n            isFunction(actions.afterAdd) && actions.afterAdd(plugin);\n          } else {\n            this.entities.forEach((plugin, entityId) => {\n              /** The Entity not in current ids and exists, remove it. */\n              if (ids.indexOf(entityId) === -1 && this.hasEntity(entityId) === true) {\n                isFunction(actions.beforeRemove) && actions.beforeRemove(plugin);\n                this.removeEntity(entityId);\n              }\n            });\n          }\n        }\n      }\n    } else {\n      /**\n       * Otherwise, start with the provided ids or all.\n       */\n      this.getIds().forEach(id => {\n        if (!this.hasEntity(id)) this.createEntity(id, this.instantiatePlugin(id));\n      });\n    }\n  }\n\n  /**\n   * Listen for add/remove entities.\n   */\n  protected selectIds(): Observable<any> {\n    return this.query.select(state => state.ids);\n  }\n\n  /**\n   * Base method for activation, you can override it if you need to.\n   */\n  protected activate(ids?: any[]) {\n    this.rebase(ids);\n  }\n\n  /**\n   * This method is responsible for plugin instantiation.\n   *\n   * For example:\n   * return new StateHistory(this.query, this.params, id) as P;\n   */\n  protected abstract instantiatePlugin(id: getIDType<State>): P;\n\n  /**\n   * This method is responsible for cleaning.\n   */\n  public abstract destroy(id?: getIDType<State>);\n\n  /**\n   * Loop over each id and invoke the plugin method.\n   */\n  protected forEachId(ids: OrArray<getIDType<State>>, cb: (entity: P) => any) {\n    const _ids = this.resolvedIds(ids);\n\n    for (let i = 0, len = _ids.length; i < len; i++) {\n      const id = _ids[i];\n      if (this.hasEntity(id)) {\n        cb(this.getEntity(id));\n      }\n    }\n  }\n}\n","import { pairwise, distinctUntilChanged } from 'rxjs/operators';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { AkitaPlugin, Queries } from '../plugin';\nimport { logAction } from '../../actions';\nimport { isFunction } from '../../isFunction';\n\nexport interface StateHistoryParams {\n  maxAge?: number;\n  watchProperty?: string;\n  comparator?: (prevState, currentState) => boolean;\n}\n\nexport type History<State> = {\n  past: State[];\n  present: State | null;\n  future: State[];\n};\n\nexport class StateHistoryPlugin<State = any> extends AkitaPlugin<State> {\n  /** Allow skipping an update from outside */\n  private skip = false;\n\n  private history = {\n    past: [],\n    present: null,\n    future: []\n  };\n\n  /** Skip the update when redo/undo */\n  private skipUpdate = false;\n  private subscription;\n\n  /* Subjects for supporting observable hasPast$ and hasFuture$ */\n  private hasPastSubject: BehaviorSubject<boolean>;\n  private _hasPast$: Observable<boolean>;\n  private hasFutureSubject: BehaviorSubject<boolean>;\n  private _hasFuture$: Observable<boolean>;\n\n  constructor(protected query: Queries<State>, private params: StateHistoryParams = {}, private _entityId?: any) {\n    super(query, {\n      resetFn: () => this.clear()\n    });\n    params.maxAge = !!params.maxAge ? params.maxAge : 10;\n    params.comparator = params.comparator || (() => true);\n\n    this.activate();\n  }\n\n  /**\n   * Observable stream representing whether the history plugin has an available past\n   *\n   */\n  get hasPast$(): Observable<boolean> {\n    return this._hasPast$;\n  }\n\n  /**\n   * Observable stream representing whether the history plugin has an available future\n   *\n   */\n  get hasFuture$(): Observable<boolean> {\n    return this._hasFuture$;\n  }\n\n  get hasPast() {\n    return this.history.past.length > 0;\n  }\n\n  get hasFuture() {\n    return this.history.future.length > 0;\n  }\n\n  private get property() {\n    return this.params.watchProperty;\n  }\n\n  /* Updates the hasPast$ hasFuture$ observables*/\n  private updateHasHistory() {\n    this.hasFutureSubject.next(this.hasFuture);\n    this.hasPastSubject.next(this.hasPast);\n  }\n\n  activate() {\n    this.hasPastSubject = new BehaviorSubject(false);\n    this._hasPast$ = this.hasPastSubject.asObservable().pipe(distinctUntilChanged());\n    this.hasFutureSubject = new BehaviorSubject(false);\n    this._hasFuture$ = this.hasFutureSubject.asObservable().pipe(distinctUntilChanged());\n\n    this.history.present = this.getSource(this._entityId, this.property);\n    this.subscription = (this as any)\n      .selectSource(this._entityId, this.property)\n      .pipe(pairwise())\n      .subscribe(([past, present]) => {\n        if (this.skip) {\n          this.skip = false;\n          return;\n        }\n        /**\n         *  comparator: (prev, current) => isEqual(prev, current) === false\n         */\n        const shouldUpdate = this.params.comparator(past, present);\n\n        if (!this.skipUpdate && shouldUpdate) {\n          if (this.history.past.length === this.params.maxAge) {\n            this.history.past = this.history.past.slice(1);\n          }\n          this.history.past = [...this.history.past, past];\n          this.history.present = present;\n          this.updateHasHistory();\n        }\n      });\n  }\n\n  undo() {\n    if (this.history.past.length > 0) {\n      const { past, present } = this.history;\n      const previous = past[past.length - 1];\n      this.history.past = past.slice(0, past.length - 1);\n      this.history.present = previous;\n      this.history.future = [present, ...this.history.future];\n      this.update();\n    }\n  }\n\n  redo() {\n    if (this.history.future.length > 0) {\n      const { past, present } = this.history;\n      const next = this.history.future[0];\n      const newFuture = this.history.future.slice(1);\n      this.history.past = [...past, present];\n      this.history.present = next;\n      this.history.future = newFuture;\n      this.update('Redo');\n    }\n  }\n\n  jumpToPast(index: number) {\n    if (index < 0 || index >= this.history.past.length) return;\n\n    const { past, future, present } = this.history;\n    /**\n     *\n     * const past = [1, 2, 3, 4, 5];\n     * const present = 6;\n     * const future = [7, 8, 9];\n     * const index = 2;\n     *\n     * newPast = past.slice(0, index) = [1, 2];\n     * newPresent = past[index] = 3;\n     * newFuture = [...past.slice(index + 1),present, ...future] = [4, 5, 6, 7, 8, 9];\n     *\n     */\n    const newPast = past.slice(0, index);\n    const newFuture = [...past.slice(index + 1), present, ...future];\n    const newPresent = past[index];\n    this.history.past = newPast;\n    this.history.present = newPresent;\n    this.history.future = newFuture;\n    this.update();\n  }\n\n  jumpToFuture(index: number) {\n    if (index < 0 || index >= this.history.future.length) return;\n\n    const { past, future, present } = this.history;\n    /**\n     *\n     * const past = [1, 2, 3, 4, 5];\n     * const present = 6;\n     * const future = [7, 8, 9, 10]\n     * const index = 1\n     *\n     * newPast = [...past, present, ...future.slice(0, index) = [1, 2, 3, 4, 5, 6, 7];\n     * newPresent = future[index] = 8;\n     * newFuture = futrue.slice(index+1) = [9, 10];\n     *\n     */\n\n    const newPast = [...past, present, ...future.slice(0, index)];\n    const newPresent = future[index];\n    const newFuture = future.slice(index + 1);\n    this.history.past = newPast;\n    this.history.present = newPresent;\n    this.history.future = newFuture;\n    this.update('Redo');\n  }\n\n  /**\n   *\n   * jump n steps in the past or forward\n   *\n   */\n  jump(n: number) {\n    if (n > 0) return this.jumpToFuture(n - 1);\n    if (n < 0) return this.jumpToPast(this.history.past.length + n);\n  }\n\n  /**\n   * Clear the history\n   *\n   * @param customUpdateFn Callback function for only clearing part of the history\n   *\n   * @example\n   *\n   * stateHistory.clear((history) => {\n   *  return {\n   *    past: history.past,\n   *    present: history.present,\n   *    future: []\n   *  };\n   * });\n   */\n  clear(customUpdateFn?: (history: History<State>) => History<State>) {\n    this.history = isFunction(customUpdateFn)\n      ? customUpdateFn(this.history)\n      : {\n          past: [],\n          present: null,\n          future: []\n        };\n    this.updateHasHistory();\n  }\n\n  destroy(clearHistory = false) {\n    if (clearHistory) {\n      this.clear();\n    }\n    this.subscription.unsubscribe();\n  }\n\n  ignoreNext() {\n    this.skip = true;\n  }\n\n  private update(action = 'Undo') {\n    this.skipUpdate = true;\n    logAction(`@StateHistory - ${action}`);\n    this.updateStore(this.history.present, this._entityId, this.property);\n    this.updateHasHistory();\n    this.skipUpdate = false;\n  }\n}\n","import { EntityState, OrArray, getIDType } from '../../types';\nimport { QueryEntity } from '../../queryEntity';\nimport { StateHistoryParams, StateHistoryPlugin } from './stateHistoryPlugin';\nimport { toBoolean } from '../../toBoolean';\nimport { skip } from 'rxjs/operators';\nimport { EntityCollectionPlugin } from '../entityCollectionPlugin';\n\nexport interface StateHistoryEntityParams<IDType> extends StateHistoryParams {\n  entityIds?: OrArray<IDType>;\n}\n\nexport class EntityStateHistoryPlugin<State extends EntityState = any, P extends StateHistoryPlugin<State> = StateHistoryPlugin<State>> extends EntityCollectionPlugin<State, P> {\n  constructor(protected query: QueryEntity<State>, protected readonly params: StateHistoryEntityParams<getIDType<State>> = {}) {\n    super(query, params.entityIds);\n    params.maxAge = toBoolean(params.maxAge) ? params.maxAge : 10;\n    this.activate();\n    this.selectIds()\n      .pipe(skip(1))\n      .subscribe(ids => this.activate(ids));\n  }\n\n  redo(ids?: OrArray<getIDType<State>>) {\n    this.forEachId(ids, e => e.redo());\n  }\n\n  undo(ids?: OrArray<getIDType<State>>) {\n    this.forEachId(ids, e => e.undo());\n  }\n\n  hasPast(id: getIDType<State>) {\n    if (this.hasEntity(id)) {\n      return this.getEntity(id).hasPast;\n    }\n  }\n\n  hasFuture(id: getIDType<State>) {\n    if (this.hasEntity(id)) {\n      return this.getEntity(id).hasFuture;\n    }\n  }\n\n  jumpToFuture(ids: OrArray<getIDType<State>>, index: number) {\n    this.forEachId(ids, e => e.jumpToFuture(index));\n  }\n\n  jumpToPast(ids: OrArray<getIDType<State>>, index: number) {\n    this.forEachId(ids, e => e.jumpToPast(index));\n  }\n\n  clear(ids?: OrArray<getIDType<State>>) {\n    this.forEachId(ids, e => e.clear());\n  }\n\n  destroy(ids?: OrArray<getIDType<State>>, clearHistory = false) {\n    this.forEachId(ids, e => e.destroy(clearHistory));\n  }\n\n  ignoreNext(ids?: OrArray<getIDType<State>>) {\n    this.forEachId(ids, e => e.ignoreNext());\n  }\n\n  protected instantiatePlugin(id: getIDType<State>) {\n    return new StateHistoryPlugin<State>(this.query, this.params, id) as P;\n  }\n}\n","import { AkitaPlugin, Queries } from '../plugin';\nimport { QueryEntity } from '../../queryEntity';\nimport { BehaviorSubject, combineLatest, Observable, Subject, Subscription } from 'rxjs';\nimport { distinctUntilChanged, map, skip } from 'rxjs/operators';\nimport { isUndefined } from '../../isUndefined';\nimport { Query } from '../../query';\nimport { coerceArray } from '../../coerceArray';\nimport { isFunction } from '../../isFunction';\nimport { logAction } from '../../actions';\n\ntype Head<State = any> = State | Partial<State>;\n\nexport type DirtyCheckComparator<State> = (head: State, current: State) => boolean;\n\nexport type DirtyCheckParams<StoreState = any> = {\n  comparator?: DirtyCheckComparator<StoreState>;\n  watchProperty?: keyof StoreState | (keyof StoreState)[];\n};\n\nexport const dirtyCheckDefaultParams = {\n  comparator: (head, current) => JSON.stringify(head) !== JSON.stringify(current)\n};\n\nexport function getNestedPath(nestedObj, path: string) {\n  const pathAsArray: string[] = path.split('.');\n  return pathAsArray.reduce((obj, key) => (obj && obj[key] !== 'undefined' ? obj[key] : undefined), nestedObj);\n}\n\nexport type DirtyCheckResetParams<StoreState = any> = {\n  updateFn?: StoreState | ((head: StoreState, current: StoreState) => any);\n};\n\nexport class DirtyCheckPlugin<State = any> extends AkitaPlugin<State> {\n  private head: Head<State>;\n  private dirty = new BehaviorSubject(false);\n  private subscription: Subscription;\n  private active = false;\n  private _reset = new Subject();\n\n  isDirty$: Observable<boolean> = this.dirty.asObservable().pipe(distinctUntilChanged());\n  reset$ = this._reset.asObservable();\n\n  constructor(protected query: Queries<State>, private params?: DirtyCheckParams<State>, private _entityId?: any) {\n    super(query);\n    this.params = { ...dirtyCheckDefaultParams, ...params };\n    if (this.params.watchProperty) {\n      let watchProp = coerceArray(this.params.watchProperty) as any[];\n      if (query instanceof QueryEntity && watchProp.includes('entities') && !watchProp.includes('ids')) {\n        watchProp.push('ids');\n      }\n      this.params.watchProperty = watchProp;\n    }\n  }\n\n  reset(params: DirtyCheckResetParams = {}) {\n    let currentValue = this.head;\n    if (isFunction(params.updateFn)) {\n      if (this.isEntityBased(this._entityId)) {\n        currentValue = params.updateFn(this.head, (this.getQuery() as QueryEntity<State>).getEntity(this._entityId));\n      } else {\n        currentValue = params.updateFn(this.head, (this.getQuery() as Query<State>).getValue());\n      }\n    }\n    logAction(`@DirtyCheck - Revert`);\n    this.updateStore(currentValue, this._entityId);\n    this._reset.next();\n  }\n\n  setHead() {\n    if (!this.active) {\n      this.activate();\n      this.active = true;\n    } else {\n      this.head = this._getHead();\n    }\n    this.updateDirtiness(false);\n    return this;\n  }\n\n  isDirty(): boolean {\n    return !!this.dirty.value;\n  }\n\n  hasHead() {\n    return !!this.getHead();\n  }\n\n  destroy() {\n    this.head = null;\n    this.subscription && this.subscription.unsubscribe();\n    this._reset && this._reset.complete();\n  }\n\n  isPathDirty(path: string) {\n    const head = this.getHead();\n    const current = (this.getQuery() as Query<State>).getValue();\n    const currentPathValue = getNestedPath(current, path);\n    const headPathValue = getNestedPath(head, path);\n\n    return this.params.comparator(currentPathValue, headPathValue);\n  }\n\n  protected getHead() {\n    return this.head;\n  }\n\n  private activate() {\n    this.head = this._getHead();\n    /** if we are tracking specific properties select only the relevant ones */\n    const source = this.params.watchProperty\n      ? (this.params.watchProperty as (keyof State)[]).map(prop =>\n          this.query\n            .select(state => state[prop])\n            .pipe(\n              map(val => ({\n                val,\n                __akitaKey: prop\n              }))\n            )\n        )\n      : [this.selectSource(this._entityId)];\n    this.subscription = combineLatest(...source)\n      .pipe(skip(1))\n      .subscribe((currentState: any[]) => {\n        if (isUndefined(this.head)) return;\n        /** __akitaKey is used to determine if we are tracking a specific property or a store change */\n        const isChange = currentState.some(state => {\n          const head = state.__akitaKey ? this.head[state.__akitaKey as any] : this.head;\n          const compareTo = state.__akitaKey ? state.val : state;\n\n          return this.params.comparator(head, compareTo);\n        });\n\n        this.updateDirtiness(isChange);\n      });\n  }\n\n  private updateDirtiness(isDirty: boolean) {\n    this.dirty.next(isDirty);\n  }\n\n  private _getHead(): Head<State> {\n    let head: Head<State> = this.getSource(this._entityId);\n    if (this.params.watchProperty) {\n      head = this.getWatchedValues(head as State);\n    }\n    return head;\n  }\n\n  private getWatchedValues(source: State): Partial<State> {\n    return (this.params.watchProperty as (keyof State)[]).reduce(\n      (watched, prop) => {\n        watched[prop] = source[prop];\n        return watched;\n      },\n      {} as Partial<State>\n    );\n  }\n}\n","import { EntityStore } from './entityStore';\nimport { AkitaError } from './errors';\nimport { isNil } from './isNil';\nimport { Store } from './store';\nimport { configKey } from './storeConfig';\nimport { __stores__ } from './stores';\nimport { Constructor } from './types';\n\nexport enum StoreAction {\n  Update = 'UPDATE',\n}\n\nconst StoreActionMapping = {\n  [StoreAction.Update]: 'update',\n};\n\nexport enum EntityStoreAction {\n  Update = 'UPDATE',\n  AddEntities = 'ADD_ENTITIES',\n  SetEntities = 'SET_ENTITIES',\n  UpdateEntities = 'UPDATE_ENTITIES',\n  RemoveEntities = 'REMOVE_ENTITIES',\n  UpsertEntities = 'UPSERT_ENTITIES',\n  UpsertManyEntities = 'UPSERT_MANY_ENTITIES',\n}\n\nconst EntityStoreActionMapping = {\n  [EntityStoreAction.Update]: 'update',\n  [EntityStoreAction.AddEntities]: 'add',\n  [EntityStoreAction.SetEntities]: 'set',\n  [EntityStoreAction.UpdateEntities]: 'update',\n  [EntityStoreAction.RemoveEntities]: 'remove',\n  [EntityStoreAction.UpsertEntities]: 'upsert',\n  [EntityStoreAction.UpsertManyEntities]: 'upsertMany',\n};\n\n/**\n * Get a {@link Store} from the global store registry.\n * @param storeClass The {@link Store} class of the instance to be returned.\n */\nexport function getStore<TStore extends Store<S>, S = TStore extends Store<infer T> ? T : never>(storeClass: Constructor<TStore>): TStore {\n  return getStoreByName<TStore, S>(storeClass[configKey]['storeName']);\n}\n\n/**\n * Get a {@link Store} from the global store registry.\n * @param storeName The {@link Store} name of the instance to be returned.\n */\nexport function getStoreByName<TStore extends Store<S>, S = TStore extends Store<infer T> ? T : never>(storeName: string): TStore {\n  const store = __stores__[storeName] as TStore;\n\n  if (isNil(store)) {\n    throw new AkitaError(`${store} doesn't exist`);\n  }\n\n  return store;\n}\n\n/**\n * Get a {@link EntityStore} from the global store registry.\n * @param storeClass The {@link EntityStore} class of the instance to be returned.\n */\nexport function getEntityStore<TEntityStore extends EntityStore<S>, S = TEntityStore extends EntityStore<infer T> ? T : never>(storeClass: Constructor<TEntityStore>): TEntityStore {\n  return getStore(storeClass as Constructor<Store<S>>) as TEntityStore;\n}\n\n/**\n * Get a {@link EntityStore} from the global store registry.\n * @param storeName The {@link EntityStore} name of the instance to be returned.\n */\nexport function getEntityStoreByName<TEntityStore extends EntityStore<S>, S = TEntityStore extends EntityStore<infer T> ? T : never>(storeName: string): TEntityStore {\n  return getStoreByName<TEntityStore, S>(storeName) as TEntityStore;\n}\n\n/**\n * Run {@link StoreAction.Update} action.\n * @param storeClassOrName The {@link Store} class or name in which the action should be executed.\n * @param action The {@link StoreAction.Update} action, see {@link Store.update}.\n * @param operation The operation to execute the {@link StoreAction.Update} action.\n * @example\n *\n *  runStoreAction(BooksStore, StoreAction.Update, update => update({ filter: 'COMPLETE' }));\n *\n */\nexport function runStoreAction<TStore extends Store<S>, S = TStore extends Store<infer T> ? T : any>(\n  storeClassOrName: Constructor<TStore> | string,\n  action: StoreAction.Update,\n  operation: (operator: TStore['update']) => void\n);\nexport function runStoreAction<TStore extends Store<S>, S = TStore extends Store<infer T> ? T : any>(\n  storeClassOrName: Constructor<TStore> | string,\n  action: StoreAction,\n  operation: (operator: TStore[keyof TStore] & Function) => void\n) {\n  const store = typeof storeClassOrName === 'string' ? getStoreByName<TStore, S>(storeClassOrName) : getStore<TStore, S>(storeClassOrName);\n  operation(store[StoreActionMapping[action]].bind(store));\n}\n\n/**\n * Run {@link EntityStoreAction.SetEntities} action.\n * @param storeClassOrName The {@link EntityStore} class or name in which the action should be executed.\n * @param action The {@link EntityStoreAction.SetEntities} action, see {@link EntityStore.set}.\n * @param operation The operation to execute the {@link EntityStoreAction.SetEntities} action.\n * @example\n *\n *  runEntityStoreAction(BooksStore, EntityStoreAction.SetEntities, set => set([{ id: 1 }, { id: 2 }]));\n *\n */\nexport function runEntityStoreAction<TEntityStore extends EntityStore<S>, S = TEntityStore extends EntityStore<infer T> ? T : any>(\n  storeClassOrName: Constructor<TEntityStore> | string,\n  action: EntityStoreAction.SetEntities,\n  operation: (operator: TEntityStore['set']) => void\n);\n/**\n * Run {@link EntityStoreAction.AddEntities} action.\n * @param storeClassOrName The {@link EntityStore} class or name in which the action should be executed.\n * @param action The {@link EntityStoreAction.AddEntities} action, see {@link EntityStore.add}.\n * @param operation The operation to execute the {@link EntityStoreAction.AddEntities} action.\n * @example\n *\n *  runEntityStoreAction(BooksStore, EntityStoreAction.AddEntities, add => add({ id: 1 }));\n *\n */\nexport function runEntityStoreAction<TEntityStore extends EntityStore<S>, S = TEntityStore extends EntityStore<infer T> ? T : any>(\n  storeClassOrName: Constructor<TEntityStore> | string,\n  action: EntityStoreAction.AddEntities,\n  operation: (operator: TEntityStore['add']) => void\n);\n/**\n * Run {@link EntityStoreAction.UpdateEntities} action.\n * @param storeClassOrName The {@link EntityStore} class or name in which the action should be executed.\n * @param action The {@link EntityStoreAction.UpdateEntities} action, see {@link EntityStore.update}.\n * @param operation The operation to execute the {@link EntityStoreAction.UpdateEntities} action.\n * @example\n *\n *  runEntityStoreAction(BooksStore, EntityStoreAction.UpdateEntities, update => update(2, { title: 'New title' }));\n *\n */\nexport function runEntityStoreAction<TEntityStore extends EntityStore<S>, S = TEntityStore extends EntityStore<infer T> ? T : any>(\n  storeClassOrName: Constructor<TEntityStore> | string,\n  action: EntityStoreAction.UpdateEntities,\n  operation: (operator: TEntityStore['update']) => void\n);\n/**\n * Run {@link EntityStoreAction.RemoveEntities} action.\n * @param storeClassOrName The {@link EntityStore} class or name in which the action should be executed.\n * @param action The {@link EntityStoreAction.RemoveEntities} action, see {@link EntityStore.remove}.\n * @param operation The operation to execute the {@link EntityStoreAction.RemoveEntities} action.\n * @example\n *\n *  runEntityStoreAction(BooksStore, EntityStoreAction.RemoveEntities, remove => remove(2));\n *\n */\nexport function runEntityStoreAction<TEntityStore extends EntityStore<S>, S = TEntityStore extends EntityStore<infer T> ? T : any>(\n  storeClassOrName: Constructor<TEntityStore> | string,\n  action: EntityStoreAction.RemoveEntities,\n  operation: (operator: TEntityStore['remove']) => void\n);\n/**\n * Run {@link EntityStoreAction.UpsertEntities} action.\n * @param storeClassOrName The {@link EntityStore} class or name in which the action should be executed.\n * @param action The {@link EntityStoreAction.UpsertEntities} action, see {@link EntityStore.upsert}.\n * @param operation The operation to execute the {@link EntityStoreAction.UpsertEntities} action.\n * @example\n *\n *  runEntityStoreAction(BooksStore, EntityStoreAction.UpsertEntities, upsert => upsert([2, 3], { title: 'New Title' }, (id, newState) => ({ id, ...newState, price: 0 })));\n *\n */\nexport function runEntityStoreAction<TEntityStore extends EntityStore<S>, S = TEntityStore extends EntityStore<infer T> ? T : any>(\n  storeClassOrName: Constructor<TEntityStore> | string,\n  action: EntityStoreAction.UpsertEntities,\n  operation: (operator: TEntityStore['upsert']) => void\n);\n/**\n * Run {@link EntityStoreAction.UpsertManyEntities} action.\n * @param storeClassOrName The {@link EntityStore} class or name in which the action should be executed.\n * @param action The {@link EntityStoreAction.UpsertManyEntities} action, see {@link EntityStore.upsertMany}.\n * @param operation The operation to execute the {@link EntityStoreAction.UpsertManyEntities} action.\n * @example\n *\n *  runEntityStoreAction(BooksStore, EntityStoreAction.UpsertManyEntities, upsertMany => upsertMany([\n *    { id: 2, title: 'New title', price: 0 },\n *    { id: 4, title: 'Another title', price: 0 },\n *  ));\n */\nexport function runEntityStoreAction<TEntityStore extends EntityStore<S>, S = TEntityStore extends EntityStore<infer T> ? T : any>(\n  storeClassOrName: Constructor<TEntityStore> | string,\n  action: EntityStoreAction.UpsertManyEntities,\n  operation: (operator: TEntityStore['upsertMany']) => void\n);\nexport function runEntityStoreAction<TEntityStore extends EntityStore<S>, S = TEntityStore extends EntityStore<infer T> ? T : any>(\n  storeClassOrName: Constructor<TEntityStore> | string,\n  action: EntityStoreAction,\n  operation: (operator: TEntityStore[keyof TEntityStore] & Function) => void\n) {\n  const store = typeof storeClassOrName === 'string' ? getEntityStoreByName<TEntityStore, S>(storeClassOrName) : getEntityStore<TEntityStore, S>(storeClassOrName);\n  operation(store[EntityStoreActionMapping[action]].bind(store));\n}\n","import { DirtyCheckComparator, dirtyCheckDefaultParams, DirtyCheckPlugin, DirtyCheckResetParams, getNestedPath } from './dirtyCheckPlugin';\nimport { EntityCollectionPlugin } from '../entityCollectionPlugin';\nimport { auditTime, map, skip } from 'rxjs/operators';\nimport { merge, Observable, Subject } from 'rxjs';\nimport { EntityState, OrArray, getIDType, getEntityType } from '../../types';\nimport { QueryEntity } from '../../queryEntity';\nimport { coerceArray } from '../../coerceArray';\n\nexport type DirtyCheckCollectionParams<State extends EntityState> = {\n  comparator?: DirtyCheckComparator<getEntityType<State>>;\n  entityIds?: OrArray<getIDType<State>>;\n};\n\nexport class EntityDirtyCheckPlugin<State extends EntityState = any, P extends DirtyCheckPlugin<State> = DirtyCheckPlugin<State>> extends EntityCollectionPlugin<State, P> {\n  private _someDirty = new Subject();\n  someDirty$: Observable<boolean> = merge(this.query.select(state => state.entities), this._someDirty.asObservable()).pipe(\n    auditTime(0),\n    map(() => this.checkSomeDirty())\n  );\n\n  constructor(protected query: QueryEntity<State>, private readonly params: DirtyCheckCollectionParams<State> = {}) {\n    super(query, params.entityIds);\n    this.params = { ...dirtyCheckDefaultParams, ...params };\n    // TODO lazy activate?\n    this.activate();\n    this.selectIds()\n      .pipe(skip(1))\n      .subscribe(ids => {\n        super.rebase(ids, { afterAdd: plugin => plugin.setHead() });\n      });\n  }\n\n  setHead(ids?: OrArray<getIDType<State>>) {\n    if (this.params.entityIds && ids) {\n      const toArray = coerceArray(ids) as getIDType<State>[];\n      const someAreWatched = coerceArray(this.params.entityIds).some(id => toArray.indexOf(id) > -1);\n      if (someAreWatched === false) {\n        return this;\n      }\n    }\n    this.forEachId(ids, e => e.setHead());\n    this._someDirty.next();\n    return this;\n  }\n\n  hasHead(id: getIDType<State>): boolean {\n    if (this.entities.has(id)) {\n      const entity = this.getEntity(id);\n      return entity.hasHead();\n    }\n\n    return false;\n  }\n\n  reset(ids?: OrArray<getIDType<State>>, params: DirtyCheckResetParams = {}) {\n    this.forEachId(ids, e => e.reset(params));\n  }\n\n  isDirty(id: getIDType<State>): Observable<boolean>;\n  isDirty(id: getIDType<State>, asObservable: true): Observable<boolean>;\n  isDirty(id: getIDType<State>, asObservable: false): boolean;\n  isDirty(id: getIDType<State>, asObservable = true): Observable<boolean> | boolean {\n    if (this.entities.has(id)) {\n      const entity = this.getEntity(id);\n      return asObservable ? entity.isDirty$ : entity.isDirty();\n    }\n\n    return false;\n  }\n\n  someDirty(): boolean {\n    return this.checkSomeDirty();\n  }\n\n  isPathDirty(id: getIDType<State>, path: string) {\n    if (this.entities.has(id)) {\n      const head = (this.getEntity(id) as any).getHead();\n      const current = this.query.getEntity(id);\n      const currentPathValue = getNestedPath(current, path);\n      const headPathValue = getNestedPath(head, path);\n\n      return this.params.comparator(currentPathValue, headPathValue);\n    }\n\n    return null;\n  }\n\n  destroy(ids?: OrArray<getIDType<State>>) {\n    this.forEachId(ids, e => e.destroy());\n    /** complete only when the plugin destroys */\n    if (!ids) {\n      this._someDirty.complete();\n    }\n  }\n\n  protected instantiatePlugin(id: getIDType<State>): P {\n    return new DirtyCheckPlugin(this.query, this.params, id) as P;\n  }\n\n  private checkSomeDirty(): boolean {\n    const entitiesIds = this.resolvedIds();\n    for (const id of entitiesIds) {\n      if (this.getEntity(id).isDirty()) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n","/**\n * Generate random guid\n *\n * @example\n *\n * {\n *   id: guid()\n * }\n *\n * @remarks this isn't a GUID, but a 10 char random alpha-num\n */\nexport function guid() {\n  return Math.random()\n    .toString(36)\n    .slice(2);\n}\n","import { DEFAULT_ID_KEY } from './defaultIDKey';\n\n// @internal\nexport function toEntitiesIds<E>(entities: E[], idKey = DEFAULT_ID_KEY) {\n  const ids = [];\n  for (const entity of entities) {\n    ids.push(entity[idKey]);\n  }\n  return ids;\n}\n","import { __stores__ } from './stores';\nimport { applyTransaction } from './transaction';\n\nexport interface ResetStoresParams {\n  exclude: string[];\n}\n\n/**\n * Reset stores back to their initial state\n *\n * @example\n *\n * resetStores()\n * resetStores({\n *   exclude: ['auth']\n * })\n */\nexport function resetStores(options?: Partial<ResetStoresParams>) {\n  const defaults: ResetStoresParams = {\n    exclude: []\n  };\n\n  options = Object.assign({}, defaults, options);\n  const stores = Object.keys(__stores__);\n\n  applyTransaction(() => {\n    for (const store of stores) {\n      const s = __stores__[store];\n      if (!options.exclude) {\n        s.reset();\n      } else {\n        if (options.exclude.indexOf(s.storeName) === -1) {\n          s.reset();\n        }\n      }\n    }\n  });\n}\n","import { isArray } from './isArray';\n\n// @internal\nexport function isNumber(value: any): value is number {\n  return !isArray(value) && value - parseFloat(value) + 1 >= 0;\n}\n","import { coerceArray } from './coerceArray';\nimport { DEFAULT_ID_KEY } from './defaultIDKey';\nimport { isFunction } from './isFunction';\nimport { isObject } from './isObject';\nimport { IDS, ItemPredicate } from './types';\n\n/**\n * Update item in a collection\n *\n * @example\n *\n *\n * store.update(1, entity => ({\n *   comments: arrayUpdate(entity.comments, 1, { name: 'newComment' })\n * }))\n */\nexport function arrayUpdate<T extends any[], Entity = any>(arr: T, predicateOrIds: IDS | ItemPredicate<Entity>, obj: Partial<Entity>, idKey = DEFAULT_ID_KEY): T {\n  let condition: ItemPredicate<Entity>;\n\n  if (isFunction(predicateOrIds)) {\n    condition = predicateOrIds;\n  } else {\n    const ids = coerceArray(predicateOrIds);\n    condition = (item) => ids.includes(isObject(item) ? item[idKey] : item) === true;\n  }\n\n  const updateFn = (state) =>\n    state.map((entity, index) => {\n      if (condition(entity, index) === true) {\n        return isObject(entity)\n          ? {\n              ...entity,\n              ...obj,\n            }\n          : obj;\n      }\n\n      return entity;\n    });\n\n  return updateFn(arr);\n}\n","import { OrArray } from './types';\nimport { coerceArray } from './coerceArray';\nimport { AddEntitiesOptions } from './addEntities';\n\n/**\n * Add item to a collection\n *\n * @example\n *\n *\n * store.update(state => ({\n *   comments: arrayAdd(state.comments, { id: 2 })\n * }))\n *\n */\n\nexport function arrayAdd<T extends any[], Entity = any>(arr: T, newEntity: OrArray<Entity>, options: AddEntitiesOptions = {}): T {\n  const newEntities = coerceArray(newEntity);\n  const toArr = arr || [];\n\n  return options.prepend ? [...newEntities, ...toArr] : ([...toArr, ...newEntities] as any);\n}\n","import { ID } from './types';\nimport { DEFAULT_ID_KEY } from './defaultIDKey';\nimport { arrayAdd } from './arrayAdd';\nimport { arrayUpdate } from './arrayUpdate';\nimport { isObject } from './isObject';\n\n/**\n * Upsert item in a collection\n *\n * @example\n *\n *\n * store.update(1, entity => ({\n *   comments: arrayUpsert(entity.comments, 1, { name: 'newComment' })\n * }))\n */\nexport function arrayUpsert<Root extends any[]>(arr: Root, id: ID, obj: Partial<Root[0]>, idKey = DEFAULT_ID_KEY): Root[0][] {\n  const entityIsObject = isObject(obj);\n  const entityExists = arr.some(entity => (entityIsObject ? entity[idKey] === id : entity === id));\n  if (entityExists) {\n    return arrayUpdate(arr, id, obj, idKey);\n  } else {\n    return arrayAdd(arr, entityIsObject ? { ...obj, [idKey]: id } : obj);\n  }\n}\n","// @internal\nexport function not(pred: Function): Function {\n  return function(...args) {\n    return !pred(...args);\n  };\n}\n","import { IDS, ItemPredicate } from './types';\nimport { DEFAULT_ID_KEY } from './defaultIDKey';\nimport { coerceArray } from './coerceArray';\nimport { isObject } from './isObject';\nimport { isFunction } from './isFunction';\nimport { not } from './not';\n\n/**\n * Remove item from collection\n *\n * @example\n *\n *\n * store.update(state => ({\n *   names: arrayRemove(state.names, ['one', 'second'])\n * }))\n */\nexport function arrayRemove<T extends any[], Entity = any>(arr: T, identifier: IDS | ItemPredicate<Entity>, idKey = DEFAULT_ID_KEY): T {\n  let identifiers;\n  let filterFn;\n\n  if (isFunction(identifier)) {\n    filterFn = not(identifier);\n  } else {\n    identifiers = coerceArray(identifier as IDS);\n    filterFn = (current) => {\n      return identifiers.includes(isObject(current) ? current[idKey] : current) === false;\n    };\n  }\n\n  if (Array.isArray(arr)) {\n    return arr.filter(filterFn) as any;\n  }\n}\n","/**\n * Create an array value comparator for a specific key of the value.\n * @param prop The property of the value to be compared.\n */\nexport function byKey<T>(prop: keyof T) {\n  return (a: T, b: T) => a[prop] === b[prop];\n}\n\n/**\n * Create an array value comparator for the id field of an array value.\n */\nexport function byId<T extends Record<'id', any>>() {\n  return byKey<T>('id');\n}\n\n/**\n * Adds or removes a value from an array by comparing its values. If a matching value exists it is removed, otherwise\n * it is added to the array.\n *\n * @param array The array to modify.\n * @param newValue The new value to toggle.\n * @param compare A compare function to determine equality of array values. Default is an equality test by object identity.\n */\nexport function arrayToggle<T>(array: T[], newValue: T, compare: (a: T, b: T) => boolean = (a, b) => a === b) {\n  const index = array.findIndex((oldValue) => compare(newValue, oldValue));\n  return !!~index ? [...array.slice(0, index), ...array.slice(index + 1)] : [...array, newValue];\n}\n","import { Store } from './store';\nimport { Query } from './query';\nimport { StoreConfigOptions } from './storeConfig';\nimport { EntityStore } from './entityStore';\nimport { QueryEntity } from './queryEntity';\nimport { QueryConfigOptions } from './queryConfig';\nimport { EntityState } from './types';\n\nexport function createStore<State>(initialState: Partial<State>, options: Partial<StoreConfigOptions>) {\n  return new Store<State>(initialState, options);\n}\n\nexport function createQuery<State>(store: Store<State>) {\n  return new Query<State>(store);\n}\n\nexport function createEntityStore<State extends EntityState>(initialState: Partial<State>, options: Partial<StoreConfigOptions>) {\n  return new EntityStore<State>(initialState, options);\n}\n\nexport function createEntityQuery<State extends EntityState>(store: EntityStore<State>, options: QueryConfigOptions = {}) {\n  return new QueryEntity<State>(store, options);\n}\n","import { EMPTY, Observable, of } from 'rxjs';\nimport { Store } from './store';\n\n/**\n * \n * Helper function for checking if we have data in cache\n * \n * export class ProductsService {\n *   constructor(private productsStore: ProductsStore) {}\n\n *   get(): Observable<void> {\n *     const request = this.http.get().pipe(\n *       tap(this.productsStore.set(response))\n *     );\n *\n *     return cacheable(this.productsStore, request);\n *   }\n * }\n */\nexport function cacheable<T>(store: Store, request$: Observable<T>, options: { emitNext: boolean } = { emitNext: false }): Observable<T | undefined | never> {\n  if (store._cache().value) {\n    return options.emitNext ? of(undefined) : EMPTY;\n  }\n  return request$;\n}\n","import { combineLatest, Observable, ObservableInput, ObservedValueOf } from 'rxjs';\nimport { auditTime } from 'rxjs/operators';\n\ntype ReturnTypes<T extends Observable<any>[]> = { [P in keyof T]: T[P] extends Observable<infer R> ? R : never };\ntype Observables = [Observable<any>] | Observable<any>[];\n\nexport function combineQueries<R extends Observables>(observables: R): Observable<ReturnTypes<R>> {\n  return combineLatest(observables).pipe(auditTime(0)) as any;\n}\n","import { EntityState, getEntityType, getIDType } from './types';\nimport { Observable } from 'rxjs';\n\nexport abstract class EntityService<S extends EntityState> {\n  abstract get<T>(id?: getIDType<S>, config?: any): Observable<T>;\n  abstract add<T>(entity: getEntityType<EntityState>, config?: any): Observable<T>;\n  abstract update<T>(id: getIDType<S>, entity: Partial<getEntityType<S>>, config: any): Observable<T>;\n  abstract delete<T>(id: getIDType<S>, config: any): Observable<T>;\n}\n","import { Store } from './store';\nimport { Observable, defer } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\n\nexport function setLoading(store: Store) {\n  return function<T>(source: Observable<T>) {\n    return defer(() => {\n      store.setLoading(true);\n      return source.pipe(finalize(() => store.setLoading(false)));\n    });\n  };\n}\n","import { merge, MonoTypeOperatorFunction, Observable, of, Operator, Subscriber, TeardownLogic } from 'rxjs';\nimport { filter, first, switchMap, tap } from 'rxjs/operators';\nimport { QueryEntity } from './queryEntity';\nimport { EntityState, getEntityType, getQueryEntityState } from './types';\n\n/**\n * Track id updates of an entity and re-evaluation the query with the changed entity id.\n * Hint: Don't place the operator after other operators in the same pipeline as those will be skipped on\n * re-evaluation. Also, it can't be used with the selection operator, e.g <code>selectEntity(1, e => e.title)</code>\n * @param query The query from which the entity is selected.\n * @example\n *\n *   query.selectEntity(1).pipe(trackIdChanges(query)).subscribe(entity => { ... })\n *\n */\nexport function trackIdChanges<K extends QueryEntity<S, T>, S extends EntityState<T> = getQueryEntityState<K>, T = getEntityType<S>>(query: K): MonoTypeOperatorFunction<T> {\n  return (source) => source.lift<T>(new TrackIdChanges(query));\n}\n\nclass TrackIdChanges<K extends QueryEntity<S, T>, S extends EntityState<T>, T = getEntityType<S>> implements Operator<T, T> {\n  constructor(readonly query: K) {}\n\n  call(subscriber: Subscriber<T>, source: Observable<T>): TeardownLogic {\n    return source\n      .pipe(\n        first(),\n        switchMap((entity) => {\n          let currId = entity[this.query.__store__.config.idKey];\n          let pending = false;\n\n          return merge(of({ newId: undefined, oldId: currId, pending: false }), this.query.__store__.selectEntityIdChanges$).pipe(\n            // the new id must differ form the old id\n            filter((change) => change.oldId === currId),\n            // extract the current pending state of the id update\n            tap((change) => (pending = change.pending)),\n            // only update the selection query if the id update is already applied to the store\n            filter((change) => change.newId !== currId && !pending),\n            // build a selection query for the new entity id\n            switchMap((change) =>\n              this.query\n                .selectEntity((currId = change.newId || currId))\n                // skip undefined value if pending.\n                .pipe(filter(() => !pending))\n            )\n          );\n        })\n      )\n      .subscribe(subscriber);\n  }\n}\n","const service = (store) => {\n    const login = () => {\n        store.update({\n            isLoggedIn: true\n        })\n    }\n    const logout = () => {\n        store.update({\n            isLoggedIn: false\n        })\n    }\n    return {\n        login: login,\n        logout: logout\n    }\n}\n\nexport default service","import { createStore, createQuery } from '@datorama/akita'\nimport { install } from 'riot'\nimport service from './service.js'\n\nconst store = createStore({\n    isLoggedIn: false\n}, {name: 'session' })\nconst query = createQuery(store)\nconst serviceInstance = service(store)\n\ninstall(componentAPI => {\n    componentAPI.query = query\n    componentAPI.service = serviceInstance\n    return componentAPI\n})","import '@riotjs/hot-reload'\nimport { component, register } from 'riot'\nimport { Router, Route } from '@riotjs/route'\nimport 'semantic-ui-riot'\nimport App from './app.riot'\nimport './libs'\n\nregister('router', Router)\nregister('route', Route)\ncomponent(App)(document.getElementById('app'))"]}